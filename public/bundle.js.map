{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal.mjs","../node_modules/svelte/store.mjs","../src/utils/storage.js","../src/global/Config.svelte","../src/utils/api.js","../src/auth/store.js","../src/auth/Auth.svelte","../src/auth/AuthForm.svelte","../src/auth/AuthUserCard.svelte","../src/issue/store.js","../src/issue/Issue.svelte","../src/utils/helpers.js","../src/text/TextWrapper.svelte","../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (!store || typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(component, store, callback) {\n    const unsub = store.subscribe(callback);\n    component.$$.on_destroy.push(unsub.unsubscribe\n        ? () => unsub.unsubscribe()\n        : unsub);\n}\nfunction create_slot(definition, ctx, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.ctx, definition[1](fn ? fn(ctx) : {})))\n        : ctx.$$scope.ctx;\n}\nfunction get_slot_changes(definition, ctx, changed, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.changed || {}, definition[1](fn ? fn(changed) : {})))\n        : ctx.$$scope.changed || {};\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? requestAnimationFrame : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nlet running = false;\nfunction run_tasks() {\n    tasks.forEach(task => {\n        if (!task[0](now())) {\n            tasks.delete(task);\n            task[1]();\n        }\n    });\n    running = tasks.size > 0;\n    if (running)\n        raf(run_tasks);\n}\nfunction clear_loops() {\n    // for testing...\n    tasks.forEach(task => tasks.delete(task));\n    running = false;\n}\nfunction loop(fn) {\n    let task;\n    if (!running) {\n        running = true;\n        raf(run_tasks);\n    }\n    return {\n        promise: new Promise(fulfil => {\n            tasks.add(task = [fn, fulfil]);\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction detach_between(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        before.parentNode.removeChild(before.nextSibling);\n    }\n}\nfunction detach_before(after) {\n    while (after.previousSibling) {\n        after.parentNode.removeChild(after.previousSibling);\n    }\n}\nfunction detach_after(before) {\n    while (before.nextSibling) {\n        before.parentNode.removeChild(before.nextSibling);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    for (const key in attributes) {\n        if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key in node) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            for (let j = 0; j < node.attributes.length; j += 1) {\n                const attribute = node.attributes[j];\n                if (!attributes[attribute.name])\n                    node.removeAttribute(attribute.name);\n            }\n            return nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value) {\n    node.style.setProperty(key, value);\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.type = 'text/html';\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, start: start_time = now() + delay, end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now$$1 => {\n        if (!started && now$$1 >= start_time) {\n            started = true;\n        }\n        if (started && now$$1 >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now$$1 - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        const b = node.getBoundingClientRect();\n        if (a.left !== b.left || a.top !== b.top) {\n            const style = getComputedStyle(node);\n            const transform = style.transform === 'none' ? '' : style.transform;\n            node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n        }\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_render.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_render.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = current_component;\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_binding_callback(fn) {\n    binding_callbacks.push(fn);\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nfunction flush() {\n    const seen_callbacks = new Set();\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (dirty_components.length) {\n            const component = dirty_components.shift();\n            set_current_component(component);\n            update(component.$$);\n        }\n        while (binding_callbacks.length)\n            binding_callbacks.shift()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        while (render_callbacks.length) {\n            const callback = render_callbacks.pop();\n            if (!seen_callbacks.has(callback)) {\n                callback();\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n            }\n        }\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n}\nfunction update($$) {\n    if ($$.fragment) {\n        $$.update($$.dirty);\n        run_all($$.before_render);\n        $$.fragment.p($$.dirty, $$.ctx);\n        $$.dirty = null;\n        $$.after_render.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nlet outros;\nfunction group_outros() {\n    outros = {\n        remaining: 0,\n        callbacks: []\n    };\n}\nfunction check_outros() {\n    if (!outros.remaining) {\n        run_all(outros.callbacks);\n    }\n}\nfunction on_outro(callback) {\n    outros.callbacks.push(callback);\n}\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick: tick$$1 = noop, css } = config;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick$$1(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        task = loop(now$$1 => {\n            if (running) {\n                if (now$$1 >= end_time) {\n                    tick$$1(1, 0);\n                    cleanup();\n                    return running = false;\n                }\n                if (now$$1 >= start_time) {\n                    const t = easing((now$$1 - start_time) / duration);\n                    tick$$1(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (typeof config === 'function') {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.remaining += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick: tick$$1 = noop, css } = config;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        loop(now$$1 => {\n            if (running) {\n                if (now$$1 >= end_time) {\n                    tick$$1(0, 1);\n                    if (!--group.remaining) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.callbacks);\n                    }\n                    return false;\n                }\n                if (now$$1 >= start_time) {\n                    const t = easing((now$$1 - start_time) / duration);\n                    tick$$1(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (typeof config === 'function') {\n        wait().then(() => {\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick: tick$$1 = noop, css } = config;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.remaining += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick$$1(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now$$1 => {\n                if (pending_program && now$$1 > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now$$1 >= running_program.end) {\n                        tick$$1(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.remaining)\n                                    run_all(running_program.group.callbacks);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now$$1 >= running_program.start) {\n                        const p = now$$1 - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick$$1(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (typeof config === 'function') {\n                wait().then(() => {\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = key && { [key]: value };\n        const child_ctx = assign(assign({}, info.ctx), info.resolved);\n        const block = type && (info.current = type)(child_ctx);\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        on_outro(() => {\n                            block.d(1);\n                            info.blocks[i] = null;\n                        });\n                        block.o(1);\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            if (block.i)\n                block.i(1);\n            block.m(info.mount(), info.anchor);\n            flush();\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n    }\n    if (is_promise(promise)) {\n        promise.then(value => {\n            update(info.then, 1, info.value, value);\n        }, error => {\n            update(info.catch, 2, info.error, error);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = { [info.value]: promise };\n    }\n}\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    on_outro(() => {\n        destroy_block(block, lookup);\n    });\n    block.o(1);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, changed, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(changed, child_ctx);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        if (block.i)\n            block.i(1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction measure(blocks) {\n    const rects = {};\n    let i = blocks.length;\n    while (i--)\n        rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n    return rects;\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args) {\n    const attributes = Object.assign({}, ...args);\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === undefined)\n            return;\n        if (value === true)\n            str += \" \" + name;\n        const escaped = String(value)\n            .replace(/\"/g, '&#34;')\n            .replace(/'/g, '&#39;');\n        str += \" \" + name + \"=\" + JSON.stringify(escaped);\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_render: [],\n            after_render: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.head\n            };\n        },\n        $$render\n    };\n}\nfunction get_store_value(store) {\n    let value;\n    store.subscribe(_ => value = _)();\n    return value;\n}\n\nfunction bind(component, name, callback) {\n    if (component.$$.props.indexOf(name) === -1)\n        return;\n    component.$$.bound[name] = callback;\n    callback(component.$$.ctx[name]);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_render } = component.$$;\n    fragment.m(target, anchor);\n    // onMount happens after the initial afterUpdate. Because\n    // afterUpdate callbacks happen in reverse order (inner first)\n    // we schedule onMount callbacks before afterUpdate callbacks\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_render.forEach(add_render_callback);\n}\nfunction destroy(component, detaching) {\n    if (component.$$) {\n        run_all(component.$$.on_destroy);\n        component.$$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        component.$$.on_destroy = component.$$.fragment = null;\n        component.$$.ctx = {};\n    }\n}\nfunction make_dirty(component, key) {\n    if (!component.$$.dirty) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty = blank_object();\n    }\n    component.$$.dirty[key] = true;\n}\nfunction init(component, options, instance, create_fragment, not_equal$$1, prop_names) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const props = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props: prop_names,\n        update: noop,\n        not_equal: not_equal$$1,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_render: [],\n        after_render: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty: null\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, props, (key, value) => {\n            if ($$.ctx && not_equal$$1($$.ctx[key], $$.ctx[key] = value)) {\n                if ($$.bound[key])\n                    $$.bound[key](value);\n                if (ready)\n                    make_dirty(component, key);\n            }\n        })\n        : props;\n    $$.update();\n    ready = true;\n    run_all($$.before_render);\n    $$.fragment = create_fragment($$.ctx);\n    if (options.target) {\n        if (options.hydrate) {\n            $$.fragment.l(children(options.target));\n        }\n        else {\n            $$.fragment.c();\n        }\n        if (options.intro && component.$$.fragment.i)\n            component.$$.fragment.i();\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement !== 'undefined') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr$$1, oldValue, newValue) {\n            this[attr$$1] = newValue;\n        }\n        $destroy() {\n            destroy(this, true);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy(this, true);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\n\nexport { create_animation, fix_position, handle_promise, append, insert, detach, detach_between, detach_before, detach_after, destroy_each, element, object_without_properties, svg_element, text, space, empty, listen, prevent_default, stop_propagation, attr, set_attributes, set_custom_element_data, xlink_attr, get_binding_group_value, to_number, time_ranges_to_array, children, claim_element, claim_text, set_data, set_input_type, set_style, select_option, select_options, select_value, select_multiple_value, add_resize_listener, toggle_class, custom_event, destroy_block, outro_and_destroy_block, fix_and_outro_and_destroy_block, update_keyed_each, measure, current_component, set_current_component, beforeUpdate, onMount, afterUpdate, onDestroy, createEventDispatcher, setContext, getContext, bubble, clear_loops, loop, dirty_components, intros, schedule_update, tick, add_binding_callback, add_render_callback, add_flush_callback, flush, get_spread_update, invalid_attribute_name_character, spread, escaped, escape, each, missing_component, validate_component, debug, create_ssr_component, get_store_value, group_outros, check_outros, on_outro, create_in_transition, create_out_transition, create_bidirectional_transition, noop, identity, assign, is_promise, add_location, run, blank_object, run_all, is_function, safe_not_equal, not_equal, validate_store, subscribe, create_slot, get_slot_context, get_slot_changes, exclude_internal_props, now, raf, set_now, set_raf, bind, mount_component, init, SvelteElement, SvelteComponent, SvelteComponentDev };\n","import { noop, safe_not_equal, run_all, is_function } from './internal';\n\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (!stop) {\n                return; // not ready\n            }\n            subscribers.forEach((s) => s[1]());\n            subscribers.forEach((s) => s[0](value));\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n * @param {Stores} stores input stores\n * @param {function(Stores=, function(*)=):*}fn function callback that aggregates the values\n * @param {*=}initial_value when used asynchronously\n */\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => store.subscribe((value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n * @param store readable\n */\nfunction get(store) {\n    let value;\n    store.subscribe((_) => value = _)();\n    return value;\n}\n\nexport { readable, writable, derived, get };\n","import { writable, get } from 'svelte/store';\n\nconst storageKey = (key) => `__jira-${key}`;\n\nexport const readData = (key) => localStorage.getItem(storageKey(key));\nexport const hydrateData = (key, value) => localStorage.setItem(storageKey(key), value || '');\nexport const deleteData = (key) => localStorage.removeItem(storageKey(key));\n\nexport const createSavedStoreFor = (key) => {\n  const store = writable(readData(key));\n\n  store.subscribe(v => {\n    hydrateData(key, v)\n  });\n\n  return store;\n}","<script>\n  import { onMount, tick } from'svelte';\n  import { hydrateData } from '../utils/storage.js';\n\n  export let cors;\n\n  onMount(async () => {\n    await tick();\n    hydrateData('cors', cors);\n  });\n</script>\n\n<svelte:options tag=\"jira-global-config\"/>","import { readData } from './storage.js';\n\nconst getHeaders = () => ({\n  'accept': 'application/json',\n  'aontent-type': 'application/json',\n  'authorization': `Basic ${btoa(readData('email')+':'+readData('apiKey'))}`,\n});\n\nexport const tick = async (time) => (new Promise((resolve, reject) => { setTimeout(resolve, time); }));\n\nexport const fetchApi = async (url) => {\n  const corsUrl = readData('cors');\n  if (!corsUrl) {\n    return Promise.reject('No CORS server URL specified!');\n  }\n  const baseUrl = readData('url');\n  if (!baseUrl || !url) {\n    return Promise.reject('No URL specified!');\n  }\n  try {\n    const rawResponse = await fetch(`${corsUrl}/${baseUrl}${url}`, {\n      method: 'GET',\n      headers: getHeaders()\n    });\n    try {\n      const content = await rawResponse.json();\n      return content;\n    } catch(error) {\n      return Promise.reject(error);\n    }\n  } catch(error) {\n    return Promise.reject(error);\n  }\n}","import { writable, get } from 'svelte/store';\nimport { fetchApi, tick } from '../utils/api.js';\nimport { createSavedStoreFor } from '../utils/storage.js';\n\nconst fetchAuthUser = async () => {\n  await tick(100);\n  if (!get(authUserIsFetching)) {\n    authUserIsFetching.set(true);\n    try {\n      const { accountId, key, name, emailAddress, displayName, avatarUrls } = await fetchApi('/rest/api/3/myself');\n      authUser.set({ accountId, key, name, emailAddress, displayName, avatar: avatarUrls['48x48'] });\n      authUserIsFetching.set(false);\n    } catch(error) {\n      authUser.set(emptyUser);\n      authUserIsFetching.set(false);\n    }\n  }\n};\n\nexport const emptyUser = {\n  accountId: '',\n  key: '',\n  name: '',\n  emailAddress: '',\n  avatar: '',\n  displayName: '',\n};\n\nexport let authUserIsFetching = writable(false);\n\nexport let isAuthenticated = writable(false);\n\nexport const email = createSavedStoreFor('email');\n\nexport const apiKey = createSavedStoreFor('apiKey');\n\nexport const url = createSavedStoreFor('url');\n\nexport const authUser = writable(emptyUser);\n\nauthUser.subscribe(v => {\n  isAuthenticated.set(!!v.accountId);\n});\n\nemail.subscribe(v => {\n  fetchAuthUser();\n});\n\napiKey.subscribe(v => {\n  fetchAuthUser();\n});\n\nurl.subscribe(v => {\n  fetchAuthUser();\n});","<script>\n  import { createEventDispatcher } from 'svelte';\n  import { get } from 'svelte/store';\n  import { email, apiKey, url, authUser, authUserIsFetching } from './store.js';\n\n  const dispatch = createEventDispatcher();\n\n  export let setEmail = (v) => email.set(v);\n  export let setApiKey = (v) => apiKey.set(v);\n  export let setUrl = (v) => url.set(v);\n  export let getUserData = () => get(authUser);\n\n  export let getEmail = () => $email;\n  export let getApiKey = () => $apiKey;\n  export let getUrl = () => $url;\n\n  export let isAuthenticated = () => !!$authUser.accountId;\n\n  authUser.subscribe(user => {\n    dispatch('jira-auth-user-changed', user);\n    dispatch('jira-auth-status-changed', !!user.accountId);\n  });\n\n  authUserIsFetching.subscribe(v => dispatch('jira-auth-user-fetching-changed', v));\n  email.subscribe(v => dispatch('jira-auth-email-changed', v));\n  apiKey.subscribe(v => dispatch('jira-auth-apikey-changed', v));\n  url.subscribe(v => dispatch('jira-auth-url-changed', v));\n\n  export let reset = () => {\n    setEmail('');\n    setApiKey('');\n    setUrl('');\n  }\n</script>\n\n<svelte:options tag=\"jira-auth\"/>","<script>\n  import { onMount } from 'svelte';\n  import { emptyUser } from './store.js';\n  import Auth from './Auth.svelte';\n\n  let authComponent;\n  let fetching = false;\n  let user = emptyUser;\n  let authenticated = false;\n\n  let email = '';\n  let apiKey = '';\n  let url = '';\n\n  function onIsFechingChanged(e) {\n    fetching = e.detail;\n  }\n\n  function onUserChanged(e) {\n    user = e.detail;\n  }\n\n  function onAuthStatusChanged(e) {\n    authenticated = e.detail;\n  }\n\n  function onEmailChanged(e) {\n    email = e.detail;\n  }\n\n  function onApiKeyChanged(e) {\n    apiKey = e.detail;\n  }\n\n  function onUrlChanged(e) {\n    url = e.detail;\n  }\n\n  function save() {\n    authComponent.setEmail(email);\n    authComponent.setApiKey(apiKey);\n    authComponent.setUrl(url);\n  }\n\n  function reset() {\n    authComponent.reset();\n    email = '';\n    apiKey = '';\n    url = '';\n  }\n\n  onMount(() => {\n    email = authComponent.getEmail();\n    apiKey = authComponent.getApiKey();\n    url = authComponent.getUrl();\n    authenticated = authComponent.isAuthenticated();\n  });\n</script>\n\n<style>\n  @import \"bulma.css\";\n</style>\n\n<svelte:options tag=\"jira-auth-form\" />\n\n<Auth\n  bind:this={authComponent}\n  on:jira-auth-user-changed={onUserChanged}\n  on:jira-auth-user-fetching-changed={onIsFechingChanged}\n  on:jira-auth-status-changed={onAuthStatusChanged}\n  on:jira-auth-email-changed={onEmailChanged}\n  on:jira-auth-api-key-changed={onApiKeyChanged}\n  on:jira-auth-url-changed={onUrlChanged} />\n\n<div class=\"box card container is-fluid is-paddingless\">\n  <header class=\"card-header\">\n    <p class=\"card-header-title\">\n      JiRa authentication\n    </p>\n  </header>\n  <div class=\"card-content\">\n    <div class=\"content\">\n      {#if !authenticated}\n      <div class=\"notification is-warning\">\n        Authentication error, please enter valid data.\n      </div>\n      {:else}\n      <div class=\"notification is-success\">\n        You are authenticated as @{user.name}.\n      </div>\n      {/if}\n      <div class=\"form-horizontal\" >\n        <fieldset>\n          <div class=\"field\">\n            <label class=\"label\" for=\"jira-email\">E-mail</label>\n            <div class=\"control\">\n              <input bind:value={email} id=\"jira-email\" name=\"jira-email\" type=\"text\" placeholder=\"E-mail\" class=\"input is-medium\" required=\"\">\n              <p class=\"help\">Your JiRa login E-mail.</p>\n            </div>\n          </div>\n\n          <div class=\"field\">\n            <label class=\"label\" for=\"jira-api-key\">Api key</label>\n            <div class=\"control\">\n              <input bind:value={apiKey} id=\"jira-api-key\" name=\"jira-api-key\" type=\"password\" placeholder=\"Api key\" class=\"input is-medium\" required=\"\">\n              <p class=\"help\">Create an API token <a target=\"_blank\" href=\"https://id.atlassian.com/manage/api-tokens\">here</a>.</p>\n            </div>\n          </div>\n\n          <div class=\"field\">\n            <label class=\"label\" for=\"jira-url\">URL to JiRa</label>\n            <div class=\"control\">\n              <input bind:value={url} id=\"jira-url\" name=\"jira-url\" type=\"text\" placeholder=\"URL to JiRa\" class=\"input is-medium\" required=\"\">\n              <p class=\"help\">Use the URL to your company JiRa account (E.g: https://your-company.jira.net).</p>\n            </div>\n          </div>\n        </fieldset>\n      </div>\n    </div>\n  </div>\n  <footer class=\"card-footer\">\n    <span class=\"card-footer-item\">\n      <button on:click={save} class=\"button is-primary\" class:is-loading={fetching} disabled={fetching || !email || !apiKey || !url}>{fetching ? 'Fetching user...' : 'Authenticate'}</button>\n    </span>\n    <span class=\"card-footer-item\">\n      <button on:click={reset} class=\"button is-white\">clear</button>\n    </span>\n  </footer>\n</div>","<script>\n  import { emptyUser } from './store.js';\n  import Auth from './Auth.svelte';\n\n  let authComponent;\n  let fetching = false;\n  let user = emptyUser;\n\n  function onIsFechingChanged(e) {\n    fetching = e.detail;\n  }\n\n  function onUserChanged(e) {\n    user = e.detail;\n  }\n</script>\n\n<style>\n  @import \"bulma.css\";\n</style>\n\n<svelte:options tag=\"jira-auth-user-card\"/>\n\n<Auth\n  bind:this={authComponent}\n  on:jira-auth-user-changed={onUserChanged}\n  on:jira-auth-user-fetching-changed={onIsFechingChanged} />\n\n{#if fetching }\n  <p class=\"box container is-fluid notification is-warning\">\n    <button class=\"button is-warning is-loading is-small\"></button>\n  </p>\n{:else if user.accountId }\n  <div class=\"box container is-fluid\">\n    <article class=\"media\">\n      <div class=\"media-left\">\n        <figure class=\"image is-48x48\">\n          <img src={user.avatar} alt=\"Image\">\n        </figure>\n      </div>\n      <div class=\"media-content\">\n        <div class=\"content\">\n          <p>\n            <strong>{user.displayName}</strong> <small>@{user.name}</small>\n            <br>\n            <small>{user.emailAddress}</small>\n          </p>\n        </div>\n      </div>\n    </article>\n  </div>\n{:else}\n  <div class=\"notification is-warning\">\n    You are not logged in!\n  </div>\n{/if}","import { writable, get } from 'svelte/store';\nimport { fetchApi, tick } from '../utils/api.js';\n\nconst fetchIssue = async (key) => {\n  await tick(100);\n  try {\n    const data = await fetchApi(`/rest/api/3/issue/${key}`);\n    if (data.id) {\n      const issue = {\n        id: data.id,\n        key: data.key,\n        summary: data.fields.summary,\n        status: data.fields.status.name,\n        fetching: false,\n        url: data.self.replace(/\\/rest\\/(.*)/,'') + `/browse/${data.key}`,\n        data,\n      };\n      issuePool.add(issue);\n      return Promise.resolve(issue);\n    }\n    return Promise.reject(`Error while fetching ticket: ${JSON.stringify(data)}`);\n  } catch(error) {\n    return Promise.reject(`Error while fetching ticket: ${error}`);\n  }\n};\n\nexport const emptyIssue = {\n  id: '',\n  key: '',\n  summary: '',\n  status: '',\n  fetching: false,\n  url: '#',\n  data: null,\n};\n\nconst addToPool = (pool, issue) => {\n  const ret = [...pool];\n  const foundIndex = ret.findIndex((_issue) => _issue.key === issue.key);\n  if (foundIndex > -1) {\n    ret[foundIndex] = issue;\n  } else {\n    ret.push(issue);\n  }\n  return ret;\n}\n\nexport const issuePool = (() => {\n  const { subscribe, set, update } = writable([]);\n\n  return {\n    subscribe,\n    addByKey: (key) => update(pool => {\n      fetchIssue(key)\n        .then(issue => issuePool.add(issue))\n        .catch(error => console.log(error));\n      return addToPool(pool, {...emptyIssue, key });\n    }),\n    add: (issue) => update(pool => {\n      return addToPool(pool, issue);\n    }),\n    getByKey: (key) => get(issuePool).find(_issue => _issue.key === key),\n  };\n})();","<script>\n  import { createEventDispatcher, onMount, tick } from 'svelte';\n  import { get } from 'svelte/store';\n  import { issuePool, emptyIssue } from './store.js';\n  import { isAuthenticated } from '../auth/store.js';\n\n  const dispatch = createEventDispatcher();\n\n  export let key;\n\n  let issue = emptyIssue;\n\n  issuePool.subscribe(pool => {\n    issue = issuePool.getByKey(key);\n  });\n\n  isAuthenticated.subscribe(v => {\n    if (v) {\n      issue = issuePool.getByKey(key);\n    } else {\n      issue = emptyIssue;\n    }\n  });\n\n  onMount(async () => {\n    await tick();\n    issuePool.addByKey(key);\n  });\n</script>\n\n<style>\n  @import \"bulma.css\";\n</style>\n\n<svelte:options tag=\"jira-issue\"/>\n\n<a\n  href={issue ? issue.url : '#'}\n  target=\"_blank\"\n  class=\"tag is-rounded\"\n  class:is-warning={$isAuthenticated && issue && issue.id}>\n  <strong>{key}</strong>\n  {#if issue && issue.summary }\n    <span>: {issue.summary}</span>\n  {/if}\n  {#if issue && issue.status }\n    <em>({issue.status})</em>\n  {/if}\n</a>","export const processText = (text) => {\n  const matches = /\\[JIRA\\:([A-Z]+\\-[0-9]+)\\]/gi.exec(text);\n  if (!matches) {\n    return text;\n  } else {\n    text = text.replace(matches[0], `<jira-issue key=\"${matches[1]}\"></jira-issue>`)\n  }\n  return processText(text);\n}","<script>\n  import { onMount, tick } from 'svelte';\n  import { processText } from '../utils/helpers.js';\n\n  let processedText = '';\n\n  function processSlot(e) {\n    e.target.assignedNodes().map(el => {\n      if (el.nodeType === Node.TEXT_NODE) {\n        processedText += processText(el.textContent);\n      } else if (el.nodeType === Node.ELEMENT_NODE) {\n        processedText += processText(el.outerHTML);\n      } else {\n        processedText += el.outerHTML;\n      }\n    });\n  }\n</script>\n\n<style>\n  .jira-text--original {\n    display: none;\n  }\n</style>\n\n<svelte:options tag=\"jira-text-wrapper\" />\n\n<div class=\"jira-text--original\">\n  <slot on:slotchange={processSlot}></slot>\n</div>\n<div class=\"jira--text\">\n  {@html processedText}\n</div>","import Config from './global/Config.svelte';\nimport Styles from './global/Styles.svelte';\nimport Auth from './auth/Auth.svelte';\nimport AuthForm from './auth/AuthForm.svelte';\nimport AuthUserCard from './auth/AuthUserCard.svelte';\nimport Issue from './issue/Issue.svelte';\nimport TextWrapper from './text/TextWrapper.svelte';\n\nexport default {\n  Auth,\n  AuthForm,\n  AuthUserCard,\n  Issue,\n  TextWrapper,\n  Styles,\n  Config,\n}\n// import App from './App.svelte';\n\n// const app = new App({\n// \ttarget: document.body,\n// \tprops: {\n// \t\tname: 'world'\n// \t}\n// });\n\n// export default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","component","store","callback","unsub","$$","on_destroy","push","unsubscribe","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","setAttribute","set_data","toggle_class","toggle","classList","current_component","set_current_component","onMount","Error","get_current_component","on_mount","createEventDispatcher","type","detail","callbacks","e","createEvent","initCustomEvent","custom_event","slice","call","dirty_components","resolved_promise","Promise","resolve","update_scheduled","binding_callbacks","render_callbacks","flush_callbacks","schedule_update","then","flush","tick","add_binding_callback","add_render_callback","seen_callbacks","Set","length","shift","update","pop","has","add","fragment","dirty","before_render","p","ctx","after_render","mount_component","m","new_on_destroy","map","filter","init","instance","create_fragment","not_equal$$1","prop_names","parent_component","props","not_equal","bound","context","Map","ready","key","make_dirty","hydrate","l","Array","from","childNodes","c","intro","i","SvelteElement","writable","start","stop","subscribers","set","new_value","s","invalidate","subscriber","index","indexOf","splice","get","_","HTMLElement","[object Object]","super","this","attachShadow","mode","slotted","attr$$1","oldValue","newValue","detaching","d","$destroy","storageKey","readData","localStorage","getItem","hydrateData","setItem","createSavedStoreFor","v","cors","async","getHeaders","accept","aontent-type","authorization","btoa","time","reject","setTimeout","fetchApi","url","corsUrl","baseUrl","rawResponse","fetch","method","headers","json","error","fetchAuthUser","authUserIsFetching","accountId","emailAddress","displayName","avatarUrls","authUser","avatar","emptyUser","isAuthenticated","email","apiKey","dispatch","setEmail","setApiKey","setUrl","getUserData","getEmail","$email","getApiKey","$apiKey","getUrl","$url","$authUser","user","reset","fetching","authenticated","onUserChanged","onIsFechingChanged","onAuthStatusChanged","onEmailChanged","onApiKeyChanged","onUrlChanged","save","authComponent","emptyIssue","id","summary","status","addToPool","pool","issue","ret","foundIndex","findIndex","_issue","issuePool","addByKey","fields","self","replace","JSON","stringify","fetchIssue","catch","console","log","getByKey","find","$isAuthenticated","processText","matches","exec","processSlot","processedText","assignedNodes","el","nodeType","Node","TEXT_NODE","textContent","ELEMENT_NODE","outerHTML","Auth","AuthForm","AuthUserCard","Issue","TextWrapper","Styles","Config"],"mappings":"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"}
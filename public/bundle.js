
(function(l, i, v, e) { v = l.createElement(i); v.async = 1; v.src = '//' + (location.host || 'localhost').split(':')[0] + ':35729/livereload.js?snipver=1'; e = l.getElementsByTagName(i)[0]; e.parentNode.insertBefore(v, e)})(document, 'script');
var app = (function () {
    'use strict';

    function noop() { }
    function add_location(element, file, line, column, char) {
        element.__svelte_meta = {
            loc: { file, line, column, char }
        };
    }
    function run(fn) {
        return fn();
    }
    function blank_object() {
        return Object.create(null);
    }
    function run_all(fns) {
        fns.forEach(run);
    }
    function is_function(thing) {
        return typeof thing === 'function';
    }
    function safe_not_equal(a, b) {
        return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');
    }
    function validate_store(store, name) {
        if (!store || typeof store.subscribe !== 'function') {
            throw new Error(`'${name}' is not a store with a 'subscribe' method`);
        }
    }
    function subscribe(component, store, callback) {
        const unsub = store.subscribe(callback);
        component.$$.on_destroy.push(unsub.unsubscribe
            ? () => unsub.unsubscribe()
            : unsub);
    }

    function append(target, node) {
        target.appendChild(node);
    }
    function insert(target, node, anchor) {
        target.insertBefore(node, anchor || null);
    }
    function detach(node) {
        node.parentNode.removeChild(node);
    }
    function element(name) {
        return document.createElement(name);
    }
    function text(data) {
        return document.createTextNode(data);
    }
    function space() {
        return text(' ');
    }
    function empty() {
        return text('');
    }
    function listen(node, event, handler, options) {
        node.addEventListener(event, handler, options);
        return () => node.removeEventListener(event, handler, options);
    }
    function attr(node, attribute, value) {
        if (value == null)
            node.removeAttribute(attribute);
        else
            node.setAttribute(attribute, value);
    }
    function children(element) {
        return Array.from(element.childNodes);
    }
    function set_data(text, data) {
        data = '' + data;
        if (text.data !== data)
            text.data = data;
    }
    function toggle_class(element, name, toggle) {
        element.classList[toggle ? 'add' : 'remove'](name);
    }
    function custom_event(type, detail) {
        const e = document.createEvent('CustomEvent');
        e.initCustomEvent(type, false, false, detail);
        return e;
    }

    let current_component;
    function set_current_component(component) {
        current_component = component;
    }
    function get_current_component() {
        if (!current_component)
            throw new Error(`Function called outside component initialization`);
        return current_component;
    }
    function onMount(fn) {
        get_current_component().$$.on_mount.push(fn);
    }
    function createEventDispatcher() {
        const component = current_component;
        return (type, detail) => {
            const callbacks = component.$$.callbacks[type];
            if (callbacks) {
                // TODO are there situations where events could be dispatched
                // in a server (non-DOM) environment?
                const event = custom_event(type, detail);
                callbacks.slice().forEach(fn => {
                    fn.call(component, event);
                });
            }
        };
    }

    const dirty_components = [];
    const resolved_promise = Promise.resolve();
    let update_scheduled = false;
    const binding_callbacks = [];
    const render_callbacks = [];
    const flush_callbacks = [];
    function schedule_update() {
        if (!update_scheduled) {
            update_scheduled = true;
            resolved_promise.then(flush);
        }
    }
    function tick() {
        schedule_update();
        return resolved_promise;
    }
    function add_binding_callback(fn) {
        binding_callbacks.push(fn);
    }
    function add_render_callback(fn) {
        render_callbacks.push(fn);
    }
    function flush() {
        const seen_callbacks = new Set();
        do {
            // first, call beforeUpdate functions
            // and update components
            while (dirty_components.length) {
                const component = dirty_components.shift();
                set_current_component(component);
                update(component.$$);
            }
            while (binding_callbacks.length)
                binding_callbacks.shift()();
            // then, once components are updated, call
            // afterUpdate functions. This may cause
            // subsequent updates...
            while (render_callbacks.length) {
                const callback = render_callbacks.pop();
                if (!seen_callbacks.has(callback)) {
                    callback();
                    // ...so guard against infinite loops
                    seen_callbacks.add(callback);
                }
            }
        } while (dirty_components.length);
        while (flush_callbacks.length) {
            flush_callbacks.pop()();
        }
        update_scheduled = false;
    }
    function update($$) {
        if ($$.fragment) {
            $$.update($$.dirty);
            run_all($$.before_render);
            $$.fragment.p($$.dirty, $$.ctx);
            $$.dirty = null;
            $$.after_render.forEach(add_render_callback);
        }
    }
    function mount_component(component, target, anchor) {
        const { fragment, on_mount, on_destroy, after_render } = component.$$;
        fragment.m(target, anchor);
        // onMount happens after the initial afterUpdate. Because
        // afterUpdate callbacks happen in reverse order (inner first)
        // we schedule onMount callbacks before afterUpdate callbacks
        add_render_callback(() => {
            const new_on_destroy = on_mount.map(run).filter(is_function);
            if (on_destroy) {
                on_destroy.push(...new_on_destroy);
            }
            else {
                // Edge case - component was destroyed immediately,
                // most likely as a result of a binding initialising
                run_all(new_on_destroy);
            }
            component.$$.on_mount = [];
        });
        after_render.forEach(add_render_callback);
    }
    function destroy(component, detaching) {
        if (component.$$) {
            run_all(component.$$.on_destroy);
            component.$$.fragment.d(detaching);
            // TODO null out other refs, including component.$$ (but need to
            // preserve final state?)
            component.$$.on_destroy = component.$$.fragment = null;
            component.$$.ctx = {};
        }
    }
    function make_dirty(component, key) {
        if (!component.$$.dirty) {
            dirty_components.push(component);
            schedule_update();
            component.$$.dirty = blank_object();
        }
        component.$$.dirty[key] = true;
    }
    function init(component, options, instance, create_fragment, not_equal$$1, prop_names) {
        const parent_component = current_component;
        set_current_component(component);
        const props = options.props || {};
        const $$ = component.$$ = {
            fragment: null,
            ctx: null,
            // state
            props: prop_names,
            update: noop,
            not_equal: not_equal$$1,
            bound: blank_object(),
            // lifecycle
            on_mount: [],
            on_destroy: [],
            before_render: [],
            after_render: [],
            context: new Map(parent_component ? parent_component.$$.context : []),
            // everything else
            callbacks: blank_object(),
            dirty: null
        };
        let ready = false;
        $$.ctx = instance
            ? instance(component, props, (key, value) => {
                if ($$.ctx && not_equal$$1($$.ctx[key], $$.ctx[key] = value)) {
                    if ($$.bound[key])
                        $$.bound[key](value);
                    if (ready)
                        make_dirty(component, key);
                }
            })
            : props;
        $$.update();
        ready = true;
        run_all($$.before_render);
        $$.fragment = create_fragment($$.ctx);
        if (options.target) {
            if (options.hydrate) {
                $$.fragment.l(children(options.target));
            }
            else {
                $$.fragment.c();
            }
            if (options.intro && component.$$.fragment.i)
                component.$$.fragment.i();
            mount_component(component, options.target, options.anchor);
            flush();
        }
        set_current_component(parent_component);
    }
    let SvelteElement;
    if (typeof HTMLElement !== 'undefined') {
        SvelteElement = class extends HTMLElement {
            constructor() {
                super();
                this.attachShadow({ mode: 'open' });
            }
            connectedCallback() {
                // @ts-ignore todo: improve typings
                for (const key in this.$$.slotted) {
                    // @ts-ignore todo: improve typings
                    this.appendChild(this.$$.slotted[key]);
                }
            }
            attributeChangedCallback(attr$$1, oldValue, newValue) {
                this[attr$$1] = newValue;
            }
            $destroy() {
                destroy(this, true);
                this.$destroy = noop;
            }
            $on(type, callback) {
                // TODO should this delegate to addEventListener?
                const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));
                callbacks.push(callback);
                return () => {
                    const index = callbacks.indexOf(callback);
                    if (index !== -1)
                        callbacks.splice(index, 1);
                };
            }
            $set() {
                // overridden by instance, if it has props
            }
        };
    }

    /**
     * Create a `Writable` store that allows both updating and reading by subscription.
     * @param {*=}value initial value
     * @param {StartStopNotifier=}start start and stop notifications for subscriptions
     */
    function writable(value, start = noop) {
        let stop;
        const subscribers = [];
        function set(new_value) {
            if (safe_not_equal(value, new_value)) {
                value = new_value;
                if (!stop) {
                    return; // not ready
                }
                subscribers.forEach((s) => s[1]());
                subscribers.forEach((s) => s[0](value));
            }
        }
        function update(fn) {
            set(fn(value));
        }
        function subscribe(run, invalidate = noop) {
            const subscriber = [run, invalidate];
            subscribers.push(subscriber);
            if (subscribers.length === 1) {
                stop = start(set) || noop;
            }
            run(value);
            return () => {
                const index = subscribers.indexOf(subscriber);
                if (index !== -1) {
                    subscribers.splice(index, 1);
                }
                if (subscribers.length === 0) {
                    stop();
                }
            };
        }
        return { set, update, subscribe };
    }
    /**
     * Get the current value from a store by subscribing and immediately unsubscribing.
     * @param store readable
     */
    function get(store) {
        let value;
        store.subscribe((_) => value = _)();
        return value;
    }

    const storageKey = (key) => `__jira-${key}`;

    const readData = (key) => localStorage.getItem(storageKey(key));
    const hydrateData = (key, value) => localStorage.setItem(storageKey(key), value || '');

    const createSavedStoreFor = (key) => {
      const store = writable(readData(key));

      store.subscribe(v => {
        hydrateData(key, v);
      });

      return store;
    };

    /* src/global/Config.svelte generated by Svelte v3.4.4 */

    function create_fragment(ctx) {
    	return {
    		c: function create() {
    			this.c = noop;
    		},

    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},

    		m: noop,
    		p: noop,
    		i: noop,
    		o: noop,
    		d: noop
    	};
    }

    function instance($$self, $$props, $$invalidate) {
    	

      let { cors } = $$props;

      onMount(async () => {
        await tick();
        hydrateData('cors', cors);
      });

    	const writable_props = ['cors'];
    	Object.keys($$props).forEach(key => {
    		if (!writable_props.includes(key) && !key.startsWith('$$')) console.warn(`<jira-global-config> was created with unknown prop '${key}'`);
    	});

    	$$self.$set = $$props => {
    		if ('cors' in $$props) $$invalidate('cors', cors = $$props.cors);
    	};

    	return { cors };
    }

    class Config extends SvelteElement {
    	constructor(options) {
    		super();

    		init(this, { target: this.shadowRoot }, instance, create_fragment, safe_not_equal, ["cors"]);

    		const { ctx } = this.$$;
    		const props = this.attributes;
    		if (ctx.cors === undefined && !('cors' in props)) {
    			console.warn("<jira-global-config> was created without expected prop 'cors'");
    		}

    		if (options) {
    			if (options.target) {
    				insert(options.target, this, options.anchor);
    			}

    			if (options.props) {
    				this.$set(options.props);
    				flush();
    			}
    		}
    	}

    	static get observedAttributes() {
    		return ["cors"];
    	}

    	get cors() {
    		return this.$$.ctx.cors;
    	}

    	set cors(cors) {
    		this.$set({ cors });
    		flush();
    	}
    }

    customElements.define("jira-global-config", Config);

    const getHeaders = () => ({
      'accept': 'application/json',
      'aontent-type': 'application/json',
      'authorization': `Basic ${btoa(readData('email')+':'+readData('apiKey'))}`,
    });

    const tick$1 = async (time) => (new Promise((resolve, reject) => { setTimeout(resolve, time); }));

    const fetchApi = async (url) => {
      const corsUrl = readData('cors');
      if (!corsUrl) {
        return Promise.reject('No CORS server URL specified!');
      }
      const baseUrl = readData('url');
      if (!baseUrl || !url) {
        return Promise.reject('No URL specified!');
      }
      try {
        const rawResponse = await fetch(`${corsUrl}/${baseUrl}${url}`, {
          method: 'GET',
          headers: getHeaders()
        });
        try {
          const content = await rawResponse.json();
          return content;
        } catch(error) {
          return Promise.reject(error);
        }
      } catch(error) {
        return Promise.reject(error);
      }
    };

    const fetchAuthUser = async () => {
      await tick$1(100);
      if (!get(authUserIsFetching)) {
        authUserIsFetching.set(true);
        try {
          const { accountId, key, name, emailAddress, displayName, avatarUrls } = await fetchApi('/rest/api/3/myself');
          authUser.set({ accountId, key, name, emailAddress, displayName, avatar: avatarUrls['48x48'] });
          authUserIsFetching.set(false);
        } catch(error) {
          authUser.set(emptyUser);
          authUserIsFetching.set(false);
        }
      }
    };

    const emptyUser = {
      accountId: '',
      key: '',
      name: '',
      emailAddress: '',
      avatar: '',
      displayName: '',
    };

    let authUserIsFetching = writable(false);

    let isAuthenticated = writable(false);

    const email = createSavedStoreFor('email');

    const apiKey = createSavedStoreFor('apiKey');

    const url = createSavedStoreFor('url');

    const authUser = writable(emptyUser);

    authUser.subscribe(v => {
      isAuthenticated.set(!!v.accountId);
    });

    email.subscribe(v => {
      fetchAuthUser();
    });

    apiKey.subscribe(v => {
      fetchAuthUser();
    });

    url.subscribe(v => {
      fetchAuthUser();
    });

    /* src/auth/Auth.svelte generated by Svelte v3.4.4 */

    function create_fragment$1(ctx) {
    	return {
    		c: function create() {
    			this.c = noop;
    		},

    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},

    		m: noop,
    		p: noop,
    		i: noop,
    		o: noop,
    		d: noop
    	};
    }

    function instance$1($$self, $$props, $$invalidate) {
    	let $email, $apiKey, $url, $authUser;

    	validate_store(email, 'email');
    	subscribe($$self, email, $$value => { $email = $$value; $$invalidate('$email', $email); });
    	validate_store(apiKey, 'apiKey');
    	subscribe($$self, apiKey, $$value => { $apiKey = $$value; $$invalidate('$apiKey', $apiKey); });
    	validate_store(url, 'url');
    	subscribe($$self, url, $$value => { $url = $$value; $$invalidate('$url', $url); });
    	validate_store(authUser, 'authUser');
    	subscribe($$self, authUser, $$value => { $authUser = $$value; $$invalidate('$authUser', $authUser); });

    	

      const dispatch = createEventDispatcher();

      let { setEmail = (v) => email.set(v) } = $$props;
      let { setApiKey = (v) => apiKey.set(v) } = $$props;
      let { setUrl = (v) => url.set(v) } = $$props;
      let { getUserData = () => get(authUser) } = $$props;

      let { getEmail = () => $email } = $$props;
      let { getApiKey = () => $apiKey } = $$props;
      let { getUrl = () => $url } = $$props;

      let { isAuthenticated = () => !!$authUser.accountId } = $$props;

      authUser.subscribe(user => {
        dispatch('jira-auth-user-changed', user);
        dispatch('jira-auth-status-changed', !!user.accountId);
      });

      authUserIsFetching.subscribe(v => dispatch('jira-auth-user-fetching-changed', v));
      email.subscribe(v => dispatch('jira-auth-email-changed', v));
      apiKey.subscribe(v => dispatch('jira-auth-apikey-changed', v));
      url.subscribe(v => dispatch('jira-auth-url-changed', v));

      let { reset = () => {
        setEmail('');
        setApiKey('');
        setUrl('');
      } } = $$props;

    	const writable_props = ['setEmail', 'setApiKey', 'setUrl', 'getUserData', 'getEmail', 'getApiKey', 'getUrl', 'isAuthenticated', 'reset'];
    	Object.keys($$props).forEach(key => {
    		if (!writable_props.includes(key) && !key.startsWith('$$')) console.warn(`<jira-auth> was created with unknown prop '${key}'`);
    	});

    	$$self.$set = $$props => {
    		if ('setEmail' in $$props) $$invalidate('setEmail', setEmail = $$props.setEmail);
    		if ('setApiKey' in $$props) $$invalidate('setApiKey', setApiKey = $$props.setApiKey);
    		if ('setUrl' in $$props) $$invalidate('setUrl', setUrl = $$props.setUrl);
    		if ('getUserData' in $$props) $$invalidate('getUserData', getUserData = $$props.getUserData);
    		if ('getEmail' in $$props) $$invalidate('getEmail', getEmail = $$props.getEmail);
    		if ('getApiKey' in $$props) $$invalidate('getApiKey', getApiKey = $$props.getApiKey);
    		if ('getUrl' in $$props) $$invalidate('getUrl', getUrl = $$props.getUrl);
    		if ('isAuthenticated' in $$props) $$invalidate('isAuthenticated', isAuthenticated = $$props.isAuthenticated);
    		if ('reset' in $$props) $$invalidate('reset', reset = $$props.reset);
    	};

    	return {
    		setEmail,
    		setApiKey,
    		setUrl,
    		getUserData,
    		getEmail,
    		getApiKey,
    		getUrl,
    		isAuthenticated,
    		reset
    	};
    }

    class Auth extends SvelteElement {
    	constructor(options) {
    		super();

    		init(this, { target: this.shadowRoot }, instance$1, create_fragment$1, safe_not_equal, ["setEmail", "setApiKey", "setUrl", "getUserData", "getEmail", "getApiKey", "getUrl", "isAuthenticated", "reset"]);

    		if (options) {
    			if (options.target) {
    				insert(options.target, this, options.anchor);
    			}

    			if (options.props) {
    				this.$set(options.props);
    				flush();
    			}
    		}
    	}

    	static get observedAttributes() {
    		return ["setEmail","setApiKey","setUrl","getUserData","getEmail","getApiKey","getUrl","isAuthenticated","reset"];
    	}

    	get setEmail() {
    		return this.$$.ctx.setEmail;
    	}

    	set setEmail(setEmail) {
    		this.$set({ setEmail });
    		flush();
    	}

    	get setApiKey() {
    		return this.$$.ctx.setApiKey;
    	}

    	set setApiKey(setApiKey) {
    		this.$set({ setApiKey });
    		flush();
    	}

    	get setUrl() {
    		return this.$$.ctx.setUrl;
    	}

    	set setUrl(setUrl) {
    		this.$set({ setUrl });
    		flush();
    	}

    	get getUserData() {
    		return this.$$.ctx.getUserData;
    	}

    	set getUserData(getUserData) {
    		this.$set({ getUserData });
    		flush();
    	}

    	get getEmail() {
    		return this.$$.ctx.getEmail;
    	}

    	set getEmail(getEmail) {
    		this.$set({ getEmail });
    		flush();
    	}

    	get getApiKey() {
    		return this.$$.ctx.getApiKey;
    	}

    	set getApiKey(getApiKey) {
    		this.$set({ getApiKey });
    		flush();
    	}

    	get getUrl() {
    		return this.$$.ctx.getUrl;
    	}

    	set getUrl(getUrl) {
    		this.$set({ getUrl });
    		flush();
    	}

    	get isAuthenticated() {
    		return this.$$.ctx.isAuthenticated;
    	}

    	set isAuthenticated(isAuthenticated) {
    		this.$set({ isAuthenticated });
    		flush();
    	}

    	get reset() {
    		return this.$$.ctx.reset;
    	}

    	set reset(reset) {
    		this.$set({ reset });
    		flush();
    	}
    }

    customElements.define("jira-auth", Auth);

    /* src/auth/AuthForm.svelte generated by Svelte v3.4.4 */

    const file = "src/auth/AuthForm.svelte";

    // (7042:6) {:else}
    function create_else_block(ctx) {
    	var div, t0, t1_value = ctx.user.name, t1, t2;

    	return {
    		c: function create() {
    			div = element("div");
    			t0 = text("You are authenticated as @");
    			t1 = text(t1_value);
    			t2 = text(".");
    			div.className = "notification is-success";
    			add_location(div, file, 7042, 6, 237073);
    		},

    		m: function mount(target, anchor) {
    			insert(target, div, anchor);
    			append(div, t0);
    			append(div, t1);
    			append(div, t2);
    		},

    		p: function update(changed, ctx) {
    			if ((changed.user) && t1_value !== (t1_value = ctx.user.name)) {
    				set_data(t1, t1_value);
    			}
    		},

    		d: function destroy(detaching) {
    			if (detaching) {
    				detach(div);
    			}
    		}
    	};
    }

    // (7038:6) {#if !authenticated}
    function create_if_block(ctx) {
    	var div;

    	return {
    		c: function create() {
    			div = element("div");
    			div.textContent = "Authentication error, please enter valid data.";
    			div.className = "notification is-warning";
    			add_location(div, file, 7038, 6, 236947);
    		},

    		m: function mount(target, anchor) {
    			insert(target, div, anchor);
    		},

    		p: noop,

    		d: function destroy(detaching) {
    			if (detaching) {
    				detach(div);
    			}
    		}
    	};
    }

    function create_fragment$2(ctx) {
    	var t0, div9, header, p0, t2, div8, div7, t3, div6, fieldset, div1, label0, t5, div0, input0, t6, p1, t8, div3, label1, t10, div2, input1, t11, p2, t12, a, t14, t15, div5, label2, t17, div4, input2, t18, p3, t20, footer, span0, button0, t21_value = ctx.fetching ? 'Fetching user...' : 'Authenticate', t21, button0_disabled_value, t22, span1, button1, current, dispose;

    	let auth_props = {};
    	var auth = new Auth({ props: auth_props, $$inline: true });

    	add_binding_callback(() => ctx.auth_binding(auth));
    	auth.$on("jira-auth-user-changed", ctx.onUserChanged);
    	auth.$on("jira-auth-user-fetching-changed", ctx.onIsFechingChanged);
    	auth.$on("jira-auth-status-changed", ctx.onAuthStatusChanged);
    	auth.$on("jira-auth-email-changed", ctx.onEmailChanged);
    	auth.$on("jira-auth-api-key-changed", ctx.onApiKeyChanged);
    	auth.$on("jira-auth-url-changed", ctx.onUrlChanged);

    	function select_block_type(ctx) {
    		if (!ctx.authenticated) return create_if_block;
    		return create_else_block;
    	}

    	var current_block_type = select_block_type(ctx);
    	var if_block = current_block_type(ctx);

    	return {
    		c: function create() {
    			auth.$$.fragment.c();
    			t0 = space();
    			div9 = element("div");
    			header = element("header");
    			p0 = element("p");
    			p0.textContent = "JiRa authentication";
    			t2 = space();
    			div8 = element("div");
    			div7 = element("div");
    			if_block.c();
    			t3 = space();
    			div6 = element("div");
    			fieldset = element("fieldset");
    			div1 = element("div");
    			label0 = element("label");
    			label0.textContent = "E-mail";
    			t5 = space();
    			div0 = element("div");
    			input0 = element("input");
    			t6 = space();
    			p1 = element("p");
    			p1.textContent = "Your JiRa login E-mail.";
    			t8 = space();
    			div3 = element("div");
    			label1 = element("label");
    			label1.textContent = "Api key";
    			t10 = space();
    			div2 = element("div");
    			input1 = element("input");
    			t11 = space();
    			p2 = element("p");
    			t12 = text("Create an API token ");
    			a = element("a");
    			a.textContent = "here";
    			t14 = text(".");
    			t15 = space();
    			div5 = element("div");
    			label2 = element("label");
    			label2.textContent = "URL to JiRa";
    			t17 = space();
    			div4 = element("div");
    			input2 = element("input");
    			t18 = space();
    			p3 = element("p");
    			p3.textContent = "Use the URL to your company JiRa account (E.g: https://your-company.jira.net).";
    			t20 = space();
    			footer = element("footer");
    			span0 = element("span");
    			button0 = element("button");
    			t21 = text(t21_value);
    			t22 = space();
    			span1 = element("span");
    			button1 = element("button");
    			button1.textContent = "clear";
    			this.c = noop;
    			p0.className = "card-header-title";
    			add_location(p0, file, 7031, 4, 236782);
    			header.className = "card-header";
    			add_location(header, file, 7030, 2, 236749);
    			label0.className = "label";
    			label0.htmlFor = "jira-email";
    			add_location(label0, file, 7049, 12, 237281);
    			input0.id = "jira-email";
    			input0.name = "jira-email";
    			attr(input0, "type", "text");
    			input0.placeholder = "E-mail";
    			input0.className = "input is-medium";
    			input0.required = "";
    			add_location(input0, file, 7051, 14, 237382);
    			p1.className = "help";
    			add_location(p1, file, 7052, 14, 237526);
    			div0.className = "control";
    			add_location(div0, file, 7050, 12, 237346);
    			div1.className = "field";
    			add_location(div1, file, 7048, 10, 237249);
    			label1.className = "label";
    			label1.htmlFor = "jira-api-key";
    			add_location(label1, file, 7057, 12, 237649);
    			input1.id = "jira-api-key";
    			input1.name = "jira-api-key";
    			attr(input1, "type", "password");
    			input1.placeholder = "Api key";
    			input1.className = "input is-medium";
    			input1.required = "";
    			add_location(input1, file, 7059, 14, 237753);
    			a.target = "_blank";
    			a.href = "https://id.atlassian.com/manage/api-tokens";
    			add_location(a, file, 7060, 50, 237943);
    			p2.className = "help";
    			add_location(p2, file, 7060, 14, 237907);
    			div2.className = "control";
    			add_location(div2, file, 7058, 12, 237717);
    			div3.className = "field";
    			add_location(div3, file, 7056, 10, 237617);
    			label2.className = "label";
    			label2.htmlFor = "jira-url";
    			add_location(label2, file, 7065, 12, 238105);
    			input2.id = "jira-url";
    			input2.name = "jira-url";
    			attr(input2, "type", "text");
    			input2.placeholder = "URL to JiRa";
    			input2.className = "input is-medium";
    			input2.required = "";
    			add_location(input2, file, 7067, 14, 238209);
    			p3.className = "help";
    			add_location(p3, file, 7068, 14, 238352);
    			div4.className = "control";
    			add_location(div4, file, 7066, 12, 238173);
    			div5.className = "field";
    			add_location(div5, file, 7064, 10, 238073);
    			add_location(fieldset, file, 7047, 8, 237228);
    			div6.className = "form-horizontal";
    			add_location(div6, file, 7046, 6, 237189);
    			div7.className = "content";
    			add_location(div7, file, 7036, 4, 236892);
    			div8.className = "card-content";
    			add_location(div8, file, 7035, 2, 236861);
    			button0.className = "button is-primary";
    			button0.disabled = button0_disabled_value = ctx.fetching || !ctx.email || !ctx.apiKey || !ctx.url;
    			toggle_class(button0, "is-loading", ctx.fetching);
    			add_location(button0, file, 7077, 6, 238613);
    			span0.className = "card-footer-item";
    			add_location(span0, file, 7076, 4, 238575);
    			button1.className = "button is-white";
    			add_location(button1, file, 7080, 6, 238852);
    			span1.className = "card-footer-item";
    			add_location(span1, file, 7079, 4, 238814);
    			footer.className = "card-footer";
    			add_location(footer, file, 7075, 2, 238542);
    			div9.className = "box card container is-fluid is-paddingless";
    			add_location(div9, file, 7029, 0, 236690);

    			dispose = [
    				listen(input0, "input", ctx.input0_input_handler),
    				listen(input1, "input", ctx.input1_input_handler),
    				listen(input2, "input", ctx.input2_input_handler),
    				listen(button0, "click", ctx.save),
    				listen(button1, "click", ctx.reset)
    			];
    		},

    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},

    		m: function mount(target, anchor) {
    			mount_component(auth, target, anchor);
    			insert(target, t0, anchor);
    			insert(target, div9, anchor);
    			append(div9, header);
    			append(header, p0);
    			append(div9, t2);
    			append(div9, div8);
    			append(div8, div7);
    			if_block.m(div7, null);
    			append(div7, t3);
    			append(div7, div6);
    			append(div6, fieldset);
    			append(fieldset, div1);
    			append(div1, label0);
    			append(div1, t5);
    			append(div1, div0);
    			append(div0, input0);

    			input0.value = ctx.email;

    			append(div0, t6);
    			append(div0, p1);
    			append(fieldset, t8);
    			append(fieldset, div3);
    			append(div3, label1);
    			append(div3, t10);
    			append(div3, div2);
    			append(div2, input1);

    			input1.value = ctx.apiKey;

    			append(div2, t11);
    			append(div2, p2);
    			append(p2, t12);
    			append(p2, a);
    			append(p2, t14);
    			append(fieldset, t15);
    			append(fieldset, div5);
    			append(div5, label2);
    			append(div5, t17);
    			append(div5, div4);
    			append(div4, input2);

    			input2.value = ctx.url;

    			append(div4, t18);
    			append(div4, p3);
    			append(div9, t20);
    			append(div9, footer);
    			append(footer, span0);
    			append(span0, button0);
    			append(button0, t21);
    			append(footer, t22);
    			append(footer, span1);
    			append(span1, button1);
    			current = true;
    		},

    		p: function update(changed, ctx) {
    			var auth_changes = {};
    			auth.$set(auth_changes);

    			if (current_block_type === (current_block_type = select_block_type(ctx)) && if_block) {
    				if_block.p(changed, ctx);
    			} else {
    				if_block.d(1);
    				if_block = current_block_type(ctx);
    				if (if_block) {
    					if_block.c();
    					if_block.m(div7, t3);
    				}
    			}

    			if (changed.email && (input0.value !== ctx.email)) input0.value = ctx.email;
    			if (changed.apiKey) input1.value = ctx.apiKey;
    			if (changed.url && (input2.value !== ctx.url)) input2.value = ctx.url;

    			if ((!current || changed.fetching) && t21_value !== (t21_value = ctx.fetching ? 'Fetching user...' : 'Authenticate')) {
    				set_data(t21, t21_value);
    			}

    			if ((!current || changed.fetching || changed.email || changed.apiKey || changed.url) && button0_disabled_value !== (button0_disabled_value = ctx.fetching || !ctx.email || !ctx.apiKey || !ctx.url)) {
    				button0.disabled = button0_disabled_value;
    			}

    			if (changed.fetching) {
    				toggle_class(button0, "is-loading", ctx.fetching);
    			}
    		},

    		i: function intro(local) {
    			if (current) return;
    			auth.$$.fragment.i(local);

    			current = true;
    		},

    		o: function outro(local) {
    			auth.$$.fragment.o(local);
    			current = false;
    		},

    		d: function destroy(detaching) {
    			ctx.auth_binding(null);

    			auth.$destroy(detaching);

    			if (detaching) {
    				detach(t0);
    				detach(div9);
    			}

    			if_block.d();
    			run_all(dispose);
    		}
    	};
    }

    function instance$2($$self, $$props, $$invalidate) {
    	

      let authComponent;
      let fetching = false;
      let user = emptyUser;
      let authenticated = false;

      let email = '';
      let apiKey = '';
      let url = '';

      function onIsFechingChanged(e) {
        $$invalidate('fetching', fetching = e.detail);
      }

      function onUserChanged(e) {
        $$invalidate('user', user = e.detail);
      }

      function onAuthStatusChanged(e) {
        $$invalidate('authenticated', authenticated = e.detail);
      }

      function onEmailChanged(e) {
        $$invalidate('email', email = e.detail);
      }

      function onApiKeyChanged(e) {
        $$invalidate('apiKey', apiKey = e.detail);
      }

      function onUrlChanged(e) {
        $$invalidate('url', url = e.detail);
      }

      function save() {
        authComponent.setEmail(email);
        authComponent.setApiKey(apiKey);
        authComponent.setUrl(url);
      }

      function reset() {
        authComponent.reset();
        $$invalidate('email', email = '');
        $$invalidate('apiKey', apiKey = '');
        $$invalidate('url', url = '');
      }

      onMount(() => {
        $$invalidate('email', email = authComponent.getEmail());
        $$invalidate('apiKey', apiKey = authComponent.getApiKey());
        $$invalidate('url', url = authComponent.getUrl());
        $$invalidate('authenticated', authenticated = authComponent.isAuthenticated());
      });

    	function auth_binding($$component) {
    		authComponent = $$component;
    		$$invalidate('authComponent', authComponent);
    	}

    	function input0_input_handler() {
    		email = this.value;
    		$$invalidate('email', email);
    	}

    	function input1_input_handler() {
    		apiKey = this.value;
    		$$invalidate('apiKey', apiKey);
    	}

    	function input2_input_handler() {
    		url = this.value;
    		$$invalidate('url', url);
    	}

    	return {
    		authComponent,
    		fetching,
    		user,
    		authenticated,
    		email,
    		apiKey,
    		url,
    		onIsFechingChanged,
    		onUserChanged,
    		onAuthStatusChanged,
    		onEmailChanged,
    		onApiKeyChanged,
    		onUrlChanged,
    		save,
    		reset,
    		auth_binding,
    		input0_input_handler,
    		input1_input_handler,
    		input2_input_handler
    	};
    }

    class AuthForm extends SvelteElement {
    	constructor(options) {
    		super();

    		this.shadowRoot.innerHTML = `<style>@keyframes spinAround{from{transform:rotate(0deg)}to{transform:rotate(359deg)}}.button{-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.box:not(:last-child),.content:not(:last-child),.notification:not(:last-child),.title:not(:last-child){margin-bottom:1.5rem}.button.is-loading::after{animation:spinAround 500ms infinite linear;border:2px solid #dbdbdb;border-radius:290486px;border-right-color:transparent;border-top-color:transparent;content:"";display:block;height:1em;position:relative;width:1em}.button,.input{-moz-appearance:none;-webkit-appearance:none;align-items:center;border:1px solid transparent;border-radius:4px;box-shadow:none;display:inline-flex;font-size:1rem;height:2.25em;justify-content:flex-start;line-height:1.5;padding-bottom:calc(0.375em - 1px);padding-left:calc(0.625em - 1px);padding-right:calc(0.625em - 1px);padding-top:calc(0.375em - 1px);position:relative;vertical-align:top}.button:focus,.input:focus,.button:active,.input:active{outline:none}.button[disabled]{cursor:not-allowed}p,fieldset{margin:0;padding:0}button,input{margin:0}*,*::before,*::after{box-sizing:inherit}footer,header{display:block}button,input{font-family:BlinkMacSystemFont, -apple-system, "Segoe UI", "Roboto", "Oxygen", "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", "Helvetica Neue", "Helvetica", "Arial", sans-serif}a{color:#3273dc;cursor:pointer;text-decoration:none}a:hover{color:#363636}span{font-style:inherit;font-weight:inherit}fieldset{border:none}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}.is-paddingless{padding:0 !important}.box{background-color:white;border-radius:6px;box-shadow:0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);color:#4a4a4a;display:block;padding:1.25rem}.button{background-color:white;border-color:#dbdbdb;border-width:1px;color:#363636;cursor:pointer;justify-content:center;padding-bottom:calc(0.375em - 1px);padding-left:0.75em;padding-right:0.75em;padding-top:calc(0.375em - 1px);text-align:center;white-space:nowrap}.button:hover{border-color:#b5b5b5;color:#363636}.button:focus{border-color:#3273dc;color:#363636}.button:focus:not(:active){box-shadow:0 0 0 0.125em rgba(50, 115, 220, 0.25)}.button:active{border-color:#4a4a4a;color:#363636}.button.is-white{background-color:white;border-color:transparent;color:#0a0a0a}.button.is-white:hover{background-color:#f9f9f9;border-color:transparent;color:#0a0a0a}.button.is-white:focus{border-color:transparent;color:#0a0a0a}.button.is-white:focus:not(:active){box-shadow:0 0 0 0.125em rgba(255, 255, 255, 0.25)}.button.is-white:active{background-color:#f2f2f2;border-color:transparent;color:#0a0a0a}.button.is-primary{background-color:#00d1b2;border-color:transparent;color:#fff}.button.is-primary:hover{background-color:#00c4a7;border-color:transparent;color:#fff}.button.is-primary:focus{border-color:transparent;color:#fff}.button.is-primary:focus:not(:active){box-shadow:0 0 0 0.125em rgba(0, 209, 178, 0.25)}.button.is-primary:active{background-color:#00b89c;border-color:transparent;color:#fff}.button.is-primary[disabled]{background-color:#00d1b2;border-color:transparent;box-shadow:none}.button.is-primary.is-loading::after{border-color:transparent transparent #fff #fff !important}.button[disabled]{background-color:white;border-color:#dbdbdb;box-shadow:none;opacity:0.5}.button.is-loading{color:transparent !important;pointer-events:none}.button.is-loading::after{position:absolute;left:calc(50% - (1em / 2));top:calc(50% - (1em / 2));position:absolute !important}.container{flex-grow:1;margin:0 auto;position:relative;width:auto}@media screen and (min-width: 1024px){.container{max-width:960px}.container.is-fluid{margin-left:32px;margin-right:32px;max-width:none}}@media screen and (max-width: 1215px){}@media screen and (max-width: 1407px){}@media screen and (min-width: 1216px){.container{max-width:1152px}}@media screen and (min-width: 1408px){.container{max-width:1344px}}.content p:not(:last-child){margin-bottom:1em}.notification{background-color:whitesmoke;border-radius:4px;padding:1.25rem 2.5rem 1.25rem 1.5rem;position:relative}.notification.is-success{background-color:#23d160;color:#fff}.notification.is-warning{background-color:#ffdd57;color:rgba(0, 0, 0, 0.7)}@keyframes moveIndeterminate{from{background-position:200% 0}to{background-position:-200% 0}}.title{word-break:break-word}.title{color:#363636;font-size:2rem;font-weight:600;line-height:1.125}.subtitle:not(.is-spaced)+.title{margin-top:-1.25rem}.input{background-color:white;border-color:#dbdbdb;border-radius:4px;color:#363636}.input::-moz-placeholder{color:rgba(54, 54, 54, 0.3)}.input::-webkit-input-placeholder{color:rgba(54, 54, 54, 0.3)}.input:-moz-placeholder{color:rgba(54, 54, 54, 0.3)}.input:-ms-input-placeholder{color:rgba(54, 54, 54, 0.3)}.input:hover{border-color:#b5b5b5}.input:focus,.input:active{border-color:#3273dc;box-shadow:0 0 0 0.125em rgba(50, 115, 220, 0.25)}.input{box-shadow:inset 0 1px 2px rgba(10, 10, 10, 0.1);max-width:100%;width:100%}.is-medium.input{font-size:1.25rem}.label{color:#363636;display:block;font-size:1rem;font-weight:700}.label:not(:last-child){margin-bottom:0.5em}.help{display:block;font-size:0.75rem;margin-top:0.25rem}.field:not(:last-child){margin-bottom:0.75rem}@media screen and (min-width: 769px), print{}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px), print{}.control{box-sizing:border-box;clear:both;font-size:1rem;position:relative;text-align:left}.card{background-color:white;box-shadow:0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);color:#4a4a4a;max-width:100%;position:relative}.card-header{background-color:transparent;align-items:stretch;box-shadow:0 1px 2px rgba(10, 10, 10, 0.1);display:flex}.card-header-title{align-items:center;color:#363636;display:flex;flex-grow:1;font-weight:700;padding:0.75rem}.card-content{background-color:transparent;padding:1.5rem}.card-footer{background-color:transparent;border-top:1px solid #dbdbdb;align-items:stretch;display:flex}.card-footer-item{align-items:center;display:flex;flex-basis:0;flex-grow:1;flex-shrink:0;justify-content:center;padding:0.75rem}.card-footer-item:not(:last-child){border-right:1px solid #dbdbdb}@media screen and (min-width: 769px), print{}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px), print{}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px){}.navbar>.container{align-items:stretch;display:flex;min-height:3.25rem;width:100%}@media screen and (max-width: 1023px){.navbar>.container{display:block}}@media screen and (min-width: 1024px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1408px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 1024px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (min-width: 769px), print{}@media screen and (max-width: 1023px){}@media screen and (max-width: 768px){}@media screen and (max-width: 1023px){}@media screen and (max-width: 768px){}@media screen and (max-width: 1023px){}@media screen and (max-width: 768px){}@media screen and (max-width: 1023px){}@media screen and (max-width: 768px){}@media screen and (max-width: 1023px){}@media screen and (max-width: 768px){}@media screen and (max-width: 1023px){}@media screen and (max-width: 768px){}@media screen and (max-width: 1023px){}@media screen and (max-width: 768px){}@media screen and (max-width: 1023px){}@media screen and (max-width: 768px){}@media screen and (max-width: 1023px){}@media screen and (max-width: 768px){}@media screen and (max-width: 1023px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px), print{}@media screen and (max-width: 768px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 1024px){}.footer{background-color:#fafafa;padding:3rem 1.5rem 6rem}
		/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXV0aEZvcm0uc3ZlbHRlIiwic291cmNlcyI6WyJBdXRoRm9ybS5zdmVsdGUiXSwic291cmNlc0NvbnRlbnQiOlsiPHNjcmlwdD5cbiAgaW1wb3J0IHsgb25Nb3VudCB9IGZyb20gJ3N2ZWx0ZSc7XG4gIGltcG9ydCB7IGVtcHR5VXNlciB9IGZyb20gJy4vc3RvcmUuanMnO1xuICBpbXBvcnQgQXV0aCBmcm9tICcuL0F1dGguc3ZlbHRlJztcblxuICBsZXQgYXV0aENvbXBvbmVudDtcbiAgbGV0IGZldGNoaW5nID0gZmFsc2U7XG4gIGxldCB1c2VyID0gZW1wdHlVc2VyO1xuICBsZXQgYXV0aGVudGljYXRlZCA9IGZhbHNlO1xuXG4gIGxldCBlbWFpbCA9ICcnO1xuICBsZXQgYXBpS2V5ID0gJyc7XG4gIGxldCB1cmwgPSAnJztcblxuICBmdW5jdGlvbiBvbklzRmVjaGluZ0NoYW5nZWQoZSkge1xuICAgIGZldGNoaW5nID0gZS5kZXRhaWw7XG4gIH1cblxuICBmdW5jdGlvbiBvblVzZXJDaGFuZ2VkKGUpIHtcbiAgICB1c2VyID0gZS5kZXRhaWw7XG4gIH1cblxuICBmdW5jdGlvbiBvbkF1dGhTdGF0dXNDaGFuZ2VkKGUpIHtcbiAgICBhdXRoZW50aWNhdGVkID0gZS5kZXRhaWw7XG4gIH1cblxuICBmdW5jdGlvbiBvbkVtYWlsQ2hhbmdlZChlKSB7XG4gICAgZW1haWwgPSBlLmRldGFpbDtcbiAgfVxuXG4gIGZ1bmN0aW9uIG9uQXBpS2V5Q2hhbmdlZChlKSB7XG4gICAgYXBpS2V5ID0gZS5kZXRhaWw7XG4gIH1cblxuICBmdW5jdGlvbiBvblVybENoYW5nZWQoZSkge1xuICAgIHVybCA9IGUuZGV0YWlsO1xuICB9XG5cbiAgZnVuY3Rpb24gc2F2ZSgpIHtcbiAgICBhdXRoQ29tcG9uZW50LnNldEVtYWlsKGVtYWlsKTtcbiAgICBhdXRoQ29tcG9uZW50LnNldEFwaUtleShhcGlLZXkpO1xuICAgIGF1dGhDb21wb25lbnQuc2V0VXJsKHVybCk7XG4gIH1cblxuICBmdW5jdGlvbiByZXNldCgpIHtcbiAgICBhdXRoQ29tcG9uZW50LnJlc2V0KCk7XG4gICAgZW1haWwgPSAnJztcbiAgICBhcGlLZXkgPSAnJztcbiAgICB1cmwgPSAnJztcbiAgfVxuXG4gIG9uTW91bnQoKCkgPT4ge1xuICAgIGVtYWlsID0gYXV0aENvbXBvbmVudC5nZXRFbWFpbCgpO1xuICAgIGFwaUtleSA9IGF1dGhDb21wb25lbnQuZ2V0QXBpS2V5KCk7XG4gICAgdXJsID0gYXV0aENvbXBvbmVudC5nZXRVcmwoKTtcbiAgICBhdXRoZW50aWNhdGVkID0gYXV0aENvbXBvbmVudC5pc0F1dGhlbnRpY2F0ZWQoKTtcbiAgfSk7XG48L3NjcmlwdD5cblxuPHN0eWxlIGxhbmc9XCJzYXNzXCI+LyohIGJ1bG1hLmlvIHYwLjcuNSB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9qZ3RobXMvYnVsbWEgKi9cbkBrZXlmcmFtZXMgc3BpbkFyb3VuZCB7XG4gIGZyb20ge1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9XG4gIHRvIHtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgzNTlkZWcpOyB9IH1cblxuLmRlbGV0ZSwgLm1vZGFsLWNsb3NlLCAuaXMtdW5zZWxlY3RhYmxlLCAuYnV0dG9uLCAuZmlsZSwgLmJyZWFkY3J1bWIsIC5wYWdpbmF0aW9uLXByZXZpb3VzLFxuLnBhZ2luYXRpb24tbmV4dCxcbi5wYWdpbmF0aW9uLWxpbmssXG4ucGFnaW5hdGlvbi1lbGxpcHNpcywgLnRhYnMge1xuICAtd2Via2l0LXRvdWNoLWNhbGxvdXQ6IG5vbmU7XG4gIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7XG4gIC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7XG4gIC1tcy11c2VyLXNlbGVjdDogbm9uZTtcbiAgdXNlci1zZWxlY3Q6IG5vbmU7IH1cblxuLnNlbGVjdDpub3QoLmlzLW11bHRpcGxlKTpub3QoLmlzLWxvYWRpbmcpOjphZnRlciwgLm5hdmJhci1saW5rOm5vdCguaXMtYXJyb3dsZXNzKTo6YWZ0ZXIge1xuICBib3JkZXI6IDNweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLXJhZGl1czogMnB4O1xuICBib3JkZXItcmlnaHQ6IDA7XG4gIGJvcmRlci10b3A6IDA7XG4gIGNvbnRlbnQ6IFwiIFwiO1xuICBkaXNwbGF5OiBibG9jaztcbiAgaGVpZ2h0OiAwLjYyNWVtO1xuICBtYXJnaW4tdG9wOiAtMC40Mzc1ZW07XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNTAlO1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpO1xuICB0cmFuc2Zvcm0tb3JpZ2luOiBjZW50ZXI7XG4gIHdpZHRoOiAwLjYyNWVtOyB9XG5cbi5ib3g6bm90KDpsYXN0LWNoaWxkKSwgLmNvbnRlbnQ6bm90KDpsYXN0LWNoaWxkKSwgLm5vdGlmaWNhdGlvbjpub3QoOmxhc3QtY2hpbGQpLCAucHJvZ3Jlc3M6bm90KDpsYXN0LWNoaWxkKSwgLnRhYmxlOm5vdCg6bGFzdC1jaGlsZCksIC50YWJsZS1jb250YWluZXI6bm90KDpsYXN0LWNoaWxkKSwgLnRpdGxlOm5vdCg6bGFzdC1jaGlsZCksXG4uc3VidGl0bGU6bm90KDpsYXN0LWNoaWxkKSwgLmJsb2NrOm5vdCg6bGFzdC1jaGlsZCksIC5oaWdobGlnaHQ6bm90KDpsYXN0LWNoaWxkKSwgLmJyZWFkY3J1bWI6bm90KDpsYXN0LWNoaWxkKSwgLmxldmVsOm5vdCg6bGFzdC1jaGlsZCksIC5saXN0Om5vdCg6bGFzdC1jaGlsZCksIC5tZXNzYWdlOm5vdCg6bGFzdC1jaGlsZCksIC50YWJzOm5vdCg6bGFzdC1jaGlsZCkge1xuICBtYXJnaW4tYm90dG9tOiAxLjVyZW07IH1cblxuLmRlbGV0ZSwgLm1vZGFsLWNsb3NlIHtcbiAgLW1vei1hcHBlYXJhbmNlOiBub25lO1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTAsIDEwLCAxMCwgMC4yKTtcbiAgYm9yZGVyOiBub25lO1xuICBib3JkZXItcmFkaXVzOiAyOTA0ODZweDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBwb2ludGVyLWV2ZW50czogYXV0bztcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBmbGV4LWdyb3c6IDA7XG4gIGZsZXgtc2hyaW5rOiAwO1xuICBmb250LXNpemU6IDA7XG4gIGhlaWdodDogMjBweDtcbiAgbWF4LWhlaWdodDogMjBweDtcbiAgbWF4LXdpZHRoOiAyMHB4O1xuICBtaW4taGVpZ2h0OiAyMHB4O1xuICBtaW4td2lkdGg6IDIwcHg7XG4gIG91dGxpbmU6IG5vbmU7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcbiAgd2lkdGg6IDIwcHg7IH1cbiAgLmRlbGV0ZTo6YmVmb3JlLCAubW9kYWwtY2xvc2U6OmJlZm9yZSwgLmRlbGV0ZTo6YWZ0ZXIsIC5tb2RhbC1jbG9zZTo6YWZ0ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbGVmdDogNTAlO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDUwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSkgdHJhbnNsYXRlWSgtNTAlKSByb3RhdGUoNDVkZWcpO1xuICAgIHRyYW5zZm9ybS1vcmlnaW46IGNlbnRlciBjZW50ZXI7IH1cbiAgLmRlbGV0ZTo6YmVmb3JlLCAubW9kYWwtY2xvc2U6OmJlZm9yZSB7XG4gICAgaGVpZ2h0OiAycHg7XG4gICAgd2lkdGg6IDUwJTsgfVxuICAuZGVsZXRlOjphZnRlciwgLm1vZGFsLWNsb3NlOjphZnRlciB7XG4gICAgaGVpZ2h0OiA1MCU7XG4gICAgd2lkdGg6IDJweDsgfVxuICAuZGVsZXRlOmhvdmVyLCAubW9kYWwtY2xvc2U6aG92ZXIsIC5kZWxldGU6Zm9jdXMsIC5tb2RhbC1jbG9zZTpmb2N1cyB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMCwgMTAsIDEwLCAwLjMpOyB9XG4gIC5kZWxldGU6YWN0aXZlLCAubW9kYWwtY2xvc2U6YWN0aXZlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDEwLCAxMCwgMTAsIDAuNCk7IH1cbiAgLmlzLXNtYWxsLmRlbGV0ZSwgLmlzLXNtYWxsLm1vZGFsLWNsb3NlIHtcbiAgICBoZWlnaHQ6IDE2cHg7XG4gICAgbWF4LWhlaWdodDogMTZweDtcbiAgICBtYXgtd2lkdGg6IDE2cHg7XG4gICAgbWluLWhlaWdodDogMTZweDtcbiAgICBtaW4td2lkdGg6IDE2cHg7XG4gICAgd2lkdGg6IDE2cHg7IH1cbiAgLmlzLW1lZGl1bS5kZWxldGUsIC5pcy1tZWRpdW0ubW9kYWwtY2xvc2Uge1xuICAgIGhlaWdodDogMjRweDtcbiAgICBtYXgtaGVpZ2h0OiAyNHB4O1xuICAgIG1heC13aWR0aDogMjRweDtcbiAgICBtaW4taGVpZ2h0OiAyNHB4O1xuICAgIG1pbi13aWR0aDogMjRweDtcbiAgICB3aWR0aDogMjRweDsgfVxuICAuaXMtbGFyZ2UuZGVsZXRlLCAuaXMtbGFyZ2UubW9kYWwtY2xvc2Uge1xuICAgIGhlaWdodDogMzJweDtcbiAgICBtYXgtaGVpZ2h0OiAzMnB4O1xuICAgIG1heC13aWR0aDogMzJweDtcbiAgICBtaW4taGVpZ2h0OiAzMnB4O1xuICAgIG1pbi13aWR0aDogMzJweDtcbiAgICB3aWR0aDogMzJweDsgfVxuXG4uYnV0dG9uLmlzLWxvYWRpbmc6OmFmdGVyLCAubG9hZGVyLCAuc2VsZWN0LmlzLWxvYWRpbmc6OmFmdGVyLCAuY29udHJvbC5pcy1sb2FkaW5nOjphZnRlciB7XG4gIGFuaW1hdGlvbjogc3BpbkFyb3VuZCA1MDBtcyBpbmZpbml0ZSBsaW5lYXI7XG4gIGJvcmRlcjogMnB4IHNvbGlkICNkYmRiZGI7XG4gIGJvcmRlci1yYWRpdXM6IDI5MDQ4NnB4O1xuICBib3JkZXItcmlnaHQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBib3JkZXItdG9wLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgY29udGVudDogXCJcIjtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGhlaWdodDogMWVtO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHdpZHRoOiAxZW07IH1cblxuLmlzLW92ZXJsYXksIC5pbWFnZS5pcy1zcXVhcmUgaW1nLFxuLmltYWdlLmlzLXNxdWFyZSAuaGFzLXJhdGlvLCAuaW1hZ2UuaXMtMWJ5MSBpbWcsXG4uaW1hZ2UuaXMtMWJ5MSAuaGFzLXJhdGlvLCAuaW1hZ2UuaXMtNWJ5NCBpbWcsXG4uaW1hZ2UuaXMtNWJ5NCAuaGFzLXJhdGlvLCAuaW1hZ2UuaXMtNGJ5MyBpbWcsXG4uaW1hZ2UuaXMtNGJ5MyAuaGFzLXJhdGlvLCAuaW1hZ2UuaXMtM2J5MiBpbWcsXG4uaW1hZ2UuaXMtM2J5MiAuaGFzLXJhdGlvLCAuaW1hZ2UuaXMtNWJ5MyBpbWcsXG4uaW1hZ2UuaXMtNWJ5MyAuaGFzLXJhdGlvLCAuaW1hZ2UuaXMtMTZieTkgaW1nLFxuLmltYWdlLmlzLTE2Ynk5IC5oYXMtcmF0aW8sIC5pbWFnZS5pcy0yYnkxIGltZyxcbi5pbWFnZS5pcy0yYnkxIC5oYXMtcmF0aW8sIC5pbWFnZS5pcy0zYnkxIGltZyxcbi5pbWFnZS5pcy0zYnkxIC5oYXMtcmF0aW8sIC5pbWFnZS5pcy00Ynk1IGltZyxcbi5pbWFnZS5pcy00Ynk1IC5oYXMtcmF0aW8sIC5pbWFnZS5pcy0zYnk0IGltZyxcbi5pbWFnZS5pcy0zYnk0IC5oYXMtcmF0aW8sIC5pbWFnZS5pcy0yYnkzIGltZyxcbi5pbWFnZS5pcy0yYnkzIC5oYXMtcmF0aW8sIC5pbWFnZS5pcy0zYnk1IGltZyxcbi5pbWFnZS5pcy0zYnk1IC5oYXMtcmF0aW8sIC5pbWFnZS5pcy05YnkxNiBpbWcsXG4uaW1hZ2UuaXMtOWJ5MTYgLmhhcy1yYXRpbywgLmltYWdlLmlzLTFieTIgaW1nLFxuLmltYWdlLmlzLTFieTIgLmhhcy1yYXRpbywgLmltYWdlLmlzLTFieTMgaW1nLFxuLmltYWdlLmlzLTFieTMgLmhhcy1yYXRpbywgLm1vZGFsLCAubW9kYWwtYmFja2dyb3VuZCwgLmhlcm8tdmlkZW8ge1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgcmlnaHQ6IDA7XG4gIHRvcDogMDsgfVxuXG4uYnV0dG9uLCAuaW5wdXQsIC50ZXh0YXJlYSwgLnNlbGVjdCBzZWxlY3QsIC5maWxlLWN0YSxcbi5maWxlLW5hbWUsIC5wYWdpbmF0aW9uLXByZXZpb3VzLFxuLnBhZ2luYXRpb24tbmV4dCxcbi5wYWdpbmF0aW9uLWxpbmssXG4ucGFnaW5hdGlvbi1lbGxpcHNpcyB7XG4gIC1tb3otYXBwZWFyYW5jZTogbm9uZTtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBib3JkZXI6IDFweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xuICBib3gtc2hhZG93OiBub25lO1xuICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBoZWlnaHQ6IDIuMjVlbTtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICBsaW5lLWhlaWdodDogMS41O1xuICBwYWRkaW5nLWJvdHRvbTogY2FsYygwLjM3NWVtIC0gMXB4KTtcbiAgcGFkZGluZy1sZWZ0OiBjYWxjKDAuNjI1ZW0gLSAxcHgpO1xuICBwYWRkaW5nLXJpZ2h0OiBjYWxjKDAuNjI1ZW0gLSAxcHgpO1xuICBwYWRkaW5nLXRvcDogY2FsYygwLjM3NWVtIC0gMXB4KTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogdG9wOyB9XG4gIC5idXR0b246Zm9jdXMsIC5pbnB1dDpmb2N1cywgLnRleHRhcmVhOmZvY3VzLCAuc2VsZWN0IHNlbGVjdDpmb2N1cywgLmZpbGUtY3RhOmZvY3VzLFxuICAuZmlsZS1uYW1lOmZvY3VzLCAucGFnaW5hdGlvbi1wcmV2aW91czpmb2N1cyxcbiAgLnBhZ2luYXRpb24tbmV4dDpmb2N1cyxcbiAgLnBhZ2luYXRpb24tbGluazpmb2N1cyxcbiAgLnBhZ2luYXRpb24tZWxsaXBzaXM6Zm9jdXMsIC5pcy1mb2N1c2VkLmJ1dHRvbiwgLmlzLWZvY3VzZWQuaW5wdXQsIC5pcy1mb2N1c2VkLnRleHRhcmVhLCAuc2VsZWN0IHNlbGVjdC5pcy1mb2N1c2VkLCAuaXMtZm9jdXNlZC5maWxlLWN0YSxcbiAgLmlzLWZvY3VzZWQuZmlsZS1uYW1lLCAuaXMtZm9jdXNlZC5wYWdpbmF0aW9uLXByZXZpb3VzLFxuICAuaXMtZm9jdXNlZC5wYWdpbmF0aW9uLW5leHQsXG4gIC5pcy1mb2N1c2VkLnBhZ2luYXRpb24tbGluayxcbiAgLmlzLWZvY3VzZWQucGFnaW5hdGlvbi1lbGxpcHNpcywgLmJ1dHRvbjphY3RpdmUsIC5pbnB1dDphY3RpdmUsIC50ZXh0YXJlYTphY3RpdmUsIC5zZWxlY3Qgc2VsZWN0OmFjdGl2ZSwgLmZpbGUtY3RhOmFjdGl2ZSxcbiAgLmZpbGUtbmFtZTphY3RpdmUsIC5wYWdpbmF0aW9uLXByZXZpb3VzOmFjdGl2ZSxcbiAgLnBhZ2luYXRpb24tbmV4dDphY3RpdmUsXG4gIC5wYWdpbmF0aW9uLWxpbms6YWN0aXZlLFxuICAucGFnaW5hdGlvbi1lbGxpcHNpczphY3RpdmUsIC5pcy1hY3RpdmUuYnV0dG9uLCAuaXMtYWN0aXZlLmlucHV0LCAuaXMtYWN0aXZlLnRleHRhcmVhLCAuc2VsZWN0IHNlbGVjdC5pcy1hY3RpdmUsIC5pcy1hY3RpdmUuZmlsZS1jdGEsXG4gIC5pcy1hY3RpdmUuZmlsZS1uYW1lLCAuaXMtYWN0aXZlLnBhZ2luYXRpb24tcHJldmlvdXMsXG4gIC5pcy1hY3RpdmUucGFnaW5hdGlvbi1uZXh0LFxuICAuaXMtYWN0aXZlLnBhZ2luYXRpb24tbGluayxcbiAgLmlzLWFjdGl2ZS5wYWdpbmF0aW9uLWVsbGlwc2lzIHtcbiAgICBvdXRsaW5lOiBub25lOyB9XG4gIC5idXR0b25bZGlzYWJsZWRdLCAuaW5wdXRbZGlzYWJsZWRdLCAudGV4dGFyZWFbZGlzYWJsZWRdLCAuc2VsZWN0IHNlbGVjdFtkaXNhYmxlZF0sIC5maWxlLWN0YVtkaXNhYmxlZF0sXG4gIC5maWxlLW5hbWVbZGlzYWJsZWRdLCAucGFnaW5hdGlvbi1wcmV2aW91c1tkaXNhYmxlZF0sXG4gIC5wYWdpbmF0aW9uLW5leHRbZGlzYWJsZWRdLFxuICAucGFnaW5hdGlvbi1saW5rW2Rpc2FibGVkXSxcbiAgLnBhZ2luYXRpb24tZWxsaXBzaXNbZGlzYWJsZWRdLFxuICBmaWVsZHNldFtkaXNhYmxlZF0gLmJ1dHRvbixcbiAgZmllbGRzZXRbZGlzYWJsZWRdIC5pbnB1dCxcbiAgZmllbGRzZXRbZGlzYWJsZWRdIC50ZXh0YXJlYSxcbiAgZmllbGRzZXRbZGlzYWJsZWRdIC5zZWxlY3Qgc2VsZWN0LFxuICAuc2VsZWN0IGZpZWxkc2V0W2Rpc2FibGVkXSBzZWxlY3QsXG4gIGZpZWxkc2V0W2Rpc2FibGVkXSAuZmlsZS1jdGEsXG4gIGZpZWxkc2V0W2Rpc2FibGVkXSAuZmlsZS1uYW1lLFxuICBmaWVsZHNldFtkaXNhYmxlZF0gLnBhZ2luYXRpb24tcHJldmlvdXMsXG4gIGZpZWxkc2V0W2Rpc2FibGVkXSAucGFnaW5hdGlvbi1uZXh0LFxuICBmaWVsZHNldFtkaXNhYmxlZF0gLnBhZ2luYXRpb24tbGluayxcbiAgZmllbGRzZXRbZGlzYWJsZWRdIC5wYWdpbmF0aW9uLWVsbGlwc2lzIHtcbiAgICBjdXJzb3I6IG5vdC1hbGxvd2VkOyB9XG5cbi8qISBtaW5pcmVzZXQuY3NzIHYwLjAuNCB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9qZ3RobXMvbWluaXJlc2V0LmNzcyAqL1xuaHRtbCxcbmJvZHksXG5wLFxub2wsXG51bCxcbmxpLFxuZGwsXG5kdCxcbmRkLFxuYmxvY2txdW90ZSxcbmZpZ3VyZSxcbmZpZWxkc2V0LFxubGVnZW5kLFxudGV4dGFyZWEsXG5wcmUsXG5pZnJhbWUsXG5ocixcbmgxLFxuaDIsXG5oMyxcbmg0LFxuaDUsXG5oNiB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDsgfVxuXG5oMSxcbmgyLFxuaDMsXG5oNCxcbmg1LFxuaDYge1xuICBmb250LXNpemU6IDEwMCU7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7IH1cblxudWwge1xuICBsaXN0LXN0eWxlOiBub25lOyB9XG5cbmJ1dHRvbixcbmlucHV0LFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBtYXJnaW46IDA7IH1cblxuaHRtbCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IH1cblxuKiwgKjo6YmVmb3JlLCAqOjphZnRlciB7XG4gIGJveC1zaXppbmc6IGluaGVyaXQ7IH1cblxuaW1nLFxuZW1iZWQsXG5pZnJhbWUsXG5vYmplY3QsXG52aWRlbyB7XG4gIGhlaWdodDogYXV0bztcbiAgbWF4LXdpZHRoOiAxMDAlOyB9XG5cbmF1ZGlvIHtcbiAgbWF4LXdpZHRoOiAxMDAlOyB9XG5cbmlmcmFtZSB7XG4gIGJvcmRlcjogMDsgfVxuXG50YWJsZSB7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIGJvcmRlci1zcGFjaW5nOiAwOyB9XG5cbnRkLFxudGgge1xuICBwYWRkaW5nOiAwOyB9XG4gIHRkOm5vdChbYWxpZ25dKSxcbiAgdGg6bm90KFthbGlnbl0pIHtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0OyB9XG5cbmh0bWwge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgZm9udC1zaXplOiAxNnB4O1xuICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlO1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgbWluLXdpZHRoOiAzMDBweDtcbiAgb3ZlcmZsb3cteDogaGlkZGVuO1xuICBvdmVyZmxvdy15OiBzY3JvbGw7XG4gIHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZUxlZ2liaWxpdHk7XG4gIHRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IH1cblxuYXJ0aWNsZSxcbmFzaWRlLFxuZmlndXJlLFxuZm9vdGVyLFxuaGVhZGVyLFxuaGdyb3VwLFxuc2VjdGlvbiB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbmJvZHksXG5idXR0b24sXG5pbnB1dCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgZm9udC1mYW1pbHk6IEJsaW5rTWFjU3lzdGVtRm9udCwgLWFwcGxlLXN5c3RlbSwgXCJTZWdvZSBVSVwiLCBcIlJvYm90b1wiLCBcIk94eWdlblwiLCBcIlVidW50dVwiLCBcIkNhbnRhcmVsbFwiLCBcIkZpcmEgU2Fuc1wiLCBcIkRyb2lkIFNhbnNcIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkhlbHZldGljYVwiLCBcIkFyaWFsXCIsIHNhbnMtc2VyaWY7IH1cblxuY29kZSxcbnByZSB7XG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBhdXRvO1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhdXRvO1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlOyB9XG5cbmJvZHkge1xuICBjb2xvcjogIzRhNGE0YTtcbiAgZm9udC1zaXplOiAxZW07XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjU7IH1cblxuYSB7XG4gIGNvbG9yOiAjMzI3M2RjO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuICBhIHN0cm9uZyB7XG4gICAgY29sb3I6IGN1cnJlbnRDb2xvcjsgfVxuICBhOmhvdmVyIHtcbiAgICBjb2xvcjogIzM2MzYzNjsgfVxuXG5jb2RlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGVzbW9rZTtcbiAgY29sb3I6ICNmZjM4NjA7XG4gIGZvbnQtc2l6ZTogMC44NzVlbTtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgcGFkZGluZzogMC4yNWVtIDAuNWVtIDAuMjVlbTsgfVxuXG5ociB7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlc21va2U7XG4gIGJvcmRlcjogbm9uZTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGhlaWdodDogMnB4O1xuICBtYXJnaW46IDEuNXJlbSAwOyB9XG5cbmltZyB7XG4gIGhlaWdodDogYXV0bztcbiAgbWF4LXdpZHRoOiAxMDAlOyB9XG5cbmlucHV0W3R5cGU9XCJjaGVja2JveFwiXSxcbmlucHV0W3R5cGU9XCJyYWRpb1wiXSB7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxuXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogMC44NzVlbTsgfVxuXG5zcGFuIHtcbiAgZm9udC1zdHlsZTogaW5oZXJpdDtcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7IH1cblxuc3Ryb25nIHtcbiAgY29sb3I6ICMzNjM2MzY7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7IH1cblxuZmllbGRzZXQge1xuICBib3JkZXI6IG5vbmU7IH1cblxucHJlIHtcbiAgLXdlYmtpdC1vdmVyZmxvdy1zY3JvbGxpbmc6IHRvdWNoO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZXNtb2tlO1xuICBjb2xvcjogIzRhNGE0YTtcbiAgZm9udC1zaXplOiAwLjg3NWVtO1xuICBvdmVyZmxvdy14OiBhdXRvO1xuICBwYWRkaW5nOiAxLjI1cmVtIDEuNXJlbTtcbiAgd2hpdGUtc3BhY2U6IHByZTtcbiAgd29yZC13cmFwOiBub3JtYWw7IH1cbiAgcHJlIGNvZGUge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgZm9udC1zaXplOiAxZW07XG4gICAgcGFkZGluZzogMDsgfVxuXG50YWJsZSB0ZCxcbnRhYmxlIHRoIHtcbiAgdmVydGljYWwtYWxpZ246IHRvcDsgfVxuICB0YWJsZSB0ZDpub3QoW2FsaWduXSksXG4gIHRhYmxlIHRoOm5vdChbYWxpZ25dKSB7XG4gICAgdGV4dC1hbGlnbjogbGVmdDsgfVxuXG50YWJsZSB0aCB7XG4gIGNvbG9yOiAjMzYzNjM2OyB9XG5cbi5pcy1jbGVhcmZpeDo6YWZ0ZXIge1xuICBjbGVhcjogYm90aDtcbiAgY29udGVudDogXCIgXCI7XG4gIGRpc3BsYXk6IHRhYmxlOyB9XG5cbi5pcy1wdWxsZWQtbGVmdCB7XG4gIGZsb2F0OiBsZWZ0ICFpbXBvcnRhbnQ7IH1cblxuLmlzLXB1bGxlZC1yaWdodCB7XG4gIGZsb2F0OiByaWdodCAhaW1wb3J0YW50OyB9XG5cbi5pcy1jbGlwcGVkIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbiAhaW1wb3J0YW50OyB9XG5cbi5pcy1zaXplLTEge1xuICBmb250LXNpemU6IDNyZW0gIWltcG9ydGFudDsgfVxuXG4uaXMtc2l6ZS0yIHtcbiAgZm9udC1zaXplOiAyLjVyZW0gIWltcG9ydGFudDsgfVxuXG4uaXMtc2l6ZS0zIHtcbiAgZm9udC1zaXplOiAycmVtICFpbXBvcnRhbnQ7IH1cblxuLmlzLXNpemUtNCB7XG4gIGZvbnQtc2l6ZTogMS41cmVtICFpbXBvcnRhbnQ7IH1cblxuLmlzLXNpemUtNSB7XG4gIGZvbnQtc2l6ZTogMS4yNXJlbSAhaW1wb3J0YW50OyB9XG5cbi5pcy1zaXplLTYge1xuICBmb250LXNpemU6IDFyZW0gIWltcG9ydGFudDsgfVxuXG4uaXMtc2l6ZS03IHtcbiAgZm9udC1zaXplOiAwLjc1cmVtICFpbXBvcnRhbnQ7IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgLmlzLXNpemUtMS1tb2JpbGUge1xuICAgIGZvbnQtc2l6ZTogM3JlbSAhaW1wb3J0YW50OyB9XG4gIC5pcy1zaXplLTItbW9iaWxlIHtcbiAgICBmb250LXNpemU6IDIuNXJlbSAhaW1wb3J0YW50OyB9XG4gIC5pcy1zaXplLTMtbW9iaWxlIHtcbiAgICBmb250LXNpemU6IDJyZW0gIWltcG9ydGFudDsgfVxuICAuaXMtc2l6ZS00LW1vYmlsZSB7XG4gICAgZm9udC1zaXplOiAxLjVyZW0gIWltcG9ydGFudDsgfVxuICAuaXMtc2l6ZS01LW1vYmlsZSB7XG4gICAgZm9udC1zaXplOiAxLjI1cmVtICFpbXBvcnRhbnQ7IH1cbiAgLmlzLXNpemUtNi1tb2JpbGUge1xuICAgIGZvbnQtc2l6ZTogMXJlbSAhaW1wb3J0YW50OyB9XG4gIC5pcy1zaXplLTctbW9iaWxlIHtcbiAgICBmb250LXNpemU6IDAuNzVyZW0gIWltcG9ydGFudDsgfSB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OXB4KSwgcHJpbnQge1xuICAuaXMtc2l6ZS0xLXRhYmxldCB7XG4gICAgZm9udC1zaXplOiAzcmVtICFpbXBvcnRhbnQ7IH1cbiAgLmlzLXNpemUtMi10YWJsZXQge1xuICAgIGZvbnQtc2l6ZTogMi41cmVtICFpbXBvcnRhbnQ7IH1cbiAgLmlzLXNpemUtMy10YWJsZXQge1xuICAgIGZvbnQtc2l6ZTogMnJlbSAhaW1wb3J0YW50OyB9XG4gIC5pcy1zaXplLTQtdGFibGV0IHtcbiAgICBmb250LXNpemU6IDEuNXJlbSAhaW1wb3J0YW50OyB9XG4gIC5pcy1zaXplLTUtdGFibGV0IHtcbiAgICBmb250LXNpemU6IDEuMjVyZW0gIWltcG9ydGFudDsgfVxuICAuaXMtc2l6ZS02LXRhYmxldCB7XG4gICAgZm9udC1zaXplOiAxcmVtICFpbXBvcnRhbnQ7IH1cbiAgLmlzLXNpemUtNy10YWJsZXQge1xuICAgIGZvbnQtc2l6ZTogMC43NXJlbSAhaW1wb3J0YW50OyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTAyM3B4KSB7XG4gIC5pcy1zaXplLTEtdG91Y2gge1xuICAgIGZvbnQtc2l6ZTogM3JlbSAhaW1wb3J0YW50OyB9XG4gIC5pcy1zaXplLTItdG91Y2gge1xuICAgIGZvbnQtc2l6ZTogMi41cmVtICFpbXBvcnRhbnQ7IH1cbiAgLmlzLXNpemUtMy10b3VjaCB7XG4gICAgZm9udC1zaXplOiAycmVtICFpbXBvcnRhbnQ7IH1cbiAgLmlzLXNpemUtNC10b3VjaCB7XG4gICAgZm9udC1zaXplOiAxLjVyZW0gIWltcG9ydGFudDsgfVxuICAuaXMtc2l6ZS01LXRvdWNoIHtcbiAgICBmb250LXNpemU6IDEuMjVyZW0gIWltcG9ydGFudDsgfVxuICAuaXMtc2l6ZS02LXRvdWNoIHtcbiAgICBmb250LXNpemU6IDFyZW0gIWltcG9ydGFudDsgfVxuICAuaXMtc2l6ZS03LXRvdWNoIHtcbiAgICBmb250LXNpemU6IDAuNzVyZW0gIWltcG9ydGFudDsgfSB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAuaXMtc2l6ZS0xLWRlc2t0b3Age1xuICAgIGZvbnQtc2l6ZTogM3JlbSAhaW1wb3J0YW50OyB9XG4gIC5pcy1zaXplLTItZGVza3RvcCB7XG4gICAgZm9udC1zaXplOiAyLjVyZW0gIWltcG9ydGFudDsgfVxuICAuaXMtc2l6ZS0zLWRlc2t0b3Age1xuICAgIGZvbnQtc2l6ZTogMnJlbSAhaW1wb3J0YW50OyB9XG4gIC5pcy1zaXplLTQtZGVza3RvcCB7XG4gICAgZm9udC1zaXplOiAxLjVyZW0gIWltcG9ydGFudDsgfVxuICAuaXMtc2l6ZS01LWRlc2t0b3Age1xuICAgIGZvbnQtc2l6ZTogMS4yNXJlbSAhaW1wb3J0YW50OyB9XG4gIC5pcy1zaXplLTYtZGVza3RvcCB7XG4gICAgZm9udC1zaXplOiAxcmVtICFpbXBvcnRhbnQ7IH1cbiAgLmlzLXNpemUtNy1kZXNrdG9wIHtcbiAgICBmb250LXNpemU6IDAuNzVyZW0gIWltcG9ydGFudDsgfSB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEyMTZweCkge1xuICAuaXMtc2l6ZS0xLXdpZGVzY3JlZW4ge1xuICAgIGZvbnQtc2l6ZTogM3JlbSAhaW1wb3J0YW50OyB9XG4gIC5pcy1zaXplLTItd2lkZXNjcmVlbiB7XG4gICAgZm9udC1zaXplOiAyLjVyZW0gIWltcG9ydGFudDsgfVxuICAuaXMtc2l6ZS0zLXdpZGVzY3JlZW4ge1xuICAgIGZvbnQtc2l6ZTogMnJlbSAhaW1wb3J0YW50OyB9XG4gIC5pcy1zaXplLTQtd2lkZXNjcmVlbiB7XG4gICAgZm9udC1zaXplOiAxLjVyZW0gIWltcG9ydGFudDsgfVxuICAuaXMtc2l6ZS01LXdpZGVzY3JlZW4ge1xuICAgIGZvbnQtc2l6ZTogMS4yNXJlbSAhaW1wb3J0YW50OyB9XG4gIC5pcy1zaXplLTYtd2lkZXNjcmVlbiB7XG4gICAgZm9udC1zaXplOiAxcmVtICFpbXBvcnRhbnQ7IH1cbiAgLmlzLXNpemUtNy13aWRlc2NyZWVuIHtcbiAgICBmb250LXNpemU6IDAuNzVyZW0gIWltcG9ydGFudDsgfSB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDE0MDhweCkge1xuICAuaXMtc2l6ZS0xLWZ1bGxoZCB7XG4gICAgZm9udC1zaXplOiAzcmVtICFpbXBvcnRhbnQ7IH1cbiAgLmlzLXNpemUtMi1mdWxsaGQge1xuICAgIGZvbnQtc2l6ZTogMi41cmVtICFpbXBvcnRhbnQ7IH1cbiAgLmlzLXNpemUtMy1mdWxsaGQge1xuICAgIGZvbnQtc2l6ZTogMnJlbSAhaW1wb3J0YW50OyB9XG4gIC5pcy1zaXplLTQtZnVsbGhkIHtcbiAgICBmb250LXNpemU6IDEuNXJlbSAhaW1wb3J0YW50OyB9XG4gIC5pcy1zaXplLTUtZnVsbGhkIHtcbiAgICBmb250LXNpemU6IDEuMjVyZW0gIWltcG9ydGFudDsgfVxuICAuaXMtc2l6ZS02LWZ1bGxoZCB7XG4gICAgZm9udC1zaXplOiAxcmVtICFpbXBvcnRhbnQ7IH1cbiAgLmlzLXNpemUtNy1mdWxsaGQge1xuICAgIGZvbnQtc2l6ZTogMC43NXJlbSAhaW1wb3J0YW50OyB9IH1cblxuLmhhcy10ZXh0LWNlbnRlcmVkIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyICFpbXBvcnRhbnQ7IH1cblxuLmhhcy10ZXh0LWp1c3RpZmllZCB7XG4gIHRleHQtYWxpZ246IGp1c3RpZnkgIWltcG9ydGFudDsgfVxuXG4uaGFzLXRleHQtbGVmdCB7XG4gIHRleHQtYWxpZ246IGxlZnQgIWltcG9ydGFudDsgfVxuXG4uaGFzLXRleHQtcmlnaHQge1xuICB0ZXh0LWFsaWduOiByaWdodCAhaW1wb3J0YW50OyB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC5oYXMtdGV4dC1jZW50ZXJlZC1tb2JpbGUge1xuICAgIHRleHQtYWxpZ246IGNlbnRlciAhaW1wb3J0YW50OyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY5cHgpLCBwcmludCB7XG4gIC5oYXMtdGV4dC1jZW50ZXJlZC10YWJsZXQge1xuICAgIHRleHQtYWxpZ246IGNlbnRlciAhaW1wb3J0YW50OyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY5cHgpIGFuZCAobWF4LXdpZHRoOiAxMDIzcHgpIHtcbiAgLmhhcy10ZXh0LWNlbnRlcmVkLXRhYmxldC1vbmx5IHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXIgIWltcG9ydGFudDsgfSB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEwMjNweCkge1xuICAuaGFzLXRleHQtY2VudGVyZWQtdG91Y2gge1xuICAgIHRleHQtYWxpZ246IGNlbnRlciAhaW1wb3J0YW50OyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC5oYXMtdGV4dC1jZW50ZXJlZC1kZXNrdG9wIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXIgIWltcG9ydGFudDsgfSB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjRweCkgYW5kIChtYXgtd2lkdGg6IDEyMTVweCkge1xuICAuaGFzLXRleHQtY2VudGVyZWQtZGVza3RvcC1vbmx5IHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXIgIWltcG9ydGFudDsgfSB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEyMTZweCkge1xuICAuaGFzLXRleHQtY2VudGVyZWQtd2lkZXNjcmVlbiB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyICFpbXBvcnRhbnQ7IH0gfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMjE2cHgpIGFuZCAobWF4LXdpZHRoOiAxNDA3cHgpIHtcbiAgLmhhcy10ZXh0LWNlbnRlcmVkLXdpZGVzY3JlZW4tb25seSB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyICFpbXBvcnRhbnQ7IH0gfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxNDA4cHgpIHtcbiAgLmhhcy10ZXh0LWNlbnRlcmVkLWZ1bGxoZCB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyICFpbXBvcnRhbnQ7IH0gfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAuaGFzLXRleHQtanVzdGlmaWVkLW1vYmlsZSB7XG4gICAgdGV4dC1hbGlnbjoganVzdGlmeSAhaW1wb3J0YW50OyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY5cHgpLCBwcmludCB7XG4gIC5oYXMtdGV4dC1qdXN0aWZpZWQtdGFibGV0IHtcbiAgICB0ZXh0LWFsaWduOiBqdXN0aWZ5ICFpbXBvcnRhbnQ7IH0gfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjlweCkgYW5kIChtYXgtd2lkdGg6IDEwMjNweCkge1xuICAuaGFzLXRleHQtanVzdGlmaWVkLXRhYmxldC1vbmx5IHtcbiAgICB0ZXh0LWFsaWduOiBqdXN0aWZ5ICFpbXBvcnRhbnQ7IH0gfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMDIzcHgpIHtcbiAgLmhhcy10ZXh0LWp1c3RpZmllZC10b3VjaCB7XG4gICAgdGV4dC1hbGlnbjoganVzdGlmeSAhaW1wb3J0YW50OyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC5oYXMtdGV4dC1qdXN0aWZpZWQtZGVza3RvcCB7XG4gICAgdGV4dC1hbGlnbjoganVzdGlmeSAhaW1wb3J0YW50OyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNHB4KSBhbmQgKG1heC13aWR0aDogMTIxNXB4KSB7XG4gIC5oYXMtdGV4dC1qdXN0aWZpZWQtZGVza3RvcC1vbmx5IHtcbiAgICB0ZXh0LWFsaWduOiBqdXN0aWZ5ICFpbXBvcnRhbnQ7IH0gfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMjE2cHgpIHtcbiAgLmhhcy10ZXh0LWp1c3RpZmllZC13aWRlc2NyZWVuIHtcbiAgICB0ZXh0LWFsaWduOiBqdXN0aWZ5ICFpbXBvcnRhbnQ7IH0gfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMjE2cHgpIGFuZCAobWF4LXdpZHRoOiAxNDA3cHgpIHtcbiAgLmhhcy10ZXh0LWp1c3RpZmllZC13aWRlc2NyZWVuLW9ubHkge1xuICAgIHRleHQtYWxpZ246IGp1c3RpZnkgIWltcG9ydGFudDsgfSB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDE0MDhweCkge1xuICAuaGFzLXRleHQtanVzdGlmaWVkLWZ1bGxoZCB7XG4gICAgdGV4dC1hbGlnbjoganVzdGlmeSAhaW1wb3J0YW50OyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgLmhhcy10ZXh0LWxlZnQtbW9iaWxlIHtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0ICFpbXBvcnRhbnQ7IH0gfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjlweCksIHByaW50IHtcbiAgLmhhcy10ZXh0LWxlZnQtdGFibGV0IHtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0ICFpbXBvcnRhbnQ7IH0gfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjlweCkgYW5kIChtYXgtd2lkdGg6IDEwMjNweCkge1xuICAuaGFzLXRleHQtbGVmdC10YWJsZXQtb25seSB7XG4gICAgdGV4dC1hbGlnbjogbGVmdCAhaW1wb3J0YW50OyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTAyM3B4KSB7XG4gIC5oYXMtdGV4dC1sZWZ0LXRvdWNoIHtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0ICFpbXBvcnRhbnQ7IH0gfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLmhhcy10ZXh0LWxlZnQtZGVza3RvcCB7XG4gICAgdGV4dC1hbGlnbjogbGVmdCAhaW1wb3J0YW50OyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNHB4KSBhbmQgKG1heC13aWR0aDogMTIxNXB4KSB7XG4gIC5oYXMtdGV4dC1sZWZ0LWRlc2t0b3Atb25seSB7XG4gICAgdGV4dC1hbGlnbjogbGVmdCAhaW1wb3J0YW50OyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTIxNnB4KSB7XG4gIC5oYXMtdGV4dC1sZWZ0LXdpZGVzY3JlZW4ge1xuICAgIHRleHQtYWxpZ246IGxlZnQgIWltcG9ydGFudDsgfSB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEyMTZweCkgYW5kIChtYXgtd2lkdGg6IDE0MDdweCkge1xuICAuaGFzLXRleHQtbGVmdC13aWRlc2NyZWVuLW9ubHkge1xuICAgIHRleHQtYWxpZ246IGxlZnQgIWltcG9ydGFudDsgfSB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDE0MDhweCkge1xuICAuaGFzLXRleHQtbGVmdC1mdWxsaGQge1xuICAgIHRleHQtYWxpZ246IGxlZnQgIWltcG9ydGFudDsgfSB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC5oYXMtdGV4dC1yaWdodC1tb2JpbGUge1xuICAgIHRleHQtYWxpZ246IHJpZ2h0ICFpbXBvcnRhbnQ7IH0gfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjlweCksIHByaW50IHtcbiAgLmhhcy10ZXh0LXJpZ2h0LXRhYmxldCB7XG4gICAgdGV4dC1hbGlnbjogcmlnaHQgIWltcG9ydGFudDsgfSB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OXB4KSBhbmQgKG1heC13aWR0aDogMTAyM3B4KSB7XG4gIC5oYXMtdGV4dC1yaWdodC10YWJsZXQtb25seSB7XG4gICAgdGV4dC1hbGlnbjogcmlnaHQgIWltcG9ydGFudDsgfSB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEwMjNweCkge1xuICAuaGFzLXRleHQtcmlnaHQtdG91Y2gge1xuICAgIHRleHQtYWxpZ246IHJpZ2h0ICFpbXBvcnRhbnQ7IH0gfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLmhhcy10ZXh0LXJpZ2h0LWRlc2t0b3Age1xuICAgIHRleHQtYWxpZ246IHJpZ2h0ICFpbXBvcnRhbnQ7IH0gfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI0cHgpIGFuZCAobWF4LXdpZHRoOiAxMjE1cHgpIHtcbiAgLmhhcy10ZXh0LXJpZ2h0LWRlc2t0b3Atb25seSB7XG4gICAgdGV4dC1hbGlnbjogcmlnaHQgIWltcG9ydGFudDsgfSB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEyMTZweCkge1xuICAuaGFzLXRleHQtcmlnaHQtd2lkZXNjcmVlbiB7XG4gICAgdGV4dC1hbGlnbjogcmlnaHQgIWltcG9ydGFudDsgfSB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEyMTZweCkgYW5kIChtYXgtd2lkdGg6IDE0MDdweCkge1xuICAuaGFzLXRleHQtcmlnaHQtd2lkZXNjcmVlbi1vbmx5IHtcbiAgICB0ZXh0LWFsaWduOiByaWdodCAhaW1wb3J0YW50OyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTQwOHB4KSB7XG4gIC5oYXMtdGV4dC1yaWdodC1mdWxsaGQge1xuICAgIHRleHQtYWxpZ246IHJpZ2h0ICFpbXBvcnRhbnQ7IH0gfVxuXG4uaXMtY2FwaXRhbGl6ZWQge1xuICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZSAhaW1wb3J0YW50OyB9XG5cbi5pcy1sb3dlcmNhc2Uge1xuICB0ZXh0LXRyYW5zZm9ybTogbG93ZXJjYXNlICFpbXBvcnRhbnQ7IH1cblxuLmlzLXVwcGVyY2FzZSB7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2UgIWltcG9ydGFudDsgfVxuXG4uaXMtaXRhbGljIHtcbiAgZm9udC1zdHlsZTogaXRhbGljICFpbXBvcnRhbnQ7IH1cblxuLmhhcy10ZXh0LXdoaXRlIHtcbiAgY29sb3I6IHdoaXRlICFpbXBvcnRhbnQ7IH1cblxuYS5oYXMtdGV4dC13aGl0ZTpob3ZlciwgYS5oYXMtdGV4dC13aGl0ZTpmb2N1cyB7XG4gIGNvbG9yOiAjZTZlNmU2ICFpbXBvcnRhbnQ7IH1cblxuLmhhcy1iYWNrZ3JvdW5kLXdoaXRlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGUgIWltcG9ydGFudDsgfVxuXG4uaGFzLXRleHQtYmxhY2sge1xuICBjb2xvcjogIzBhMGEwYSAhaW1wb3J0YW50OyB9XG5cbmEuaGFzLXRleHQtYmxhY2s6aG92ZXIsIGEuaGFzLXRleHQtYmxhY2s6Zm9jdXMge1xuICBjb2xvcjogYmxhY2sgIWltcG9ydGFudDsgfVxuXG4uaGFzLWJhY2tncm91bmQtYmxhY2sge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMGEwYTBhICFpbXBvcnRhbnQ7IH1cblxuLmhhcy10ZXh0LWxpZ2h0IHtcbiAgY29sb3I6IHdoaXRlc21va2UgIWltcG9ydGFudDsgfVxuXG5hLmhhcy10ZXh0LWxpZ2h0OmhvdmVyLCBhLmhhcy10ZXh0LWxpZ2h0OmZvY3VzIHtcbiAgY29sb3I6ICNkYmRiZGIgIWltcG9ydGFudDsgfVxuXG4uaGFzLWJhY2tncm91bmQtbGlnaHQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZXNtb2tlICFpbXBvcnRhbnQ7IH1cblxuLmhhcy10ZXh0LWRhcmsge1xuICBjb2xvcjogIzM2MzYzNiAhaW1wb3J0YW50OyB9XG5cbmEuaGFzLXRleHQtZGFyazpob3ZlciwgYS5oYXMtdGV4dC1kYXJrOmZvY3VzIHtcbiAgY29sb3I6ICMxYzFjMWMgIWltcG9ydGFudDsgfVxuXG4uaGFzLWJhY2tncm91bmQtZGFyayB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzNjM2MzYgIWltcG9ydGFudDsgfVxuXG4uaGFzLXRleHQtcHJpbWFyeSB7XG4gIGNvbG9yOiAjMDBkMWIyICFpbXBvcnRhbnQ7IH1cblxuYS5oYXMtdGV4dC1wcmltYXJ5OmhvdmVyLCBhLmhhcy10ZXh0LXByaW1hcnk6Zm9jdXMge1xuICBjb2xvcjogIzAwOWU4NiAhaW1wb3J0YW50OyB9XG5cbi5oYXMtYmFja2dyb3VuZC1wcmltYXJ5IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwZDFiMiAhaW1wb3J0YW50OyB9XG5cbi5oYXMtdGV4dC1saW5rIHtcbiAgY29sb3I6ICMzMjczZGMgIWltcG9ydGFudDsgfVxuXG5hLmhhcy10ZXh0LWxpbms6aG92ZXIsIGEuaGFzLXRleHQtbGluazpmb2N1cyB7XG4gIGNvbG9yOiAjMjA1YmJjICFpbXBvcnRhbnQ7IH1cblxuLmhhcy1iYWNrZ3JvdW5kLWxpbmsge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzI3M2RjICFpbXBvcnRhbnQ7IH1cblxuLmhhcy10ZXh0LWluZm8ge1xuICBjb2xvcjogIzIwOWNlZSAhaW1wb3J0YW50OyB9XG5cbmEuaGFzLXRleHQtaW5mbzpob3ZlciwgYS5oYXMtdGV4dC1pbmZvOmZvY3VzIHtcbiAgY29sb3I6ICMwZjgxY2MgIWltcG9ydGFudDsgfVxuXG4uaGFzLWJhY2tncm91bmQtaW5mbyB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyMDljZWUgIWltcG9ydGFudDsgfVxuXG4uaGFzLXRleHQtc3VjY2VzcyB7XG4gIGNvbG9yOiAjMjNkMTYwICFpbXBvcnRhbnQ7IH1cblxuYS5oYXMtdGV4dC1zdWNjZXNzOmhvdmVyLCBhLmhhcy10ZXh0LXN1Y2Nlc3M6Zm9jdXMge1xuICBjb2xvcjogIzFjYTY0YyAhaW1wb3J0YW50OyB9XG5cbi5oYXMtYmFja2dyb3VuZC1zdWNjZXNzIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzIzZDE2MCAhaW1wb3J0YW50OyB9XG5cbi5oYXMtdGV4dC13YXJuaW5nIHtcbiAgY29sb3I6ICNmZmRkNTcgIWltcG9ydGFudDsgfVxuXG5hLmhhcy10ZXh0LXdhcm5pbmc6aG92ZXIsIGEuaGFzLXRleHQtd2FybmluZzpmb2N1cyB7XG4gIGNvbG9yOiAjZmZkMzI0ICFpbXBvcnRhbnQ7IH1cblxuLmhhcy1iYWNrZ3JvdW5kLXdhcm5pbmcge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZkZDU3ICFpbXBvcnRhbnQ7IH1cblxuLmhhcy10ZXh0LWRhbmdlciB7XG4gIGNvbG9yOiAjZmYzODYwICFpbXBvcnRhbnQ7IH1cblxuYS5oYXMtdGV4dC1kYW5nZXI6aG92ZXIsIGEuaGFzLXRleHQtZGFuZ2VyOmZvY3VzIHtcbiAgY29sb3I6ICNmZjA1MzcgIWltcG9ydGFudDsgfVxuXG4uaGFzLWJhY2tncm91bmQtZGFuZ2VyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmMzg2MCAhaW1wb3J0YW50OyB9XG5cbi5oYXMtdGV4dC1ibGFjay1iaXMge1xuICBjb2xvcjogIzEyMTIxMiAhaW1wb3J0YW50OyB9XG5cbi5oYXMtYmFja2dyb3VuZC1ibGFjay1iaXMge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTIxMjEyICFpbXBvcnRhbnQ7IH1cblxuLmhhcy10ZXh0LWJsYWNrLXRlciB7XG4gIGNvbG9yOiAjMjQyNDI0ICFpbXBvcnRhbnQ7IH1cblxuLmhhcy1iYWNrZ3JvdW5kLWJsYWNrLXRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyNDI0MjQgIWltcG9ydGFudDsgfVxuXG4uaGFzLXRleHQtZ3JleS1kYXJrZXIge1xuICBjb2xvcjogIzM2MzYzNiAhaW1wb3J0YW50OyB9XG5cbi5oYXMtYmFja2dyb3VuZC1ncmV5LWRhcmtlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzNjM2MzYgIWltcG9ydGFudDsgfVxuXG4uaGFzLXRleHQtZ3JleS1kYXJrIHtcbiAgY29sb3I6ICM0YTRhNGEgIWltcG9ydGFudDsgfVxuXG4uaGFzLWJhY2tncm91bmQtZ3JleS1kYXJrIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzRhNGE0YSAhaW1wb3J0YW50OyB9XG5cbi5oYXMtdGV4dC1ncmV5IHtcbiAgY29sb3I6ICM3YTdhN2EgIWltcG9ydGFudDsgfVxuXG4uaGFzLWJhY2tncm91bmQtZ3JleSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM3YTdhN2EgIWltcG9ydGFudDsgfVxuXG4uaGFzLXRleHQtZ3JleS1saWdodCB7XG4gIGNvbG9yOiAjYjViNWI1ICFpbXBvcnRhbnQ7IH1cblxuLmhhcy1iYWNrZ3JvdW5kLWdyZXktbGlnaHQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYjViNWI1ICFpbXBvcnRhbnQ7IH1cblxuLmhhcy10ZXh0LWdyZXktbGlnaHRlciB7XG4gIGNvbG9yOiAjZGJkYmRiICFpbXBvcnRhbnQ7IH1cblxuLmhhcy1iYWNrZ3JvdW5kLWdyZXktbGlnaHRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNkYmRiZGIgIWltcG9ydGFudDsgfVxuXG4uaGFzLXRleHQtd2hpdGUtdGVyIHtcbiAgY29sb3I6IHdoaXRlc21va2UgIWltcG9ydGFudDsgfVxuXG4uaGFzLWJhY2tncm91bmQtd2hpdGUtdGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGVzbW9rZSAhaW1wb3J0YW50OyB9XG5cbi5oYXMtdGV4dC13aGl0ZS1iaXMge1xuICBjb2xvcjogI2ZhZmFmYSAhaW1wb3J0YW50OyB9XG5cbi5oYXMtYmFja2dyb3VuZC13aGl0ZS1iaXMge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmFmYWZhICFpbXBvcnRhbnQ7IH1cblxuLmhhcy10ZXh0LXdlaWdodC1saWdodCB7XG4gIGZvbnQtd2VpZ2h0OiAzMDAgIWltcG9ydGFudDsgfVxuXG4uaGFzLXRleHQtd2VpZ2h0LW5vcm1hbCB7XG4gIGZvbnQtd2VpZ2h0OiA0MDAgIWltcG9ydGFudDsgfVxuXG4uaGFzLXRleHQtd2VpZ2h0LW1lZGl1bSB7XG4gIGZvbnQtd2VpZ2h0OiA1MDAgIWltcG9ydGFudDsgfVxuXG4uaGFzLXRleHQtd2VpZ2h0LXNlbWlib2xkIHtcbiAgZm9udC13ZWlnaHQ6IDYwMCAhaW1wb3J0YW50OyB9XG5cbi5oYXMtdGV4dC13ZWlnaHQtYm9sZCB7XG4gIGZvbnQtd2VpZ2h0OiA3MDAgIWltcG9ydGFudDsgfVxuXG4uaXMtZmFtaWx5LXByaW1hcnkge1xuICBmb250LWZhbWlseTogQmxpbmtNYWNTeXN0ZW1Gb250LCAtYXBwbGUtc3lzdGVtLCBcIlNlZ29lIFVJXCIsIFwiUm9ib3RvXCIsIFwiT3h5Z2VuXCIsIFwiVWJ1bnR1XCIsIFwiQ2FudGFyZWxsXCIsIFwiRmlyYSBTYW5zXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiSGVsdmV0aWNhXCIsIFwiQXJpYWxcIiwgc2Fucy1zZXJpZiAhaW1wb3J0YW50OyB9XG5cbi5pcy1mYW1pbHktc2Vjb25kYXJ5IHtcbiAgZm9udC1mYW1pbHk6IEJsaW5rTWFjU3lzdGVtRm9udCwgLWFwcGxlLXN5c3RlbSwgXCJTZWdvZSBVSVwiLCBcIlJvYm90b1wiLCBcIk94eWdlblwiLCBcIlVidW50dVwiLCBcIkNhbnRhcmVsbFwiLCBcIkZpcmEgU2Fuc1wiLCBcIkRyb2lkIFNhbnNcIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkhlbHZldGljYVwiLCBcIkFyaWFsXCIsIHNhbnMtc2VyaWYgIWltcG9ydGFudDsgfVxuXG4uaXMtZmFtaWx5LXNhbnMtc2VyaWYge1xuICBmb250LWZhbWlseTogQmxpbmtNYWNTeXN0ZW1Gb250LCAtYXBwbGUtc3lzdGVtLCBcIlNlZ29lIFVJXCIsIFwiUm9ib3RvXCIsIFwiT3h5Z2VuXCIsIFwiVWJ1bnR1XCIsIFwiQ2FudGFyZWxsXCIsIFwiRmlyYSBTYW5zXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiSGVsdmV0aWNhXCIsIFwiQXJpYWxcIiwgc2Fucy1zZXJpZiAhaW1wb3J0YW50OyB9XG5cbi5pcy1mYW1pbHktbW9ub3NwYWNlIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSAhaW1wb3J0YW50OyB9XG5cbi5pcy1mYW1pbHktY29kZSB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UgIWltcG9ydGFudDsgfVxuXG4uaXMtYmxvY2sge1xuICBkaXNwbGF5OiBibG9jayAhaW1wb3J0YW50OyB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC5pcy1ibG9jay1tb2JpbGUge1xuICAgIGRpc3BsYXk6IGJsb2NrICFpbXBvcnRhbnQ7IH0gfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjlweCksIHByaW50IHtcbiAgLmlzLWJsb2NrLXRhYmxldCB7XG4gICAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDsgfSB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OXB4KSBhbmQgKG1heC13aWR0aDogMTAyM3B4KSB7XG4gIC5pcy1ibG9jay10YWJsZXQtb25seSB7XG4gICAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDsgfSB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEwMjNweCkge1xuICAuaXMtYmxvY2stdG91Y2gge1xuICAgIGRpc3BsYXk6IGJsb2NrICFpbXBvcnRhbnQ7IH0gfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLmlzLWJsb2NrLWRlc2t0b3Age1xuICAgIGRpc3BsYXk6IGJsb2NrICFpbXBvcnRhbnQ7IH0gfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI0cHgpIGFuZCAobWF4LXdpZHRoOiAxMjE1cHgpIHtcbiAgLmlzLWJsb2NrLWRlc2t0b3Atb25seSB7XG4gICAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDsgfSB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEyMTZweCkge1xuICAuaXMtYmxvY2std2lkZXNjcmVlbiB7XG4gICAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDsgfSB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEyMTZweCkgYW5kIChtYXgtd2lkdGg6IDE0MDdweCkge1xuICAuaXMtYmxvY2std2lkZXNjcmVlbi1vbmx5IHtcbiAgICBkaXNwbGF5OiBibG9jayAhaW1wb3J0YW50OyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTQwOHB4KSB7XG4gIC5pcy1ibG9jay1mdWxsaGQge1xuICAgIGRpc3BsYXk6IGJsb2NrICFpbXBvcnRhbnQ7IH0gfVxuXG4uaXMtZmxleCB7XG4gIGRpc3BsYXk6IGZsZXggIWltcG9ydGFudDsgfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAuaXMtZmxleC1tb2JpbGUge1xuICAgIGRpc3BsYXk6IGZsZXggIWltcG9ydGFudDsgfSB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OXB4KSwgcHJpbnQge1xuICAuaXMtZmxleC10YWJsZXQge1xuICAgIGRpc3BsYXk6IGZsZXggIWltcG9ydGFudDsgfSB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OXB4KSBhbmQgKG1heC13aWR0aDogMTAyM3B4KSB7XG4gIC5pcy1mbGV4LXRhYmxldC1vbmx5IHtcbiAgICBkaXNwbGF5OiBmbGV4ICFpbXBvcnRhbnQ7IH0gfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMDIzcHgpIHtcbiAgLmlzLWZsZXgtdG91Y2gge1xuICAgIGRpc3BsYXk6IGZsZXggIWltcG9ydGFudDsgfSB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAuaXMtZmxleC1kZXNrdG9wIHtcbiAgICBkaXNwbGF5OiBmbGV4ICFpbXBvcnRhbnQ7IH0gfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI0cHgpIGFuZCAobWF4LXdpZHRoOiAxMjE1cHgpIHtcbiAgLmlzLWZsZXgtZGVza3RvcC1vbmx5IHtcbiAgICBkaXNwbGF5OiBmbGV4ICFpbXBvcnRhbnQ7IH0gfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMjE2cHgpIHtcbiAgLmlzLWZsZXgtd2lkZXNjcmVlbiB7XG4gICAgZGlzcGxheTogZmxleCAhaW1wb3J0YW50OyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTIxNnB4KSBhbmQgKG1heC13aWR0aDogMTQwN3B4KSB7XG4gIC5pcy1mbGV4LXdpZGVzY3JlZW4tb25seSB7XG4gICAgZGlzcGxheTogZmxleCAhaW1wb3J0YW50OyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTQwOHB4KSB7XG4gIC5pcy1mbGV4LWZ1bGxoZCB7XG4gICAgZGlzcGxheTogZmxleCAhaW1wb3J0YW50OyB9IH1cblxuLmlzLWlubGluZSB7XG4gIGRpc3BsYXk6IGlubGluZSAhaW1wb3J0YW50OyB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC5pcy1pbmxpbmUtbW9iaWxlIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUgIWltcG9ydGFudDsgfSB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OXB4KSwgcHJpbnQge1xuICAuaXMtaW5saW5lLXRhYmxldCB7XG4gICAgZGlzcGxheTogaW5saW5lICFpbXBvcnRhbnQ7IH0gfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjlweCkgYW5kIChtYXgtd2lkdGg6IDEwMjNweCkge1xuICAuaXMtaW5saW5lLXRhYmxldC1vbmx5IHtcbiAgICBkaXNwbGF5OiBpbmxpbmUgIWltcG9ydGFudDsgfSB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEwMjNweCkge1xuICAuaXMtaW5saW5lLXRvdWNoIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUgIWltcG9ydGFudDsgfSB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAuaXMtaW5saW5lLWRlc2t0b3Age1xuICAgIGRpc3BsYXk6IGlubGluZSAhaW1wb3J0YW50OyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNHB4KSBhbmQgKG1heC13aWR0aDogMTIxNXB4KSB7XG4gIC5pcy1pbmxpbmUtZGVza3RvcC1vbmx5IHtcbiAgICBkaXNwbGF5OiBpbmxpbmUgIWltcG9ydGFudDsgfSB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEyMTZweCkge1xuICAuaXMtaW5saW5lLXdpZGVzY3JlZW4ge1xuICAgIGRpc3BsYXk6IGlubGluZSAhaW1wb3J0YW50OyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTIxNnB4KSBhbmQgKG1heC13aWR0aDogMTQwN3B4KSB7XG4gIC5pcy1pbmxpbmUtd2lkZXNjcmVlbi1vbmx5IHtcbiAgICBkaXNwbGF5OiBpbmxpbmUgIWltcG9ydGFudDsgfSB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDE0MDhweCkge1xuICAuaXMtaW5saW5lLWZ1bGxoZCB7XG4gICAgZGlzcGxheTogaW5saW5lICFpbXBvcnRhbnQ7IH0gfVxuXG4uaXMtaW5saW5lLWJsb2NrIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrICFpbXBvcnRhbnQ7IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgLmlzLWlubGluZS1ibG9jay1tb2JpbGUge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jayAhaW1wb3J0YW50OyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY5cHgpLCBwcmludCB7XG4gIC5pcy1pbmxpbmUtYmxvY2stdGFibGV0IHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2sgIWltcG9ydGFudDsgfSB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OXB4KSBhbmQgKG1heC13aWR0aDogMTAyM3B4KSB7XG4gIC5pcy1pbmxpbmUtYmxvY2stdGFibGV0LW9ubHkge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jayAhaW1wb3J0YW50OyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTAyM3B4KSB7XG4gIC5pcy1pbmxpbmUtYmxvY2stdG91Y2gge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jayAhaW1wb3J0YW50OyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC5pcy1pbmxpbmUtYmxvY2stZGVza3RvcCB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrICFpbXBvcnRhbnQ7IH0gfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI0cHgpIGFuZCAobWF4LXdpZHRoOiAxMjE1cHgpIHtcbiAgLmlzLWlubGluZS1ibG9jay1kZXNrdG9wLW9ubHkge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jayAhaW1wb3J0YW50OyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTIxNnB4KSB7XG4gIC5pcy1pbmxpbmUtYmxvY2std2lkZXNjcmVlbiB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrICFpbXBvcnRhbnQ7IH0gfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMjE2cHgpIGFuZCAobWF4LXdpZHRoOiAxNDA3cHgpIHtcbiAgLmlzLWlubGluZS1ibG9jay13aWRlc2NyZWVuLW9ubHkge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jayAhaW1wb3J0YW50OyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTQwOHB4KSB7XG4gIC5pcy1pbmxpbmUtYmxvY2stZnVsbGhkIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2sgIWltcG9ydGFudDsgfSB9XG5cbi5pcy1pbmxpbmUtZmxleCB7XG4gIGRpc3BsYXk6IGlubGluZS1mbGV4ICFpbXBvcnRhbnQ7IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgLmlzLWlubGluZS1mbGV4LW1vYmlsZSB7XG4gICAgZGlzcGxheTogaW5saW5lLWZsZXggIWltcG9ydGFudDsgfSB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OXB4KSwgcHJpbnQge1xuICAuaXMtaW5saW5lLWZsZXgtdGFibGV0IHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtZmxleCAhaW1wb3J0YW50OyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY5cHgpIGFuZCAobWF4LXdpZHRoOiAxMDIzcHgpIHtcbiAgLmlzLWlubGluZS1mbGV4LXRhYmxldC1vbmx5IHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtZmxleCAhaW1wb3J0YW50OyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTAyM3B4KSB7XG4gIC5pcy1pbmxpbmUtZmxleC10b3VjaCB7XG4gICAgZGlzcGxheTogaW5saW5lLWZsZXggIWltcG9ydGFudDsgfSB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAuaXMtaW5saW5lLWZsZXgtZGVza3RvcCB7XG4gICAgZGlzcGxheTogaW5saW5lLWZsZXggIWltcG9ydGFudDsgfSB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjRweCkgYW5kIChtYXgtd2lkdGg6IDEyMTVweCkge1xuICAuaXMtaW5saW5lLWZsZXgtZGVza3RvcC1vbmx5IHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtZmxleCAhaW1wb3J0YW50OyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTIxNnB4KSB7XG4gIC5pcy1pbmxpbmUtZmxleC13aWRlc2NyZWVuIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtZmxleCAhaW1wb3J0YW50OyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTIxNnB4KSBhbmQgKG1heC13aWR0aDogMTQwN3B4KSB7XG4gIC5pcy1pbmxpbmUtZmxleC13aWRlc2NyZWVuLW9ubHkge1xuICAgIGRpc3BsYXk6IGlubGluZS1mbGV4ICFpbXBvcnRhbnQ7IH0gfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxNDA4cHgpIHtcbiAgLmlzLWlubGluZS1mbGV4LWZ1bGxoZCB7XG4gICAgZGlzcGxheTogaW5saW5lLWZsZXggIWltcG9ydGFudDsgfSB9XG5cbi5pcy1oaWRkZW4ge1xuICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH1cblxuLmlzLXNyLW9ubHkge1xuICBib3JkZXI6IG5vbmUgIWltcG9ydGFudDtcbiAgY2xpcDogcmVjdCgwLCAwLCAwLCAwKSAhaW1wb3J0YW50O1xuICBoZWlnaHQ6IDAuMDFlbSAhaW1wb3J0YW50O1xuICBvdmVyZmxvdzogaGlkZGVuICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmc6IDAgIWltcG9ydGFudDtcbiAgcG9zaXRpb246IGFic29sdXRlICFpbXBvcnRhbnQ7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXAgIWltcG9ydGFudDtcbiAgd2lkdGg6IDAuMDFlbSAhaW1wb3J0YW50OyB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC5pcy1oaWRkZW4tbW9iaWxlIHtcbiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0gfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjlweCksIHByaW50IHtcbiAgLmlzLWhpZGRlbi10YWJsZXQge1xuICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfSB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OXB4KSBhbmQgKG1heC13aWR0aDogMTAyM3B4KSB7XG4gIC5pcy1oaWRkZW4tdGFibGV0LW9ubHkge1xuICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfSB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEwMjNweCkge1xuICAuaXMtaGlkZGVuLXRvdWNoIHtcbiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0gfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLmlzLWhpZGRlbi1kZXNrdG9wIHtcbiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0gfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI0cHgpIGFuZCAobWF4LXdpZHRoOiAxMjE1cHgpIHtcbiAgLmlzLWhpZGRlbi1kZXNrdG9wLW9ubHkge1xuICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfSB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEyMTZweCkge1xuICAuaXMtaGlkZGVuLXdpZGVzY3JlZW4ge1xuICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfSB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEyMTZweCkgYW5kIChtYXgtd2lkdGg6IDE0MDdweCkge1xuICAuaXMtaGlkZGVuLXdpZGVzY3JlZW4tb25seSB7XG4gICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTQwOHB4KSB7XG4gIC5pcy1oaWRkZW4tZnVsbGhkIHtcbiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0gfVxuXG4uaXMtaW52aXNpYmxlIHtcbiAgdmlzaWJpbGl0eTogaGlkZGVuICFpbXBvcnRhbnQ7IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgLmlzLWludmlzaWJsZS1tb2JpbGUge1xuICAgIHZpc2liaWxpdHk6IGhpZGRlbiAhaW1wb3J0YW50OyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY5cHgpLCBwcmludCB7XG4gIC5pcy1pbnZpc2libGUtdGFibGV0IHtcbiAgICB2aXNpYmlsaXR5OiBoaWRkZW4gIWltcG9ydGFudDsgfSB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OXB4KSBhbmQgKG1heC13aWR0aDogMTAyM3B4KSB7XG4gIC5pcy1pbnZpc2libGUtdGFibGV0LW9ubHkge1xuICAgIHZpc2liaWxpdHk6IGhpZGRlbiAhaW1wb3J0YW50OyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTAyM3B4KSB7XG4gIC5pcy1pbnZpc2libGUtdG91Y2gge1xuICAgIHZpc2liaWxpdHk6IGhpZGRlbiAhaW1wb3J0YW50OyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC5pcy1pbnZpc2libGUtZGVza3RvcCB7XG4gICAgdmlzaWJpbGl0eTogaGlkZGVuICFpbXBvcnRhbnQ7IH0gfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI0cHgpIGFuZCAobWF4LXdpZHRoOiAxMjE1cHgpIHtcbiAgLmlzLWludmlzaWJsZS1kZXNrdG9wLW9ubHkge1xuICAgIHZpc2liaWxpdHk6IGhpZGRlbiAhaW1wb3J0YW50OyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTIxNnB4KSB7XG4gIC5pcy1pbnZpc2libGUtd2lkZXNjcmVlbiB7XG4gICAgdmlzaWJpbGl0eTogaGlkZGVuICFpbXBvcnRhbnQ7IH0gfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMjE2cHgpIGFuZCAobWF4LXdpZHRoOiAxNDA3cHgpIHtcbiAgLmlzLWludmlzaWJsZS13aWRlc2NyZWVuLW9ubHkge1xuICAgIHZpc2liaWxpdHk6IGhpZGRlbiAhaW1wb3J0YW50OyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTQwOHB4KSB7XG4gIC5pcy1pbnZpc2libGUtZnVsbGhkIHtcbiAgICB2aXNpYmlsaXR5OiBoaWRkZW4gIWltcG9ydGFudDsgfSB9XG5cbi5pcy1tYXJnaW5sZXNzIHtcbiAgbWFyZ2luOiAwICFpbXBvcnRhbnQ7IH1cblxuLmlzLXBhZGRpbmdsZXNzIHtcbiAgcGFkZGluZzogMCAhaW1wb3J0YW50OyB9XG5cbi5pcy1yYWRpdXNsZXNzIHtcbiAgYm9yZGVyLXJhZGl1czogMCAhaW1wb3J0YW50OyB9XG5cbi5pcy1zaGFkb3dsZXNzIHtcbiAgYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50OyB9XG5cbi5pcy1yZWxhdGl2ZSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZSAhaW1wb3J0YW50OyB9XG5cbi5ib3gge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgYm9yZGVyLXJhZGl1czogNnB4O1xuICBib3gtc2hhZG93OiAwIDJweCAzcHggcmdiYSgxMCwgMTAsIDEwLCAwLjEpLCAwIDAgMCAxcHggcmdiYSgxMCwgMTAsIDEwLCAwLjEpO1xuICBjb2xvcjogIzRhNGE0YTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBhZGRpbmc6IDEuMjVyZW07IH1cblxuYS5ib3g6aG92ZXIsIGEuYm94OmZvY3VzIHtcbiAgYm94LXNoYWRvdzogMCAycHggM3B4IHJnYmEoMTAsIDEwLCAxMCwgMC4xKSwgMCAwIDAgMXB4ICMzMjczZGM7IH1cblxuYS5ib3g6YWN0aXZlIHtcbiAgYm94LXNoYWRvdzogaW5zZXQgMCAxcHggMnB4IHJnYmEoMTAsIDEwLCAxMCwgMC4yKSwgMCAwIDAgMXB4ICMzMjczZGM7IH1cblxuLmJ1dHRvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICBib3JkZXItY29sb3I6ICNkYmRiZGI7XG4gIGJvcmRlci13aWR0aDogMXB4O1xuICBjb2xvcjogIzM2MzYzNjtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgcGFkZGluZy1ib3R0b206IGNhbGMoMC4zNzVlbSAtIDFweCk7XG4gIHBhZGRpbmctbGVmdDogMC43NWVtO1xuICBwYWRkaW5nLXJpZ2h0OiAwLjc1ZW07XG4gIHBhZGRpbmctdG9wOiBjYWxjKDAuMzc1ZW0gLSAxcHgpO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7IH1cbiAgLmJ1dHRvbiBzdHJvbmcge1xuICAgIGNvbG9yOiBpbmhlcml0OyB9XG4gIC5idXR0b24gLmljb24sIC5idXR0b24gLmljb24uaXMtc21hbGwsIC5idXR0b24gLmljb24uaXMtbWVkaXVtLCAuYnV0dG9uIC5pY29uLmlzLWxhcmdlIHtcbiAgICBoZWlnaHQ6IDEuNWVtO1xuICAgIHdpZHRoOiAxLjVlbTsgfVxuICAuYnV0dG9uIC5pY29uOmZpcnN0LWNoaWxkOm5vdCg6bGFzdC1jaGlsZCkge1xuICAgIG1hcmdpbi1sZWZ0OiBjYWxjKC0wLjM3NWVtIC0gMXB4KTtcbiAgICBtYXJnaW4tcmlnaHQ6IDAuMTg3NWVtOyB9XG4gIC5idXR0b24gLmljb246bGFzdC1jaGlsZDpub3QoOmZpcnN0LWNoaWxkKSB7XG4gICAgbWFyZ2luLWxlZnQ6IDAuMTg3NWVtO1xuICAgIG1hcmdpbi1yaWdodDogY2FsYygtMC4zNzVlbSAtIDFweCk7IH1cbiAgLmJ1dHRvbiAuaWNvbjpmaXJzdC1jaGlsZDpsYXN0LWNoaWxkIHtcbiAgICBtYXJnaW4tbGVmdDogY2FsYygtMC4zNzVlbSAtIDFweCk7XG4gICAgbWFyZ2luLXJpZ2h0OiBjYWxjKC0wLjM3NWVtIC0gMXB4KTsgfVxuICAuYnV0dG9uOmhvdmVyLCAuYnV0dG9uLmlzLWhvdmVyZWQge1xuICAgIGJvcmRlci1jb2xvcjogI2I1YjViNTtcbiAgICBjb2xvcjogIzM2MzYzNjsgfVxuICAuYnV0dG9uOmZvY3VzLCAuYnV0dG9uLmlzLWZvY3VzZWQge1xuICAgIGJvcmRlci1jb2xvcjogIzMyNzNkYztcbiAgICBjb2xvcjogIzM2MzYzNjsgfVxuICAgIC5idXR0b246Zm9jdXM6bm90KDphY3RpdmUpLCAuYnV0dG9uLmlzLWZvY3VzZWQ6bm90KDphY3RpdmUpIHtcbiAgICAgIGJveC1zaGFkb3c6IDAgMCAwIDAuMTI1ZW0gcmdiYSg1MCwgMTE1LCAyMjAsIDAuMjUpOyB9XG4gIC5idXR0b246YWN0aXZlLCAuYnV0dG9uLmlzLWFjdGl2ZSB7XG4gICAgYm9yZGVyLWNvbG9yOiAjNGE0YTRhO1xuICAgIGNvbG9yOiAjMzYzNjM2OyB9XG4gIC5idXR0b24uaXMtdGV4dCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBjb2xvcjogIzRhNGE0YTtcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgfVxuICAgIC5idXR0b24uaXMtdGV4dDpob3ZlciwgLmJ1dHRvbi5pcy10ZXh0LmlzLWhvdmVyZWQsIC5idXR0b24uaXMtdGV4dDpmb2N1cywgLmJ1dHRvbi5pcy10ZXh0LmlzLWZvY3VzZWQge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGVzbW9rZTtcbiAgICAgIGNvbG9yOiAjMzYzNjM2OyB9XG4gICAgLmJ1dHRvbi5pcy10ZXh0OmFjdGl2ZSwgLmJ1dHRvbi5pcy10ZXh0LmlzLWFjdGl2ZSB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZThlOGU4O1xuICAgICAgY29sb3I6ICMzNjM2MzY7IH1cbiAgICAuYnV0dG9uLmlzLXRleHRbZGlzYWJsZWRdLFxuICAgIGZpZWxkc2V0W2Rpc2FibGVkXSAuYnV0dG9uLmlzLXRleHQge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgYm94LXNoYWRvdzogbm9uZTsgfVxuICAuYnV0dG9uLmlzLXdoaXRlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIGNvbG9yOiAjMGEwYTBhOyB9XG4gICAgLmJ1dHRvbi5pcy13aGl0ZTpob3ZlciwgLmJ1dHRvbi5pcy13aGl0ZS5pcy1ob3ZlcmVkIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmOWY5Zjk7XG4gICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgY29sb3I6ICMwYTBhMGE7IH1cbiAgICAuYnV0dG9uLmlzLXdoaXRlOmZvY3VzLCAuYnV0dG9uLmlzLXdoaXRlLmlzLWZvY3VzZWQge1xuICAgICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgIGNvbG9yOiAjMGEwYTBhOyB9XG4gICAgICAuYnV0dG9uLmlzLXdoaXRlOmZvY3VzOm5vdCg6YWN0aXZlKSwgLmJ1dHRvbi5pcy13aGl0ZS5pcy1mb2N1c2VkOm5vdCg6YWN0aXZlKSB7XG4gICAgICAgIGJveC1zaGFkb3c6IDAgMCAwIDAuMTI1ZW0gcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjI1KTsgfVxuICAgIC5idXR0b24uaXMtd2hpdGU6YWN0aXZlLCAuYnV0dG9uLmlzLXdoaXRlLmlzLWFjdGl2ZSB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjJmMmYyO1xuICAgICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgIGNvbG9yOiAjMGEwYTBhOyB9XG4gICAgLmJ1dHRvbi5pcy13aGl0ZVtkaXNhYmxlZF0sXG4gICAgZmllbGRzZXRbZGlzYWJsZWRdIC5idXR0b24uaXMtd2hpdGUge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgYm94LXNoYWRvdzogbm9uZTsgfVxuICAgIC5idXR0b24uaXMtd2hpdGUuaXMtaW52ZXJ0ZWQge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzBhMGEwYTtcbiAgICAgIGNvbG9yOiB3aGl0ZTsgfVxuICAgICAgLmJ1dHRvbi5pcy13aGl0ZS5pcy1pbnZlcnRlZDpob3ZlciwgLmJ1dHRvbi5pcy13aGl0ZS5pcy1pbnZlcnRlZC5pcy1ob3ZlcmVkIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7IH1cbiAgICAgIC5idXR0b24uaXMtd2hpdGUuaXMtaW52ZXJ0ZWRbZGlzYWJsZWRdLFxuICAgICAgZmllbGRzZXRbZGlzYWJsZWRdIC5idXR0b24uaXMtd2hpdGUuaXMtaW52ZXJ0ZWQge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMGEwYTBhO1xuICAgICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgICBib3gtc2hhZG93OiBub25lO1xuICAgICAgICBjb2xvcjogd2hpdGU7IH1cbiAgICAuYnV0dG9uLmlzLXdoaXRlLmlzLWxvYWRpbmc6OmFmdGVyIHtcbiAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgIzBhMGEwYSAjMGEwYTBhICFpbXBvcnRhbnQ7IH1cbiAgICAuYnV0dG9uLmlzLXdoaXRlLmlzLW91dGxpbmVkIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgYm9yZGVyLWNvbG9yOiB3aGl0ZTtcbiAgICAgIGNvbG9yOiB3aGl0ZTsgfVxuICAgICAgLmJ1dHRvbi5pcy13aGl0ZS5pcy1vdXRsaW5lZDpob3ZlciwgLmJ1dHRvbi5pcy13aGl0ZS5pcy1vdXRsaW5lZC5pcy1ob3ZlcmVkLCAuYnV0dG9uLmlzLXdoaXRlLmlzLW91dGxpbmVkOmZvY3VzLCAuYnV0dG9uLmlzLXdoaXRlLmlzLW91dGxpbmVkLmlzLWZvY3VzZWQge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICAgICAgYm9yZGVyLWNvbG9yOiB3aGl0ZTtcbiAgICAgICAgY29sb3I6ICMwYTBhMGE7IH1cbiAgICAgIC5idXR0b24uaXMtd2hpdGUuaXMtb3V0bGluZWQuaXMtbG9hZGluZzo6YWZ0ZXIge1xuICAgICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50IHdoaXRlIHdoaXRlICFpbXBvcnRhbnQ7IH1cbiAgICAgIC5idXR0b24uaXMtd2hpdGUuaXMtb3V0bGluZWQuaXMtbG9hZGluZzpob3Zlcjo6YWZ0ZXIsIC5idXR0b24uaXMtd2hpdGUuaXMtb3V0bGluZWQuaXMtbG9hZGluZy5pcy1ob3ZlcmVkOjphZnRlciwgLmJ1dHRvbi5pcy13aGl0ZS5pcy1vdXRsaW5lZC5pcy1sb2FkaW5nOmZvY3VzOjphZnRlciwgLmJ1dHRvbi5pcy13aGl0ZS5pcy1vdXRsaW5lZC5pcy1sb2FkaW5nLmlzLWZvY3VzZWQ6OmFmdGVyIHtcbiAgICAgICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCAjMGEwYTBhICMwYTBhMGEgIWltcG9ydGFudDsgfVxuICAgICAgLmJ1dHRvbi5pcy13aGl0ZS5pcy1vdXRsaW5lZFtkaXNhYmxlZF0sXG4gICAgICBmaWVsZHNldFtkaXNhYmxlZF0gLmJ1dHRvbi5pcy13aGl0ZS5pcy1vdXRsaW5lZCB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgICBib3JkZXItY29sb3I6IHdoaXRlO1xuICAgICAgICBib3gtc2hhZG93OiBub25lO1xuICAgICAgICBjb2xvcjogd2hpdGU7IH1cbiAgICAuYnV0dG9uLmlzLXdoaXRlLmlzLWludmVydGVkLmlzLW91dGxpbmVkIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgYm9yZGVyLWNvbG9yOiAjMGEwYTBhO1xuICAgICAgY29sb3I6ICMwYTBhMGE7IH1cbiAgICAgIC5idXR0b24uaXMtd2hpdGUuaXMtaW52ZXJ0ZWQuaXMtb3V0bGluZWQ6aG92ZXIsIC5idXR0b24uaXMtd2hpdGUuaXMtaW52ZXJ0ZWQuaXMtb3V0bGluZWQuaXMtaG92ZXJlZCwgLmJ1dHRvbi5pcy13aGl0ZS5pcy1pbnZlcnRlZC5pcy1vdXRsaW5lZDpmb2N1cywgLmJ1dHRvbi5pcy13aGl0ZS5pcy1pbnZlcnRlZC5pcy1vdXRsaW5lZC5pcy1mb2N1c2VkIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzBhMGEwYTtcbiAgICAgICAgY29sb3I6IHdoaXRlOyB9XG4gICAgICAuYnV0dG9uLmlzLXdoaXRlLmlzLWludmVydGVkLmlzLW91dGxpbmVkLmlzLWxvYWRpbmc6aG92ZXI6OmFmdGVyLCAuYnV0dG9uLmlzLXdoaXRlLmlzLWludmVydGVkLmlzLW91dGxpbmVkLmlzLWxvYWRpbmcuaXMtaG92ZXJlZDo6YWZ0ZXIsIC5idXR0b24uaXMtd2hpdGUuaXMtaW52ZXJ0ZWQuaXMtb3V0bGluZWQuaXMtbG9hZGluZzpmb2N1czo6YWZ0ZXIsIC5idXR0b24uaXMtd2hpdGUuaXMtaW52ZXJ0ZWQuaXMtb3V0bGluZWQuaXMtbG9hZGluZy5pcy1mb2N1c2VkOjphZnRlciB7XG4gICAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgd2hpdGUgd2hpdGUgIWltcG9ydGFudDsgfVxuICAgICAgLmJ1dHRvbi5pcy13aGl0ZS5pcy1pbnZlcnRlZC5pcy1vdXRsaW5lZFtkaXNhYmxlZF0sXG4gICAgICBmaWVsZHNldFtkaXNhYmxlZF0gLmJ1dHRvbi5pcy13aGl0ZS5pcy1pbnZlcnRlZC5pcy1vdXRsaW5lZCB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgICBib3JkZXItY29sb3I6ICMwYTBhMGE7XG4gICAgICAgIGJveC1zaGFkb3c6IG5vbmU7XG4gICAgICAgIGNvbG9yOiAjMGEwYTBhOyB9XG4gIC5idXR0b24uaXMtYmxhY2sge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMwYTBhMGE7XG4gICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBjb2xvcjogd2hpdGU7IH1cbiAgICAuYnV0dG9uLmlzLWJsYWNrOmhvdmVyLCAuYnV0dG9uLmlzLWJsYWNrLmlzLWhvdmVyZWQge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzA0MDQwNDtcbiAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICBjb2xvcjogd2hpdGU7IH1cbiAgICAuYnV0dG9uLmlzLWJsYWNrOmZvY3VzLCAuYnV0dG9uLmlzLWJsYWNrLmlzLWZvY3VzZWQge1xuICAgICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgIGNvbG9yOiB3aGl0ZTsgfVxuICAgICAgLmJ1dHRvbi5pcy1ibGFjazpmb2N1czpub3QoOmFjdGl2ZSksIC5idXR0b24uaXMtYmxhY2suaXMtZm9jdXNlZDpub3QoOmFjdGl2ZSkge1xuICAgICAgICBib3gtc2hhZG93OiAwIDAgMCAwLjEyNWVtIHJnYmEoMTAsIDEwLCAxMCwgMC4yNSk7IH1cbiAgICAuYnV0dG9uLmlzLWJsYWNrOmFjdGl2ZSwgLmJ1dHRvbi5pcy1ibGFjay5pcy1hY3RpdmUge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XG4gICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgY29sb3I6IHdoaXRlOyB9XG4gICAgLmJ1dHRvbi5pcy1ibGFja1tkaXNhYmxlZF0sXG4gICAgZmllbGRzZXRbZGlzYWJsZWRdIC5idXR0b24uaXMtYmxhY2sge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzBhMGEwYTtcbiAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICBib3gtc2hhZG93OiBub25lOyB9XG4gICAgLmJ1dHRvbi5pcy1ibGFjay5pcy1pbnZlcnRlZCB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICAgIGNvbG9yOiAjMGEwYTBhOyB9XG4gICAgICAuYnV0dG9uLmlzLWJsYWNrLmlzLWludmVydGVkOmhvdmVyLCAuYnV0dG9uLmlzLWJsYWNrLmlzLWludmVydGVkLmlzLWhvdmVyZWQge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjJmMmYyOyB9XG4gICAgICAuYnV0dG9uLmlzLWJsYWNrLmlzLWludmVydGVkW2Rpc2FibGVkXSxcbiAgICAgIGZpZWxkc2V0W2Rpc2FibGVkXSAuYnV0dG9uLmlzLWJsYWNrLmlzLWludmVydGVkIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICAgIGJveC1zaGFkb3c6IG5vbmU7XG4gICAgICAgIGNvbG9yOiAjMGEwYTBhOyB9XG4gICAgLmJ1dHRvbi5pcy1ibGFjay5pcy1sb2FkaW5nOjphZnRlciB7XG4gICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50IHdoaXRlIHdoaXRlICFpbXBvcnRhbnQ7IH1cbiAgICAuYnV0dG9uLmlzLWJsYWNrLmlzLW91dGxpbmVkIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgYm9yZGVyLWNvbG9yOiAjMGEwYTBhO1xuICAgICAgY29sb3I6ICMwYTBhMGE7IH1cbiAgICAgIC5idXR0b24uaXMtYmxhY2suaXMtb3V0bGluZWQ6aG92ZXIsIC5idXR0b24uaXMtYmxhY2suaXMtb3V0bGluZWQuaXMtaG92ZXJlZCwgLmJ1dHRvbi5pcy1ibGFjay5pcy1vdXRsaW5lZDpmb2N1cywgLmJ1dHRvbi5pcy1ibGFjay5pcy1vdXRsaW5lZC5pcy1mb2N1c2VkIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzBhMGEwYTtcbiAgICAgICAgYm9yZGVyLWNvbG9yOiAjMGEwYTBhO1xuICAgICAgICBjb2xvcjogd2hpdGU7IH1cbiAgICAgIC5idXR0b24uaXMtYmxhY2suaXMtb3V0bGluZWQuaXMtbG9hZGluZzo6YWZ0ZXIge1xuICAgICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50ICMwYTBhMGEgIzBhMGEwYSAhaW1wb3J0YW50OyB9XG4gICAgICAuYnV0dG9uLmlzLWJsYWNrLmlzLW91dGxpbmVkLmlzLWxvYWRpbmc6aG92ZXI6OmFmdGVyLCAuYnV0dG9uLmlzLWJsYWNrLmlzLW91dGxpbmVkLmlzLWxvYWRpbmcuaXMtaG92ZXJlZDo6YWZ0ZXIsIC5idXR0b24uaXMtYmxhY2suaXMtb3V0bGluZWQuaXMtbG9hZGluZzpmb2N1czo6YWZ0ZXIsIC5idXR0b24uaXMtYmxhY2suaXMtb3V0bGluZWQuaXMtbG9hZGluZy5pcy1mb2N1c2VkOjphZnRlciB7XG4gICAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgd2hpdGUgd2hpdGUgIWltcG9ydGFudDsgfVxuICAgICAgLmJ1dHRvbi5pcy1ibGFjay5pcy1vdXRsaW5lZFtkaXNhYmxlZF0sXG4gICAgICBmaWVsZHNldFtkaXNhYmxlZF0gLmJ1dHRvbi5pcy1ibGFjay5pcy1vdXRsaW5lZCB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgICBib3JkZXItY29sb3I6ICMwYTBhMGE7XG4gICAgICAgIGJveC1zaGFkb3c6IG5vbmU7XG4gICAgICAgIGNvbG9yOiAjMGEwYTBhOyB9XG4gICAgLmJ1dHRvbi5pcy1ibGFjay5pcy1pbnZlcnRlZC5pcy1vdXRsaW5lZCB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgIGJvcmRlci1jb2xvcjogd2hpdGU7XG4gICAgICBjb2xvcjogd2hpdGU7IH1cbiAgICAgIC5idXR0b24uaXMtYmxhY2suaXMtaW52ZXJ0ZWQuaXMtb3V0bGluZWQ6aG92ZXIsIC5idXR0b24uaXMtYmxhY2suaXMtaW52ZXJ0ZWQuaXMtb3V0bGluZWQuaXMtaG92ZXJlZCwgLmJ1dHRvbi5pcy1ibGFjay5pcy1pbnZlcnRlZC5pcy1vdXRsaW5lZDpmb2N1cywgLmJ1dHRvbi5pcy1ibGFjay5pcy1pbnZlcnRlZC5pcy1vdXRsaW5lZC5pcy1mb2N1c2VkIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgICAgIGNvbG9yOiAjMGEwYTBhOyB9XG4gICAgICAuYnV0dG9uLmlzLWJsYWNrLmlzLWludmVydGVkLmlzLW91dGxpbmVkLmlzLWxvYWRpbmc6aG92ZXI6OmFmdGVyLCAuYnV0dG9uLmlzLWJsYWNrLmlzLWludmVydGVkLmlzLW91dGxpbmVkLmlzLWxvYWRpbmcuaXMtaG92ZXJlZDo6YWZ0ZXIsIC5idXR0b24uaXMtYmxhY2suaXMtaW52ZXJ0ZWQuaXMtb3V0bGluZWQuaXMtbG9hZGluZzpmb2N1czo6YWZ0ZXIsIC5idXR0b24uaXMtYmxhY2suaXMtaW52ZXJ0ZWQuaXMtb3V0bGluZWQuaXMtbG9hZGluZy5pcy1mb2N1c2VkOjphZnRlciB7XG4gICAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgIzBhMGEwYSAjMGEwYTBhICFpbXBvcnRhbnQ7IH1cbiAgICAgIC5idXR0b24uaXMtYmxhY2suaXMtaW52ZXJ0ZWQuaXMtb3V0bGluZWRbZGlzYWJsZWRdLFxuICAgICAgZmllbGRzZXRbZGlzYWJsZWRdIC5idXR0b24uaXMtYmxhY2suaXMtaW52ZXJ0ZWQuaXMtb3V0bGluZWQge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgICAgYm9yZGVyLWNvbG9yOiB3aGl0ZTtcbiAgICAgICAgYm94LXNoYWRvdzogbm9uZTtcbiAgICAgICAgY29sb3I6IHdoaXRlOyB9XG4gIC5idXR0b24uaXMtbGlnaHQge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlc21va2U7XG4gICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBjb2xvcjogIzM2MzYzNjsgfVxuICAgIC5idXR0b24uaXMtbGlnaHQ6aG92ZXIsIC5idXR0b24uaXMtbGlnaHQuaXMtaG92ZXJlZCB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWVlZWVlO1xuICAgICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgIGNvbG9yOiAjMzYzNjM2OyB9XG4gICAgLmJ1dHRvbi5pcy1saWdodDpmb2N1cywgLmJ1dHRvbi5pcy1saWdodC5pcy1mb2N1c2VkIHtcbiAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICBjb2xvcjogIzM2MzYzNjsgfVxuICAgICAgLmJ1dHRvbi5pcy1saWdodDpmb2N1czpub3QoOmFjdGl2ZSksIC5idXR0b24uaXMtbGlnaHQuaXMtZm9jdXNlZDpub3QoOmFjdGl2ZSkge1xuICAgICAgICBib3gtc2hhZG93OiAwIDAgMCAwLjEyNWVtIHJnYmEoMjQ1LCAyNDUsIDI0NSwgMC4yNSk7IH1cbiAgICAuYnV0dG9uLmlzLWxpZ2h0OmFjdGl2ZSwgLmJ1dHRvbi5pcy1saWdodC5pcy1hY3RpdmUge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2U4ZThlODtcbiAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICBjb2xvcjogIzM2MzYzNjsgfVxuICAgIC5idXR0b24uaXMtbGlnaHRbZGlzYWJsZWRdLFxuICAgIGZpZWxkc2V0W2Rpc2FibGVkXSAuYnV0dG9uLmlzLWxpZ2h0IHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlc21va2U7XG4gICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgYm94LXNoYWRvdzogbm9uZTsgfVxuICAgIC5idXR0b24uaXMtbGlnaHQuaXMtaW52ZXJ0ZWQge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzM2MzYzNjtcbiAgICAgIGNvbG9yOiB3aGl0ZXNtb2tlOyB9XG4gICAgICAuYnV0dG9uLmlzLWxpZ2h0LmlzLWludmVydGVkOmhvdmVyLCAuYnV0dG9uLmlzLWxpZ2h0LmlzLWludmVydGVkLmlzLWhvdmVyZWQge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjkyOTI5OyB9XG4gICAgICAuYnV0dG9uLmlzLWxpZ2h0LmlzLWludmVydGVkW2Rpc2FibGVkXSxcbiAgICAgIGZpZWxkc2V0W2Rpc2FibGVkXSAuYnV0dG9uLmlzLWxpZ2h0LmlzLWludmVydGVkIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzM2MzYzNjtcbiAgICAgICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgICAgYm94LXNoYWRvdzogbm9uZTtcbiAgICAgICAgY29sb3I6IHdoaXRlc21va2U7IH1cbiAgICAuYnV0dG9uLmlzLWxpZ2h0LmlzLWxvYWRpbmc6OmFmdGVyIHtcbiAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgIzM2MzYzNiAjMzYzNjM2ICFpbXBvcnRhbnQ7IH1cbiAgICAuYnV0dG9uLmlzLWxpZ2h0LmlzLW91dGxpbmVkIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgYm9yZGVyLWNvbG9yOiB3aGl0ZXNtb2tlO1xuICAgICAgY29sb3I6IHdoaXRlc21va2U7IH1cbiAgICAgIC5idXR0b24uaXMtbGlnaHQuaXMtb3V0bGluZWQ6aG92ZXIsIC5idXR0b24uaXMtbGlnaHQuaXMtb3V0bGluZWQuaXMtaG92ZXJlZCwgLmJ1dHRvbi5pcy1saWdodC5pcy1vdXRsaW5lZDpmb2N1cywgLmJ1dHRvbi5pcy1saWdodC5pcy1vdXRsaW5lZC5pcy1mb2N1c2VkIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGVzbW9rZTtcbiAgICAgICAgYm9yZGVyLWNvbG9yOiB3aGl0ZXNtb2tlO1xuICAgICAgICBjb2xvcjogIzM2MzYzNjsgfVxuICAgICAgLmJ1dHRvbi5pcy1saWdodC5pcy1vdXRsaW5lZC5pcy1sb2FkaW5nOjphZnRlciB7XG4gICAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgd2hpdGVzbW9rZSB3aGl0ZXNtb2tlICFpbXBvcnRhbnQ7IH1cbiAgICAgIC5idXR0b24uaXMtbGlnaHQuaXMtb3V0bGluZWQuaXMtbG9hZGluZzpob3Zlcjo6YWZ0ZXIsIC5idXR0b24uaXMtbGlnaHQuaXMtb3V0bGluZWQuaXMtbG9hZGluZy5pcy1ob3ZlcmVkOjphZnRlciwgLmJ1dHRvbi5pcy1saWdodC5pcy1vdXRsaW5lZC5pcy1sb2FkaW5nOmZvY3VzOjphZnRlciwgLmJ1dHRvbi5pcy1saWdodC5pcy1vdXRsaW5lZC5pcy1sb2FkaW5nLmlzLWZvY3VzZWQ6OmFmdGVyIHtcbiAgICAgICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCAjMzYzNjM2ICMzNjM2MzYgIWltcG9ydGFudDsgfVxuICAgICAgLmJ1dHRvbi5pcy1saWdodC5pcy1vdXRsaW5lZFtkaXNhYmxlZF0sXG4gICAgICBmaWVsZHNldFtkaXNhYmxlZF0gLmJ1dHRvbi5pcy1saWdodC5pcy1vdXRsaW5lZCB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgICBib3JkZXItY29sb3I6IHdoaXRlc21va2U7XG4gICAgICAgIGJveC1zaGFkb3c6IG5vbmU7XG4gICAgICAgIGNvbG9yOiB3aGl0ZXNtb2tlOyB9XG4gICAgLmJ1dHRvbi5pcy1saWdodC5pcy1pbnZlcnRlZC5pcy1vdXRsaW5lZCB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgIGJvcmRlci1jb2xvcjogIzM2MzYzNjtcbiAgICAgIGNvbG9yOiAjMzYzNjM2OyB9XG4gICAgICAuYnV0dG9uLmlzLWxpZ2h0LmlzLWludmVydGVkLmlzLW91dGxpbmVkOmhvdmVyLCAuYnV0dG9uLmlzLWxpZ2h0LmlzLWludmVydGVkLmlzLW91dGxpbmVkLmlzLWhvdmVyZWQsIC5idXR0b24uaXMtbGlnaHQuaXMtaW52ZXJ0ZWQuaXMtb3V0bGluZWQ6Zm9jdXMsIC5idXR0b24uaXMtbGlnaHQuaXMtaW52ZXJ0ZWQuaXMtb3V0bGluZWQuaXMtZm9jdXNlZCB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMzNjM2MzY7XG4gICAgICAgIGNvbG9yOiB3aGl0ZXNtb2tlOyB9XG4gICAgICAuYnV0dG9uLmlzLWxpZ2h0LmlzLWludmVydGVkLmlzLW91dGxpbmVkLmlzLWxvYWRpbmc6aG92ZXI6OmFmdGVyLCAuYnV0dG9uLmlzLWxpZ2h0LmlzLWludmVydGVkLmlzLW91dGxpbmVkLmlzLWxvYWRpbmcuaXMtaG92ZXJlZDo6YWZ0ZXIsIC5idXR0b24uaXMtbGlnaHQuaXMtaW52ZXJ0ZWQuaXMtb3V0bGluZWQuaXMtbG9hZGluZzpmb2N1czo6YWZ0ZXIsIC5idXR0b24uaXMtbGlnaHQuaXMtaW52ZXJ0ZWQuaXMtb3V0bGluZWQuaXMtbG9hZGluZy5pcy1mb2N1c2VkOjphZnRlciB7XG4gICAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgd2hpdGVzbW9rZSB3aGl0ZXNtb2tlICFpbXBvcnRhbnQ7IH1cbiAgICAgIC5idXR0b24uaXMtbGlnaHQuaXMtaW52ZXJ0ZWQuaXMtb3V0bGluZWRbZGlzYWJsZWRdLFxuICAgICAgZmllbGRzZXRbZGlzYWJsZWRdIC5idXR0b24uaXMtbGlnaHQuaXMtaW52ZXJ0ZWQuaXMtb3V0bGluZWQge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgICAgYm9yZGVyLWNvbG9yOiAjMzYzNjM2O1xuICAgICAgICBib3gtc2hhZG93OiBub25lO1xuICAgICAgICBjb2xvcjogIzM2MzYzNjsgfVxuICAuYnV0dG9uLmlzLWRhcmsge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMzNjM2MzY7XG4gICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBjb2xvcjogd2hpdGVzbW9rZTsgfVxuICAgIC5idXR0b24uaXMtZGFyazpob3ZlciwgLmJ1dHRvbi5pcy1kYXJrLmlzLWhvdmVyZWQge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzJmMmYyZjtcbiAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICBjb2xvcjogd2hpdGVzbW9rZTsgfVxuICAgIC5idXR0b24uaXMtZGFyazpmb2N1cywgLmJ1dHRvbi5pcy1kYXJrLmlzLWZvY3VzZWQge1xuICAgICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgIGNvbG9yOiB3aGl0ZXNtb2tlOyB9XG4gICAgICAuYnV0dG9uLmlzLWRhcms6Zm9jdXM6bm90KDphY3RpdmUpLCAuYnV0dG9uLmlzLWRhcmsuaXMtZm9jdXNlZDpub3QoOmFjdGl2ZSkge1xuICAgICAgICBib3gtc2hhZG93OiAwIDAgMCAwLjEyNWVtIHJnYmEoNTQsIDU0LCA1NCwgMC4yNSk7IH1cbiAgICAuYnV0dG9uLmlzLWRhcms6YWN0aXZlLCAuYnV0dG9uLmlzLWRhcmsuaXMtYWN0aXZlIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICMyOTI5Mjk7XG4gICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgY29sb3I6IHdoaXRlc21va2U7IH1cbiAgICAuYnV0dG9uLmlzLWRhcmtbZGlzYWJsZWRdLFxuICAgIGZpZWxkc2V0W2Rpc2FibGVkXSAuYnV0dG9uLmlzLWRhcmsge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzM2MzYzNjtcbiAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICBib3gtc2hhZG93OiBub25lOyB9XG4gICAgLmJ1dHRvbi5pcy1kYXJrLmlzLWludmVydGVkIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlc21va2U7XG4gICAgICBjb2xvcjogIzM2MzYzNjsgfVxuICAgICAgLmJ1dHRvbi5pcy1kYXJrLmlzLWludmVydGVkOmhvdmVyLCAuYnV0dG9uLmlzLWRhcmsuaXMtaW52ZXJ0ZWQuaXMtaG92ZXJlZCB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNlOGU4ZTg7IH1cbiAgICAgIC5idXR0b24uaXMtZGFyay5pcy1pbnZlcnRlZFtkaXNhYmxlZF0sXG4gICAgICBmaWVsZHNldFtkaXNhYmxlZF0gLmJ1dHRvbi5pcy1kYXJrLmlzLWludmVydGVkIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGVzbW9rZTtcbiAgICAgICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgICAgYm94LXNoYWRvdzogbm9uZTtcbiAgICAgICAgY29sb3I6ICMzNjM2MzY7IH1cbiAgICAuYnV0dG9uLmlzLWRhcmsuaXMtbG9hZGluZzo6YWZ0ZXIge1xuICAgICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCB3aGl0ZXNtb2tlIHdoaXRlc21va2UgIWltcG9ydGFudDsgfVxuICAgIC5idXR0b24uaXMtZGFyay5pcy1vdXRsaW5lZCB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgIGJvcmRlci1jb2xvcjogIzM2MzYzNjtcbiAgICAgIGNvbG9yOiAjMzYzNjM2OyB9XG4gICAgICAuYnV0dG9uLmlzLWRhcmsuaXMtb3V0bGluZWQ6aG92ZXIsIC5idXR0b24uaXMtZGFyay5pcy1vdXRsaW5lZC5pcy1ob3ZlcmVkLCAuYnV0dG9uLmlzLWRhcmsuaXMtb3V0bGluZWQ6Zm9jdXMsIC5idXR0b24uaXMtZGFyay5pcy1vdXRsaW5lZC5pcy1mb2N1c2VkIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzM2MzYzNjtcbiAgICAgICAgYm9yZGVyLWNvbG9yOiAjMzYzNjM2O1xuICAgICAgICBjb2xvcjogd2hpdGVzbW9rZTsgfVxuICAgICAgLmJ1dHRvbi5pcy1kYXJrLmlzLW91dGxpbmVkLmlzLWxvYWRpbmc6OmFmdGVyIHtcbiAgICAgICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCAjMzYzNjM2ICMzNjM2MzYgIWltcG9ydGFudDsgfVxuICAgICAgLmJ1dHRvbi5pcy1kYXJrLmlzLW91dGxpbmVkLmlzLWxvYWRpbmc6aG92ZXI6OmFmdGVyLCAuYnV0dG9uLmlzLWRhcmsuaXMtb3V0bGluZWQuaXMtbG9hZGluZy5pcy1ob3ZlcmVkOjphZnRlciwgLmJ1dHRvbi5pcy1kYXJrLmlzLW91dGxpbmVkLmlzLWxvYWRpbmc6Zm9jdXM6OmFmdGVyLCAuYnV0dG9uLmlzLWRhcmsuaXMtb3V0bGluZWQuaXMtbG9hZGluZy5pcy1mb2N1c2VkOjphZnRlciB7XG4gICAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgd2hpdGVzbW9rZSB3aGl0ZXNtb2tlICFpbXBvcnRhbnQ7IH1cbiAgICAgIC5idXR0b24uaXMtZGFyay5pcy1vdXRsaW5lZFtkaXNhYmxlZF0sXG4gICAgICBmaWVsZHNldFtkaXNhYmxlZF0gLmJ1dHRvbi5pcy1kYXJrLmlzLW91dGxpbmVkIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICAgIGJvcmRlci1jb2xvcjogIzM2MzYzNjtcbiAgICAgICAgYm94LXNoYWRvdzogbm9uZTtcbiAgICAgICAgY29sb3I6ICMzNjM2MzY7IH1cbiAgICAuYnV0dG9uLmlzLWRhcmsuaXMtaW52ZXJ0ZWQuaXMtb3V0bGluZWQge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICBib3JkZXItY29sb3I6IHdoaXRlc21va2U7XG4gICAgICBjb2xvcjogd2hpdGVzbW9rZTsgfVxuICAgICAgLmJ1dHRvbi5pcy1kYXJrLmlzLWludmVydGVkLmlzLW91dGxpbmVkOmhvdmVyLCAuYnV0dG9uLmlzLWRhcmsuaXMtaW52ZXJ0ZWQuaXMtb3V0bGluZWQuaXMtaG92ZXJlZCwgLmJ1dHRvbi5pcy1kYXJrLmlzLWludmVydGVkLmlzLW91dGxpbmVkOmZvY3VzLCAuYnV0dG9uLmlzLWRhcmsuaXMtaW52ZXJ0ZWQuaXMtb3V0bGluZWQuaXMtZm9jdXNlZCB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlc21va2U7XG4gICAgICAgIGNvbG9yOiAjMzYzNjM2OyB9XG4gICAgICAuYnV0dG9uLmlzLWRhcmsuaXMtaW52ZXJ0ZWQuaXMtb3V0bGluZWQuaXMtbG9hZGluZzpob3Zlcjo6YWZ0ZXIsIC5idXR0b24uaXMtZGFyay5pcy1pbnZlcnRlZC5pcy1vdXRsaW5lZC5pcy1sb2FkaW5nLmlzLWhvdmVyZWQ6OmFmdGVyLCAuYnV0dG9uLmlzLWRhcmsuaXMtaW52ZXJ0ZWQuaXMtb3V0bGluZWQuaXMtbG9hZGluZzpmb2N1czo6YWZ0ZXIsIC5idXR0b24uaXMtZGFyay5pcy1pbnZlcnRlZC5pcy1vdXRsaW5lZC5pcy1sb2FkaW5nLmlzLWZvY3VzZWQ6OmFmdGVyIHtcbiAgICAgICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCAjMzYzNjM2ICMzNjM2MzYgIWltcG9ydGFudDsgfVxuICAgICAgLmJ1dHRvbi5pcy1kYXJrLmlzLWludmVydGVkLmlzLW91dGxpbmVkW2Rpc2FibGVkXSxcbiAgICAgIGZpZWxkc2V0W2Rpc2FibGVkXSAuYnV0dG9uLmlzLWRhcmsuaXMtaW52ZXJ0ZWQuaXMtb3V0bGluZWQge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgICAgYm9yZGVyLWNvbG9yOiB3aGl0ZXNtb2tlO1xuICAgICAgICBib3gtc2hhZG93OiBub25lO1xuICAgICAgICBjb2xvcjogd2hpdGVzbW9rZTsgfVxuICAuYnV0dG9uLmlzLXByaW1hcnkge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMGQxYjI7XG4gICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBjb2xvcjogI2ZmZjsgfVxuICAgIC5idXR0b24uaXMtcHJpbWFyeTpob3ZlciwgLmJ1dHRvbi5pcy1wcmltYXJ5LmlzLWhvdmVyZWQge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzAwYzRhNztcbiAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICBjb2xvcjogI2ZmZjsgfVxuICAgIC5idXR0b24uaXMtcHJpbWFyeTpmb2N1cywgLmJ1dHRvbi5pcy1wcmltYXJ5LmlzLWZvY3VzZWQge1xuICAgICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgIGNvbG9yOiAjZmZmOyB9XG4gICAgICAuYnV0dG9uLmlzLXByaW1hcnk6Zm9jdXM6bm90KDphY3RpdmUpLCAuYnV0dG9uLmlzLXByaW1hcnkuaXMtZm9jdXNlZDpub3QoOmFjdGl2ZSkge1xuICAgICAgICBib3gtc2hhZG93OiAwIDAgMCAwLjEyNWVtIHJnYmEoMCwgMjA5LCAxNzgsIDAuMjUpOyB9XG4gICAgLmJ1dHRvbi5pcy1wcmltYXJ5OmFjdGl2ZSwgLmJ1dHRvbi5pcy1wcmltYXJ5LmlzLWFjdGl2ZSB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDBiODljO1xuICAgICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgIGNvbG9yOiAjZmZmOyB9XG4gICAgLmJ1dHRvbi5pcy1wcmltYXJ5W2Rpc2FibGVkXSxcbiAgICBmaWVsZHNldFtkaXNhYmxlZF0gLmJ1dHRvbi5pcy1wcmltYXJ5IHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICMwMGQxYjI7XG4gICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgYm94LXNoYWRvdzogbm9uZTsgfVxuICAgIC5idXR0b24uaXMtcHJpbWFyeS5pcy1pbnZlcnRlZCB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgICAgY29sb3I6ICMwMGQxYjI7IH1cbiAgICAgIC5idXR0b24uaXMtcHJpbWFyeS5pcy1pbnZlcnRlZDpob3ZlciwgLmJ1dHRvbi5pcy1wcmltYXJ5LmlzLWludmVydGVkLmlzLWhvdmVyZWQge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjJmMmYyOyB9XG4gICAgICAuYnV0dG9uLmlzLXByaW1hcnkuaXMtaW52ZXJ0ZWRbZGlzYWJsZWRdLFxuICAgICAgZmllbGRzZXRbZGlzYWJsZWRdIC5idXR0b24uaXMtcHJpbWFyeS5pcy1pbnZlcnRlZCB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICAgIGJveC1zaGFkb3c6IG5vbmU7XG4gICAgICAgIGNvbG9yOiAjMDBkMWIyOyB9XG4gICAgLmJ1dHRvbi5pcy1wcmltYXJ5LmlzLWxvYWRpbmc6OmFmdGVyIHtcbiAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgI2ZmZiAjZmZmICFpbXBvcnRhbnQ7IH1cbiAgICAuYnV0dG9uLmlzLXByaW1hcnkuaXMtb3V0bGluZWQge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICBib3JkZXItY29sb3I6ICMwMGQxYjI7XG4gICAgICBjb2xvcjogIzAwZDFiMjsgfVxuICAgICAgLmJ1dHRvbi5pcy1wcmltYXJ5LmlzLW91dGxpbmVkOmhvdmVyLCAuYnV0dG9uLmlzLXByaW1hcnkuaXMtb3V0bGluZWQuaXMtaG92ZXJlZCwgLmJ1dHRvbi5pcy1wcmltYXJ5LmlzLW91dGxpbmVkOmZvY3VzLCAuYnV0dG9uLmlzLXByaW1hcnkuaXMtb3V0bGluZWQuaXMtZm9jdXNlZCB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMwMGQxYjI7XG4gICAgICAgIGJvcmRlci1jb2xvcjogIzAwZDFiMjtcbiAgICAgICAgY29sb3I6ICNmZmY7IH1cbiAgICAgIC5idXR0b24uaXMtcHJpbWFyeS5pcy1vdXRsaW5lZC5pcy1sb2FkaW5nOjphZnRlciB7XG4gICAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgIzAwZDFiMiAjMDBkMWIyICFpbXBvcnRhbnQ7IH1cbiAgICAgIC5idXR0b24uaXMtcHJpbWFyeS5pcy1vdXRsaW5lZC5pcy1sb2FkaW5nOmhvdmVyOjphZnRlciwgLmJ1dHRvbi5pcy1wcmltYXJ5LmlzLW91dGxpbmVkLmlzLWxvYWRpbmcuaXMtaG92ZXJlZDo6YWZ0ZXIsIC5idXR0b24uaXMtcHJpbWFyeS5pcy1vdXRsaW5lZC5pcy1sb2FkaW5nOmZvY3VzOjphZnRlciwgLmJ1dHRvbi5pcy1wcmltYXJ5LmlzLW91dGxpbmVkLmlzLWxvYWRpbmcuaXMtZm9jdXNlZDo6YWZ0ZXIge1xuICAgICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50ICNmZmYgI2ZmZiAhaW1wb3J0YW50OyB9XG4gICAgICAuYnV0dG9uLmlzLXByaW1hcnkuaXMtb3V0bGluZWRbZGlzYWJsZWRdLFxuICAgICAgZmllbGRzZXRbZGlzYWJsZWRdIC5idXR0b24uaXMtcHJpbWFyeS5pcy1vdXRsaW5lZCB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgICBib3JkZXItY29sb3I6ICMwMGQxYjI7XG4gICAgICAgIGJveC1zaGFkb3c6IG5vbmU7XG4gICAgICAgIGNvbG9yOiAjMDBkMWIyOyB9XG4gICAgLmJ1dHRvbi5pcy1wcmltYXJ5LmlzLWludmVydGVkLmlzLW91dGxpbmVkIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgYm9yZGVyLWNvbG9yOiAjZmZmO1xuICAgICAgY29sb3I6ICNmZmY7IH1cbiAgICAgIC5idXR0b24uaXMtcHJpbWFyeS5pcy1pbnZlcnRlZC5pcy1vdXRsaW5lZDpob3ZlciwgLmJ1dHRvbi5pcy1wcmltYXJ5LmlzLWludmVydGVkLmlzLW91dGxpbmVkLmlzLWhvdmVyZWQsIC5idXR0b24uaXMtcHJpbWFyeS5pcy1pbnZlcnRlZC5pcy1vdXRsaW5lZDpmb2N1cywgLmJ1dHRvbi5pcy1wcmltYXJ5LmlzLWludmVydGVkLmlzLW91dGxpbmVkLmlzLWZvY3VzZWQge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgICAgICBjb2xvcjogIzAwZDFiMjsgfVxuICAgICAgLmJ1dHRvbi5pcy1wcmltYXJ5LmlzLWludmVydGVkLmlzLW91dGxpbmVkLmlzLWxvYWRpbmc6aG92ZXI6OmFmdGVyLCAuYnV0dG9uLmlzLXByaW1hcnkuaXMtaW52ZXJ0ZWQuaXMtb3V0bGluZWQuaXMtbG9hZGluZy5pcy1ob3ZlcmVkOjphZnRlciwgLmJ1dHRvbi5pcy1wcmltYXJ5LmlzLWludmVydGVkLmlzLW91dGxpbmVkLmlzLWxvYWRpbmc6Zm9jdXM6OmFmdGVyLCAuYnV0dG9uLmlzLXByaW1hcnkuaXMtaW52ZXJ0ZWQuaXMtb3V0bGluZWQuaXMtbG9hZGluZy5pcy1mb2N1c2VkOjphZnRlciB7XG4gICAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgIzAwZDFiMiAjMDBkMWIyICFpbXBvcnRhbnQ7IH1cbiAgICAgIC5idXR0b24uaXMtcHJpbWFyeS5pcy1pbnZlcnRlZC5pcy1vdXRsaW5lZFtkaXNhYmxlZF0sXG4gICAgICBmaWVsZHNldFtkaXNhYmxlZF0gLmJ1dHRvbi5pcy1wcmltYXJ5LmlzLWludmVydGVkLmlzLW91dGxpbmVkIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICAgIGJvcmRlci1jb2xvcjogI2ZmZjtcbiAgICAgICAgYm94LXNoYWRvdzogbm9uZTtcbiAgICAgICAgY29sb3I6ICNmZmY7IH1cbiAgLmJ1dHRvbi5pcy1saW5rIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzI3M2RjO1xuICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgY29sb3I6ICNmZmY7IH1cbiAgICAuYnV0dG9uLmlzLWxpbms6aG92ZXIsIC5idXR0b24uaXMtbGluay5pcy1ob3ZlcmVkIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICMyNzZjZGE7XG4gICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgY29sb3I6ICNmZmY7IH1cbiAgICAuYnV0dG9uLmlzLWxpbms6Zm9jdXMsIC5idXR0b24uaXMtbGluay5pcy1mb2N1c2VkIHtcbiAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICBjb2xvcjogI2ZmZjsgfVxuICAgICAgLmJ1dHRvbi5pcy1saW5rOmZvY3VzOm5vdCg6YWN0aXZlKSwgLmJ1dHRvbi5pcy1saW5rLmlzLWZvY3VzZWQ6bm90KDphY3RpdmUpIHtcbiAgICAgICAgYm94LXNoYWRvdzogMCAwIDAgMC4xMjVlbSByZ2JhKDUwLCAxMTUsIDIyMCwgMC4yNSk7IH1cbiAgICAuYnV0dG9uLmlzLWxpbms6YWN0aXZlLCAuYnV0dG9uLmlzLWxpbmsuaXMtYWN0aXZlIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICMyMzY2ZDE7XG4gICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgY29sb3I6ICNmZmY7IH1cbiAgICAuYnV0dG9uLmlzLWxpbmtbZGlzYWJsZWRdLFxuICAgIGZpZWxkc2V0W2Rpc2FibGVkXSAuYnV0dG9uLmlzLWxpbmsge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzMyNzNkYztcbiAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICBib3gtc2hhZG93OiBub25lOyB9XG4gICAgLmJ1dHRvbi5pcy1saW5rLmlzLWludmVydGVkIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgICBjb2xvcjogIzMyNzNkYzsgfVxuICAgICAgLmJ1dHRvbi5pcy1saW5rLmlzLWludmVydGVkOmhvdmVyLCAuYnV0dG9uLmlzLWxpbmsuaXMtaW52ZXJ0ZWQuaXMtaG92ZXJlZCB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmMmYyZjI7IH1cbiAgICAgIC5idXR0b24uaXMtbGluay5pcy1pbnZlcnRlZFtkaXNhYmxlZF0sXG4gICAgICBmaWVsZHNldFtkaXNhYmxlZF0gLmJ1dHRvbi5pcy1saW5rLmlzLWludmVydGVkIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICAgICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgICAgYm94LXNoYWRvdzogbm9uZTtcbiAgICAgICAgY29sb3I6ICMzMjczZGM7IH1cbiAgICAuYnV0dG9uLmlzLWxpbmsuaXMtbG9hZGluZzo6YWZ0ZXIge1xuICAgICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCAjZmZmICNmZmYgIWltcG9ydGFudDsgfVxuICAgIC5idXR0b24uaXMtbGluay5pcy1vdXRsaW5lZCB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgIGJvcmRlci1jb2xvcjogIzMyNzNkYztcbiAgICAgIGNvbG9yOiAjMzI3M2RjOyB9XG4gICAgICAuYnV0dG9uLmlzLWxpbmsuaXMtb3V0bGluZWQ6aG92ZXIsIC5idXR0b24uaXMtbGluay5pcy1vdXRsaW5lZC5pcy1ob3ZlcmVkLCAuYnV0dG9uLmlzLWxpbmsuaXMtb3V0bGluZWQ6Zm9jdXMsIC5idXR0b24uaXMtbGluay5pcy1vdXRsaW5lZC5pcy1mb2N1c2VkIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzMyNzNkYztcbiAgICAgICAgYm9yZGVyLWNvbG9yOiAjMzI3M2RjO1xuICAgICAgICBjb2xvcjogI2ZmZjsgfVxuICAgICAgLmJ1dHRvbi5pcy1saW5rLmlzLW91dGxpbmVkLmlzLWxvYWRpbmc6OmFmdGVyIHtcbiAgICAgICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCAjMzI3M2RjICMzMjczZGMgIWltcG9ydGFudDsgfVxuICAgICAgLmJ1dHRvbi5pcy1saW5rLmlzLW91dGxpbmVkLmlzLWxvYWRpbmc6aG92ZXI6OmFmdGVyLCAuYnV0dG9uLmlzLWxpbmsuaXMtb3V0bGluZWQuaXMtbG9hZGluZy5pcy1ob3ZlcmVkOjphZnRlciwgLmJ1dHRvbi5pcy1saW5rLmlzLW91dGxpbmVkLmlzLWxvYWRpbmc6Zm9jdXM6OmFmdGVyLCAuYnV0dG9uLmlzLWxpbmsuaXMtb3V0bGluZWQuaXMtbG9hZGluZy5pcy1mb2N1c2VkOjphZnRlciB7XG4gICAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgI2ZmZiAjZmZmICFpbXBvcnRhbnQ7IH1cbiAgICAgIC5idXR0b24uaXMtbGluay5pcy1vdXRsaW5lZFtkaXNhYmxlZF0sXG4gICAgICBmaWVsZHNldFtkaXNhYmxlZF0gLmJ1dHRvbi5pcy1saW5rLmlzLW91dGxpbmVkIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICAgIGJvcmRlci1jb2xvcjogIzMyNzNkYztcbiAgICAgICAgYm94LXNoYWRvdzogbm9uZTtcbiAgICAgICAgY29sb3I6ICMzMjczZGM7IH1cbiAgICAuYnV0dG9uLmlzLWxpbmsuaXMtaW52ZXJ0ZWQuaXMtb3V0bGluZWQge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICBib3JkZXItY29sb3I6ICNmZmY7XG4gICAgICBjb2xvcjogI2ZmZjsgfVxuICAgICAgLmJ1dHRvbi5pcy1saW5rLmlzLWludmVydGVkLmlzLW91dGxpbmVkOmhvdmVyLCAuYnV0dG9uLmlzLWxpbmsuaXMtaW52ZXJ0ZWQuaXMtb3V0bGluZWQuaXMtaG92ZXJlZCwgLmJ1dHRvbi5pcy1saW5rLmlzLWludmVydGVkLmlzLW91dGxpbmVkOmZvY3VzLCAuYnV0dG9uLmlzLWxpbmsuaXMtaW52ZXJ0ZWQuaXMtb3V0bGluZWQuaXMtZm9jdXNlZCB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgICAgIGNvbG9yOiAjMzI3M2RjOyB9XG4gICAgICAuYnV0dG9uLmlzLWxpbmsuaXMtaW52ZXJ0ZWQuaXMtb3V0bGluZWQuaXMtbG9hZGluZzpob3Zlcjo6YWZ0ZXIsIC5idXR0b24uaXMtbGluay5pcy1pbnZlcnRlZC5pcy1vdXRsaW5lZC5pcy1sb2FkaW5nLmlzLWhvdmVyZWQ6OmFmdGVyLCAuYnV0dG9uLmlzLWxpbmsuaXMtaW52ZXJ0ZWQuaXMtb3V0bGluZWQuaXMtbG9hZGluZzpmb2N1czo6YWZ0ZXIsIC5idXR0b24uaXMtbGluay5pcy1pbnZlcnRlZC5pcy1vdXRsaW5lZC5pcy1sb2FkaW5nLmlzLWZvY3VzZWQ6OmFmdGVyIHtcbiAgICAgICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCAjMzI3M2RjICMzMjczZGMgIWltcG9ydGFudDsgfVxuICAgICAgLmJ1dHRvbi5pcy1saW5rLmlzLWludmVydGVkLmlzLW91dGxpbmVkW2Rpc2FibGVkXSxcbiAgICAgIGZpZWxkc2V0W2Rpc2FibGVkXSAuYnV0dG9uLmlzLWxpbmsuaXMtaW52ZXJ0ZWQuaXMtb3V0bGluZWQge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgICAgYm9yZGVyLWNvbG9yOiAjZmZmO1xuICAgICAgICBib3gtc2hhZG93OiBub25lO1xuICAgICAgICBjb2xvcjogI2ZmZjsgfVxuICAuYnV0dG9uLmlzLWluZm8ge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMyMDljZWU7XG4gICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBjb2xvcjogI2ZmZjsgfVxuICAgIC5idXR0b24uaXMtaW5mbzpob3ZlciwgLmJ1dHRvbi5pcy1pbmZvLmlzLWhvdmVyZWQge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzE0OTZlZDtcbiAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICBjb2xvcjogI2ZmZjsgfVxuICAgIC5idXR0b24uaXMtaW5mbzpmb2N1cywgLmJ1dHRvbi5pcy1pbmZvLmlzLWZvY3VzZWQge1xuICAgICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgIGNvbG9yOiAjZmZmOyB9XG4gICAgICAuYnV0dG9uLmlzLWluZm86Zm9jdXM6bm90KDphY3RpdmUpLCAuYnV0dG9uLmlzLWluZm8uaXMtZm9jdXNlZDpub3QoOmFjdGl2ZSkge1xuICAgICAgICBib3gtc2hhZG93OiAwIDAgMCAwLjEyNWVtIHJnYmEoMzIsIDE1NiwgMjM4LCAwLjI1KTsgfVxuICAgIC5idXR0b24uaXMtaW5mbzphY3RpdmUsIC5idXR0b24uaXMtaW5mby5pcy1hY3RpdmUge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzExOGZlNDtcbiAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICBjb2xvcjogI2ZmZjsgfVxuICAgIC5idXR0b24uaXMtaW5mb1tkaXNhYmxlZF0sXG4gICAgZmllbGRzZXRbZGlzYWJsZWRdIC5idXR0b24uaXMtaW5mbyB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjA5Y2VlO1xuICAgICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgIGJveC1zaGFkb3c6IG5vbmU7IH1cbiAgICAuYnV0dG9uLmlzLWluZm8uaXMtaW52ZXJ0ZWQge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICAgIGNvbG9yOiAjMjA5Y2VlOyB9XG4gICAgICAuYnV0dG9uLmlzLWluZm8uaXMtaW52ZXJ0ZWQ6aG92ZXIsIC5idXR0b24uaXMtaW5mby5pcy1pbnZlcnRlZC5pcy1ob3ZlcmVkIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2YyZjJmMjsgfVxuICAgICAgLmJ1dHRvbi5pcy1pbmZvLmlzLWludmVydGVkW2Rpc2FibGVkXSxcbiAgICAgIGZpZWxkc2V0W2Rpc2FibGVkXSAuYnV0dG9uLmlzLWluZm8uaXMtaW52ZXJ0ZWQge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgICBib3gtc2hhZG93OiBub25lO1xuICAgICAgICBjb2xvcjogIzIwOWNlZTsgfVxuICAgIC5idXR0b24uaXMtaW5mby5pcy1sb2FkaW5nOjphZnRlciB7XG4gICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50ICNmZmYgI2ZmZiAhaW1wb3J0YW50OyB9XG4gICAgLmJ1dHRvbi5pcy1pbmZvLmlzLW91dGxpbmVkIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgYm9yZGVyLWNvbG9yOiAjMjA5Y2VlO1xuICAgICAgY29sb3I6ICMyMDljZWU7IH1cbiAgICAgIC5idXR0b24uaXMtaW5mby5pcy1vdXRsaW5lZDpob3ZlciwgLmJ1dHRvbi5pcy1pbmZvLmlzLW91dGxpbmVkLmlzLWhvdmVyZWQsIC5idXR0b24uaXMtaW5mby5pcy1vdXRsaW5lZDpmb2N1cywgLmJ1dHRvbi5pcy1pbmZvLmlzLW91dGxpbmVkLmlzLWZvY3VzZWQge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjA5Y2VlO1xuICAgICAgICBib3JkZXItY29sb3I6ICMyMDljZWU7XG4gICAgICAgIGNvbG9yOiAjZmZmOyB9XG4gICAgICAuYnV0dG9uLmlzLWluZm8uaXMtb3V0bGluZWQuaXMtbG9hZGluZzo6YWZ0ZXIge1xuICAgICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50ICMyMDljZWUgIzIwOWNlZSAhaW1wb3J0YW50OyB9XG4gICAgICAuYnV0dG9uLmlzLWluZm8uaXMtb3V0bGluZWQuaXMtbG9hZGluZzpob3Zlcjo6YWZ0ZXIsIC5idXR0b24uaXMtaW5mby5pcy1vdXRsaW5lZC5pcy1sb2FkaW5nLmlzLWhvdmVyZWQ6OmFmdGVyLCAuYnV0dG9uLmlzLWluZm8uaXMtb3V0bGluZWQuaXMtbG9hZGluZzpmb2N1czo6YWZ0ZXIsIC5idXR0b24uaXMtaW5mby5pcy1vdXRsaW5lZC5pcy1sb2FkaW5nLmlzLWZvY3VzZWQ6OmFmdGVyIHtcbiAgICAgICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCAjZmZmICNmZmYgIWltcG9ydGFudDsgfVxuICAgICAgLmJ1dHRvbi5pcy1pbmZvLmlzLW91dGxpbmVkW2Rpc2FibGVkXSxcbiAgICAgIGZpZWxkc2V0W2Rpc2FibGVkXSAuYnV0dG9uLmlzLWluZm8uaXMtb3V0bGluZWQge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgICAgYm9yZGVyLWNvbG9yOiAjMjA5Y2VlO1xuICAgICAgICBib3gtc2hhZG93OiBub25lO1xuICAgICAgICBjb2xvcjogIzIwOWNlZTsgfVxuICAgIC5idXR0b24uaXMtaW5mby5pcy1pbnZlcnRlZC5pcy1vdXRsaW5lZCB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgIGJvcmRlci1jb2xvcjogI2ZmZjtcbiAgICAgIGNvbG9yOiAjZmZmOyB9XG4gICAgICAuYnV0dG9uLmlzLWluZm8uaXMtaW52ZXJ0ZWQuaXMtb3V0bGluZWQ6aG92ZXIsIC5idXR0b24uaXMtaW5mby5pcy1pbnZlcnRlZC5pcy1vdXRsaW5lZC5pcy1ob3ZlcmVkLCAuYnV0dG9uLmlzLWluZm8uaXMtaW52ZXJ0ZWQuaXMtb3V0bGluZWQ6Zm9jdXMsIC5idXR0b24uaXMtaW5mby5pcy1pbnZlcnRlZC5pcy1vdXRsaW5lZC5pcy1mb2N1c2VkIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICAgICAgY29sb3I6ICMyMDljZWU7IH1cbiAgICAgIC5idXR0b24uaXMtaW5mby5pcy1pbnZlcnRlZC5pcy1vdXRsaW5lZC5pcy1sb2FkaW5nOmhvdmVyOjphZnRlciwgLmJ1dHRvbi5pcy1pbmZvLmlzLWludmVydGVkLmlzLW91dGxpbmVkLmlzLWxvYWRpbmcuaXMtaG92ZXJlZDo6YWZ0ZXIsIC5idXR0b24uaXMtaW5mby5pcy1pbnZlcnRlZC5pcy1vdXRsaW5lZC5pcy1sb2FkaW5nOmZvY3VzOjphZnRlciwgLmJ1dHRvbi5pcy1pbmZvLmlzLWludmVydGVkLmlzLW91dGxpbmVkLmlzLWxvYWRpbmcuaXMtZm9jdXNlZDo6YWZ0ZXIge1xuICAgICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50ICMyMDljZWUgIzIwOWNlZSAhaW1wb3J0YW50OyB9XG4gICAgICAuYnV0dG9uLmlzLWluZm8uaXMtaW52ZXJ0ZWQuaXMtb3V0bGluZWRbZGlzYWJsZWRdLFxuICAgICAgZmllbGRzZXRbZGlzYWJsZWRdIC5idXR0b24uaXMtaW5mby5pcy1pbnZlcnRlZC5pcy1vdXRsaW5lZCB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgICBib3JkZXItY29sb3I6ICNmZmY7XG4gICAgICAgIGJveC1zaGFkb3c6IG5vbmU7XG4gICAgICAgIGNvbG9yOiAjZmZmOyB9XG4gIC5idXR0b24uaXMtc3VjY2VzcyB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzIzZDE2MDtcbiAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIGNvbG9yOiAjZmZmOyB9XG4gICAgLmJ1dHRvbi5pcy1zdWNjZXNzOmhvdmVyLCAuYnV0dG9uLmlzLXN1Y2Nlc3MuaXMtaG92ZXJlZCB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjJjNjViO1xuICAgICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgIGNvbG9yOiAjZmZmOyB9XG4gICAgLmJ1dHRvbi5pcy1zdWNjZXNzOmZvY3VzLCAuYnV0dG9uLmlzLXN1Y2Nlc3MuaXMtZm9jdXNlZCB7XG4gICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgY29sb3I6ICNmZmY7IH1cbiAgICAgIC5idXR0b24uaXMtc3VjY2Vzczpmb2N1czpub3QoOmFjdGl2ZSksIC5idXR0b24uaXMtc3VjY2Vzcy5pcy1mb2N1c2VkOm5vdCg6YWN0aXZlKSB7XG4gICAgICAgIGJveC1zaGFkb3c6IDAgMCAwIDAuMTI1ZW0gcmdiYSgzNSwgMjA5LCA5NiwgMC4yNSk7IH1cbiAgICAuYnV0dG9uLmlzLXN1Y2Nlc3M6YWN0aXZlLCAuYnV0dG9uLmlzLXN1Y2Nlc3MuaXMtYWN0aXZlIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICMyMGJjNTY7XG4gICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgY29sb3I6ICNmZmY7IH1cbiAgICAuYnV0dG9uLmlzLXN1Y2Nlc3NbZGlzYWJsZWRdLFxuICAgIGZpZWxkc2V0W2Rpc2FibGVkXSAuYnV0dG9uLmlzLXN1Y2Nlc3Mge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzIzZDE2MDtcbiAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICBib3gtc2hhZG93OiBub25lOyB9XG4gICAgLmJ1dHRvbi5pcy1zdWNjZXNzLmlzLWludmVydGVkIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgICBjb2xvcjogIzIzZDE2MDsgfVxuICAgICAgLmJ1dHRvbi5pcy1zdWNjZXNzLmlzLWludmVydGVkOmhvdmVyLCAuYnV0dG9uLmlzLXN1Y2Nlc3MuaXMtaW52ZXJ0ZWQuaXMtaG92ZXJlZCB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmMmYyZjI7IH1cbiAgICAgIC5idXR0b24uaXMtc3VjY2Vzcy5pcy1pbnZlcnRlZFtkaXNhYmxlZF0sXG4gICAgICBmaWVsZHNldFtkaXNhYmxlZF0gLmJ1dHRvbi5pcy1zdWNjZXNzLmlzLWludmVydGVkIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICAgICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgICAgYm94LXNoYWRvdzogbm9uZTtcbiAgICAgICAgY29sb3I6ICMyM2QxNjA7IH1cbiAgICAuYnV0dG9uLmlzLXN1Y2Nlc3MuaXMtbG9hZGluZzo6YWZ0ZXIge1xuICAgICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCAjZmZmICNmZmYgIWltcG9ydGFudDsgfVxuICAgIC5idXR0b24uaXMtc3VjY2Vzcy5pcy1vdXRsaW5lZCB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgIGJvcmRlci1jb2xvcjogIzIzZDE2MDtcbiAgICAgIGNvbG9yOiAjMjNkMTYwOyB9XG4gICAgICAuYnV0dG9uLmlzLXN1Y2Nlc3MuaXMtb3V0bGluZWQ6aG92ZXIsIC5idXR0b24uaXMtc3VjY2Vzcy5pcy1vdXRsaW5lZC5pcy1ob3ZlcmVkLCAuYnV0dG9uLmlzLXN1Y2Nlc3MuaXMtb3V0bGluZWQ6Zm9jdXMsIC5idXR0b24uaXMtc3VjY2Vzcy5pcy1vdXRsaW5lZC5pcy1mb2N1c2VkIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzIzZDE2MDtcbiAgICAgICAgYm9yZGVyLWNvbG9yOiAjMjNkMTYwO1xuICAgICAgICBjb2xvcjogI2ZmZjsgfVxuICAgICAgLmJ1dHRvbi5pcy1zdWNjZXNzLmlzLW91dGxpbmVkLmlzLWxvYWRpbmc6OmFmdGVyIHtcbiAgICAgICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCAjMjNkMTYwICMyM2QxNjAgIWltcG9ydGFudDsgfVxuICAgICAgLmJ1dHRvbi5pcy1zdWNjZXNzLmlzLW91dGxpbmVkLmlzLWxvYWRpbmc6aG92ZXI6OmFmdGVyLCAuYnV0dG9uLmlzLXN1Y2Nlc3MuaXMtb3V0bGluZWQuaXMtbG9hZGluZy5pcy1ob3ZlcmVkOjphZnRlciwgLmJ1dHRvbi5pcy1zdWNjZXNzLmlzLW91dGxpbmVkLmlzLWxvYWRpbmc6Zm9jdXM6OmFmdGVyLCAuYnV0dG9uLmlzLXN1Y2Nlc3MuaXMtb3V0bGluZWQuaXMtbG9hZGluZy5pcy1mb2N1c2VkOjphZnRlciB7XG4gICAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgI2ZmZiAjZmZmICFpbXBvcnRhbnQ7IH1cbiAgICAgIC5idXR0b24uaXMtc3VjY2Vzcy5pcy1vdXRsaW5lZFtkaXNhYmxlZF0sXG4gICAgICBmaWVsZHNldFtkaXNhYmxlZF0gLmJ1dHRvbi5pcy1zdWNjZXNzLmlzLW91dGxpbmVkIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICAgIGJvcmRlci1jb2xvcjogIzIzZDE2MDtcbiAgICAgICAgYm94LXNoYWRvdzogbm9uZTtcbiAgICAgICAgY29sb3I6ICMyM2QxNjA7IH1cbiAgICAuYnV0dG9uLmlzLXN1Y2Nlc3MuaXMtaW52ZXJ0ZWQuaXMtb3V0bGluZWQge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICBib3JkZXItY29sb3I6ICNmZmY7XG4gICAgICBjb2xvcjogI2ZmZjsgfVxuICAgICAgLmJ1dHRvbi5pcy1zdWNjZXNzLmlzLWludmVydGVkLmlzLW91dGxpbmVkOmhvdmVyLCAuYnV0dG9uLmlzLXN1Y2Nlc3MuaXMtaW52ZXJ0ZWQuaXMtb3V0bGluZWQuaXMtaG92ZXJlZCwgLmJ1dHRvbi5pcy1zdWNjZXNzLmlzLWludmVydGVkLmlzLW91dGxpbmVkOmZvY3VzLCAuYnV0dG9uLmlzLXN1Y2Nlc3MuaXMtaW52ZXJ0ZWQuaXMtb3V0bGluZWQuaXMtZm9jdXNlZCB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgICAgIGNvbG9yOiAjMjNkMTYwOyB9XG4gICAgICAuYnV0dG9uLmlzLXN1Y2Nlc3MuaXMtaW52ZXJ0ZWQuaXMtb3V0bGluZWQuaXMtbG9hZGluZzpob3Zlcjo6YWZ0ZXIsIC5idXR0b24uaXMtc3VjY2Vzcy5pcy1pbnZlcnRlZC5pcy1vdXRsaW5lZC5pcy1sb2FkaW5nLmlzLWhvdmVyZWQ6OmFmdGVyLCAuYnV0dG9uLmlzLXN1Y2Nlc3MuaXMtaW52ZXJ0ZWQuaXMtb3V0bGluZWQuaXMtbG9hZGluZzpmb2N1czo6YWZ0ZXIsIC5idXR0b24uaXMtc3VjY2Vzcy5pcy1pbnZlcnRlZC5pcy1vdXRsaW5lZC5pcy1sb2FkaW5nLmlzLWZvY3VzZWQ6OmFmdGVyIHtcbiAgICAgICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCAjMjNkMTYwICMyM2QxNjAgIWltcG9ydGFudDsgfVxuICAgICAgLmJ1dHRvbi5pcy1zdWNjZXNzLmlzLWludmVydGVkLmlzLW91dGxpbmVkW2Rpc2FibGVkXSxcbiAgICAgIGZpZWxkc2V0W2Rpc2FibGVkXSAuYnV0dG9uLmlzLXN1Y2Nlc3MuaXMtaW52ZXJ0ZWQuaXMtb3V0bGluZWQge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgICAgYm9yZGVyLWNvbG9yOiAjZmZmO1xuICAgICAgICBib3gtc2hhZG93OiBub25lO1xuICAgICAgICBjb2xvcjogI2ZmZjsgfVxuICAuYnV0dG9uLmlzLXdhcm5pbmcge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmRkNTc7XG4gICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjcpOyB9XG4gICAgLmJ1dHRvbi5pcy13YXJuaW5nOmhvdmVyLCAuYnV0dG9uLmlzLXdhcm5pbmcuaXMtaG92ZXJlZCB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZkYjRhO1xuICAgICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNyk7IH1cbiAgICAuYnV0dG9uLmlzLXdhcm5pbmc6Zm9jdXMsIC5idXR0b24uaXMtd2FybmluZy5pcy1mb2N1c2VkIHtcbiAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjcpOyB9XG4gICAgICAuYnV0dG9uLmlzLXdhcm5pbmc6Zm9jdXM6bm90KDphY3RpdmUpLCAuYnV0dG9uLmlzLXdhcm5pbmcuaXMtZm9jdXNlZDpub3QoOmFjdGl2ZSkge1xuICAgICAgICBib3gtc2hhZG93OiAwIDAgMCAwLjEyNWVtIHJnYmEoMjU1LCAyMjEsIDg3LCAwLjI1KTsgfVxuICAgIC5idXR0b24uaXMtd2FybmluZzphY3RpdmUsIC5idXR0b24uaXMtd2FybmluZy5pcy1hY3RpdmUge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZDgzZDtcbiAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjcpOyB9XG4gICAgLmJ1dHRvbi5pcy13YXJuaW5nW2Rpc2FibGVkXSxcbiAgICBmaWVsZHNldFtkaXNhYmxlZF0gLmJ1dHRvbi5pcy13YXJuaW5nIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmRkNTc7XG4gICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgYm94LXNoYWRvdzogbm9uZTsgfVxuICAgIC5idXR0b24uaXMtd2FybmluZy5pcy1pbnZlcnRlZCB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNyk7XG4gICAgICBjb2xvcjogI2ZmZGQ1NzsgfVxuICAgICAgLmJ1dHRvbi5pcy13YXJuaW5nLmlzLWludmVydGVkOmhvdmVyLCAuYnV0dG9uLmlzLXdhcm5pbmcuaXMtaW52ZXJ0ZWQuaXMtaG92ZXJlZCB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC43KTsgfVxuICAgICAgLmJ1dHRvbi5pcy13YXJuaW5nLmlzLWludmVydGVkW2Rpc2FibGVkXSxcbiAgICAgIGZpZWxkc2V0W2Rpc2FibGVkXSAuYnV0dG9uLmlzLXdhcm5pbmcuaXMtaW52ZXJ0ZWQge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNyk7XG4gICAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICAgIGJveC1zaGFkb3c6IG5vbmU7XG4gICAgICAgIGNvbG9yOiAjZmZkZDU3OyB9XG4gICAgLmJ1dHRvbi5pcy13YXJuaW5nLmlzLWxvYWRpbmc6OmFmdGVyIHtcbiAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgcmdiYSgwLCAwLCAwLCAwLjcpIHJnYmEoMCwgMCwgMCwgMC43KSAhaW1wb3J0YW50OyB9XG4gICAgLmJ1dHRvbi5pcy13YXJuaW5nLmlzLW91dGxpbmVkIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgYm9yZGVyLWNvbG9yOiAjZmZkZDU3O1xuICAgICAgY29sb3I6ICNmZmRkNTc7IH1cbiAgICAgIC5idXR0b24uaXMtd2FybmluZy5pcy1vdXRsaW5lZDpob3ZlciwgLmJ1dHRvbi5pcy13YXJuaW5nLmlzLW91dGxpbmVkLmlzLWhvdmVyZWQsIC5idXR0b24uaXMtd2FybmluZy5pcy1vdXRsaW5lZDpmb2N1cywgLmJ1dHRvbi5pcy13YXJuaW5nLmlzLW91dGxpbmVkLmlzLWZvY3VzZWQge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZkZDU3O1xuICAgICAgICBib3JkZXItY29sb3I6ICNmZmRkNTc7XG4gICAgICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNyk7IH1cbiAgICAgIC5idXR0b24uaXMtd2FybmluZy5pcy1vdXRsaW5lZC5pcy1sb2FkaW5nOjphZnRlciB7XG4gICAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgI2ZmZGQ1NyAjZmZkZDU3ICFpbXBvcnRhbnQ7IH1cbiAgICAgIC5idXR0b24uaXMtd2FybmluZy5pcy1vdXRsaW5lZC5pcy1sb2FkaW5nOmhvdmVyOjphZnRlciwgLmJ1dHRvbi5pcy13YXJuaW5nLmlzLW91dGxpbmVkLmlzLWxvYWRpbmcuaXMtaG92ZXJlZDo6YWZ0ZXIsIC5idXR0b24uaXMtd2FybmluZy5pcy1vdXRsaW5lZC5pcy1sb2FkaW5nOmZvY3VzOjphZnRlciwgLmJ1dHRvbi5pcy13YXJuaW5nLmlzLW91dGxpbmVkLmlzLWxvYWRpbmcuaXMtZm9jdXNlZDo6YWZ0ZXIge1xuICAgICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50IHJnYmEoMCwgMCwgMCwgMC43KSByZ2JhKDAsIDAsIDAsIDAuNykgIWltcG9ydGFudDsgfVxuICAgICAgLmJ1dHRvbi5pcy13YXJuaW5nLmlzLW91dGxpbmVkW2Rpc2FibGVkXSxcbiAgICAgIGZpZWxkc2V0W2Rpc2FibGVkXSAuYnV0dG9uLmlzLXdhcm5pbmcuaXMtb3V0bGluZWQge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgICAgYm9yZGVyLWNvbG9yOiAjZmZkZDU3O1xuICAgICAgICBib3gtc2hhZG93OiBub25lO1xuICAgICAgICBjb2xvcjogI2ZmZGQ1NzsgfVxuICAgIC5idXR0b24uaXMtd2FybmluZy5pcy1pbnZlcnRlZC5pcy1vdXRsaW5lZCB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgIGJvcmRlci1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjcpO1xuICAgICAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC43KTsgfVxuICAgICAgLmJ1dHRvbi5pcy13YXJuaW5nLmlzLWludmVydGVkLmlzLW91dGxpbmVkOmhvdmVyLCAuYnV0dG9uLmlzLXdhcm5pbmcuaXMtaW52ZXJ0ZWQuaXMtb3V0bGluZWQuaXMtaG92ZXJlZCwgLmJ1dHRvbi5pcy13YXJuaW5nLmlzLWludmVydGVkLmlzLW91dGxpbmVkOmZvY3VzLCAuYnV0dG9uLmlzLXdhcm5pbmcuaXMtaW52ZXJ0ZWQuaXMtb3V0bGluZWQuaXMtZm9jdXNlZCB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC43KTtcbiAgICAgICAgY29sb3I6ICNmZmRkNTc7IH1cbiAgICAgIC5idXR0b24uaXMtd2FybmluZy5pcy1pbnZlcnRlZC5pcy1vdXRsaW5lZC5pcy1sb2FkaW5nOmhvdmVyOjphZnRlciwgLmJ1dHRvbi5pcy13YXJuaW5nLmlzLWludmVydGVkLmlzLW91dGxpbmVkLmlzLWxvYWRpbmcuaXMtaG92ZXJlZDo6YWZ0ZXIsIC5idXR0b24uaXMtd2FybmluZy5pcy1pbnZlcnRlZC5pcy1vdXRsaW5lZC5pcy1sb2FkaW5nOmZvY3VzOjphZnRlciwgLmJ1dHRvbi5pcy13YXJuaW5nLmlzLWludmVydGVkLmlzLW91dGxpbmVkLmlzLWxvYWRpbmcuaXMtZm9jdXNlZDo6YWZ0ZXIge1xuICAgICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50ICNmZmRkNTcgI2ZmZGQ1NyAhaW1wb3J0YW50OyB9XG4gICAgICAuYnV0dG9uLmlzLXdhcm5pbmcuaXMtaW52ZXJ0ZWQuaXMtb3V0bGluZWRbZGlzYWJsZWRdLFxuICAgICAgZmllbGRzZXRbZGlzYWJsZWRdIC5idXR0b24uaXMtd2FybmluZy5pcy1pbnZlcnRlZC5pcy1vdXRsaW5lZCB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgICBib3JkZXItY29sb3I6IHJnYmEoMCwgMCwgMCwgMC43KTtcbiAgICAgICAgYm94LXNoYWRvdzogbm9uZTtcbiAgICAgICAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC43KTsgfVxuICAuYnV0dG9uLmlzLWRhbmdlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmMzg2MDtcbiAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIGNvbG9yOiAjZmZmOyB9XG4gICAgLmJ1dHRvbi5pcy1kYW5nZXI6aG92ZXIsIC5idXR0b24uaXMtZGFuZ2VyLmlzLWhvdmVyZWQge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmMmI1NjtcbiAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICBjb2xvcjogI2ZmZjsgfVxuICAgIC5idXR0b24uaXMtZGFuZ2VyOmZvY3VzLCAuYnV0dG9uLmlzLWRhbmdlci5pcy1mb2N1c2VkIHtcbiAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICBjb2xvcjogI2ZmZjsgfVxuICAgICAgLmJ1dHRvbi5pcy1kYW5nZXI6Zm9jdXM6bm90KDphY3RpdmUpLCAuYnV0dG9uLmlzLWRhbmdlci5pcy1mb2N1c2VkOm5vdCg6YWN0aXZlKSB7XG4gICAgICAgIGJveC1zaGFkb3c6IDAgMCAwIDAuMTI1ZW0gcmdiYSgyNTUsIDU2LCA5NiwgMC4yNSk7IH1cbiAgICAuYnV0dG9uLmlzLWRhbmdlcjphY3RpdmUsIC5idXR0b24uaXMtZGFuZ2VyLmlzLWFjdGl2ZSB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmYxZjRiO1xuICAgICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgIGNvbG9yOiAjZmZmOyB9XG4gICAgLmJ1dHRvbi5pcy1kYW5nZXJbZGlzYWJsZWRdLFxuICAgIGZpZWxkc2V0W2Rpc2FibGVkXSAuYnV0dG9uLmlzLWRhbmdlciB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmYzODYwO1xuICAgICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgIGJveC1zaGFkb3c6IG5vbmU7IH1cbiAgICAuYnV0dG9uLmlzLWRhbmdlci5pcy1pbnZlcnRlZCB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgICAgY29sb3I6ICNmZjM4NjA7IH1cbiAgICAgIC5idXR0b24uaXMtZGFuZ2VyLmlzLWludmVydGVkOmhvdmVyLCAuYnV0dG9uLmlzLWRhbmdlci5pcy1pbnZlcnRlZC5pcy1ob3ZlcmVkIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2YyZjJmMjsgfVxuICAgICAgLmJ1dHRvbi5pcy1kYW5nZXIuaXMtaW52ZXJ0ZWRbZGlzYWJsZWRdLFxuICAgICAgZmllbGRzZXRbZGlzYWJsZWRdIC5idXR0b24uaXMtZGFuZ2VyLmlzLWludmVydGVkIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICAgICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgICAgYm94LXNoYWRvdzogbm9uZTtcbiAgICAgICAgY29sb3I6ICNmZjM4NjA7IH1cbiAgICAuYnV0dG9uLmlzLWRhbmdlci5pcy1sb2FkaW5nOjphZnRlciB7XG4gICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50ICNmZmYgI2ZmZiAhaW1wb3J0YW50OyB9XG4gICAgLmJ1dHRvbi5pcy1kYW5nZXIuaXMtb3V0bGluZWQge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICBib3JkZXItY29sb3I6ICNmZjM4NjA7XG4gICAgICBjb2xvcjogI2ZmMzg2MDsgfVxuICAgICAgLmJ1dHRvbi5pcy1kYW5nZXIuaXMtb3V0bGluZWQ6aG92ZXIsIC5idXR0b24uaXMtZGFuZ2VyLmlzLW91dGxpbmVkLmlzLWhvdmVyZWQsIC5idXR0b24uaXMtZGFuZ2VyLmlzLW91dGxpbmVkOmZvY3VzLCAuYnV0dG9uLmlzLWRhbmdlci5pcy1vdXRsaW5lZC5pcy1mb2N1c2VkIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmMzg2MDtcbiAgICAgICAgYm9yZGVyLWNvbG9yOiAjZmYzODYwO1xuICAgICAgICBjb2xvcjogI2ZmZjsgfVxuICAgICAgLmJ1dHRvbi5pcy1kYW5nZXIuaXMtb3V0bGluZWQuaXMtbG9hZGluZzo6YWZ0ZXIge1xuICAgICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50ICNmZjM4NjAgI2ZmMzg2MCAhaW1wb3J0YW50OyB9XG4gICAgICAuYnV0dG9uLmlzLWRhbmdlci5pcy1vdXRsaW5lZC5pcy1sb2FkaW5nOmhvdmVyOjphZnRlciwgLmJ1dHRvbi5pcy1kYW5nZXIuaXMtb3V0bGluZWQuaXMtbG9hZGluZy5pcy1ob3ZlcmVkOjphZnRlciwgLmJ1dHRvbi5pcy1kYW5nZXIuaXMtb3V0bGluZWQuaXMtbG9hZGluZzpmb2N1czo6YWZ0ZXIsIC5idXR0b24uaXMtZGFuZ2VyLmlzLW91dGxpbmVkLmlzLWxvYWRpbmcuaXMtZm9jdXNlZDo6YWZ0ZXIge1xuICAgICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50ICNmZmYgI2ZmZiAhaW1wb3J0YW50OyB9XG4gICAgICAuYnV0dG9uLmlzLWRhbmdlci5pcy1vdXRsaW5lZFtkaXNhYmxlZF0sXG4gICAgICBmaWVsZHNldFtkaXNhYmxlZF0gLmJ1dHRvbi5pcy1kYW5nZXIuaXMtb3V0bGluZWQge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgICAgYm9yZGVyLWNvbG9yOiAjZmYzODYwO1xuICAgICAgICBib3gtc2hhZG93OiBub25lO1xuICAgICAgICBjb2xvcjogI2ZmMzg2MDsgfVxuICAgIC5idXR0b24uaXMtZGFuZ2VyLmlzLWludmVydGVkLmlzLW91dGxpbmVkIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgYm9yZGVyLWNvbG9yOiAjZmZmO1xuICAgICAgY29sb3I6ICNmZmY7IH1cbiAgICAgIC5idXR0b24uaXMtZGFuZ2VyLmlzLWludmVydGVkLmlzLW91dGxpbmVkOmhvdmVyLCAuYnV0dG9uLmlzLWRhbmdlci5pcy1pbnZlcnRlZC5pcy1vdXRsaW5lZC5pcy1ob3ZlcmVkLCAuYnV0dG9uLmlzLWRhbmdlci5pcy1pbnZlcnRlZC5pcy1vdXRsaW5lZDpmb2N1cywgLmJ1dHRvbi5pcy1kYW5nZXIuaXMtaW52ZXJ0ZWQuaXMtb3V0bGluZWQuaXMtZm9jdXNlZCB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgICAgIGNvbG9yOiAjZmYzODYwOyB9XG4gICAgICAuYnV0dG9uLmlzLWRhbmdlci5pcy1pbnZlcnRlZC5pcy1vdXRsaW5lZC5pcy1sb2FkaW5nOmhvdmVyOjphZnRlciwgLmJ1dHRvbi5pcy1kYW5nZXIuaXMtaW52ZXJ0ZWQuaXMtb3V0bGluZWQuaXMtbG9hZGluZy5pcy1ob3ZlcmVkOjphZnRlciwgLmJ1dHRvbi5pcy1kYW5nZXIuaXMtaW52ZXJ0ZWQuaXMtb3V0bGluZWQuaXMtbG9hZGluZzpmb2N1czo6YWZ0ZXIsIC5idXR0b24uaXMtZGFuZ2VyLmlzLWludmVydGVkLmlzLW91dGxpbmVkLmlzLWxvYWRpbmcuaXMtZm9jdXNlZDo6YWZ0ZXIge1xuICAgICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50ICNmZjM4NjAgI2ZmMzg2MCAhaW1wb3J0YW50OyB9XG4gICAgICAuYnV0dG9uLmlzLWRhbmdlci5pcy1pbnZlcnRlZC5pcy1vdXRsaW5lZFtkaXNhYmxlZF0sXG4gICAgICBmaWVsZHNldFtkaXNhYmxlZF0gLmJ1dHRvbi5pcy1kYW5nZXIuaXMtaW52ZXJ0ZWQuaXMtb3V0bGluZWQge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgICAgYm9yZGVyLWNvbG9yOiAjZmZmO1xuICAgICAgICBib3gtc2hhZG93OiBub25lO1xuICAgICAgICBjb2xvcjogI2ZmZjsgfVxuICAuYnV0dG9uLmlzLXNtYWxsIHtcbiAgICBib3JkZXItcmFkaXVzOiAycHg7XG4gICAgZm9udC1zaXplOiAwLjc1cmVtOyB9XG4gIC5idXR0b24uaXMtbm9ybWFsIHtcbiAgICBmb250LXNpemU6IDFyZW07IH1cbiAgLmJ1dHRvbi5pcy1tZWRpdW0ge1xuICAgIGZvbnQtc2l6ZTogMS4yNXJlbTsgfVxuICAuYnV0dG9uLmlzLWxhcmdlIHtcbiAgICBmb250LXNpemU6IDEuNXJlbTsgfVxuICAuYnV0dG9uW2Rpc2FibGVkXSxcbiAgZmllbGRzZXRbZGlzYWJsZWRdIC5idXR0b24ge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICAgIGJvcmRlci1jb2xvcjogI2RiZGJkYjtcbiAgICBib3gtc2hhZG93OiBub25lO1xuICAgIG9wYWNpdHk6IDAuNTsgfVxuICAuYnV0dG9uLmlzLWZ1bGx3aWR0aCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICB3aWR0aDogMTAwJTsgfVxuICAuYnV0dG9uLmlzLWxvYWRpbmcge1xuICAgIGNvbG9yOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50O1xuICAgIHBvaW50ZXItZXZlbnRzOiBub25lOyB9XG4gICAgLmJ1dHRvbi5pcy1sb2FkaW5nOjphZnRlciB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBsZWZ0OiBjYWxjKDUwJSAtICgxZW0gLyAyKSk7XG4gICAgICB0b3A6IGNhbGMoNTAlIC0gKDFlbSAvIDIpKTtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZSAhaW1wb3J0YW50OyB9XG4gIC5idXR0b24uaXMtc3RhdGljIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZXNtb2tlO1xuICAgIGJvcmRlci1jb2xvcjogI2RiZGJkYjtcbiAgICBjb2xvcjogIzdhN2E3YTtcbiAgICBib3gtc2hhZG93OiBub25lO1xuICAgIHBvaW50ZXItZXZlbnRzOiBub25lOyB9XG4gIC5idXR0b24uaXMtcm91bmRlZCB7XG4gICAgYm9yZGVyLXJhZGl1czogMjkwNDg2cHg7XG4gICAgcGFkZGluZy1sZWZ0OiAxZW07XG4gICAgcGFkZGluZy1yaWdodDogMWVtOyB9XG5cbi5idXR0b25zIHtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7IH1cbiAgLmJ1dHRvbnMgLmJ1dHRvbiB7XG4gICAgbWFyZ2luLWJvdHRvbTogMC41cmVtOyB9XG4gICAgLmJ1dHRvbnMgLmJ1dHRvbjpub3QoOmxhc3QtY2hpbGQpOm5vdCguaXMtZnVsbHdpZHRoKSB7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDAuNXJlbTsgfVxuICAuYnV0dG9uczpsYXN0LWNoaWxkIHtcbiAgICBtYXJnaW4tYm90dG9tOiAtMC41cmVtOyB9XG4gIC5idXR0b25zOm5vdCg6bGFzdC1jaGlsZCkge1xuICAgIG1hcmdpbi1ib3R0b206IDFyZW07IH1cbiAgLmJ1dHRvbnMuYXJlLXNtYWxsIC5idXR0b246bm90KC5pcy1ub3JtYWwpOm5vdCguaXMtbWVkaXVtKTpub3QoLmlzLWxhcmdlKSB7XG4gICAgYm9yZGVyLXJhZGl1czogMnB4O1xuICAgIGZvbnQtc2l6ZTogMC43NXJlbTsgfVxuICAuYnV0dG9ucy5hcmUtbWVkaXVtIC5idXR0b246bm90KC5pcy1zbWFsbCk6bm90KC5pcy1ub3JtYWwpOm5vdCguaXMtbGFyZ2UpIHtcbiAgICBmb250LXNpemU6IDEuMjVyZW07IH1cbiAgLmJ1dHRvbnMuYXJlLWxhcmdlIC5idXR0b246bm90KC5pcy1zbWFsbCk6bm90KC5pcy1ub3JtYWwpOm5vdCguaXMtbWVkaXVtKSB7XG4gICAgZm9udC1zaXplOiAxLjVyZW07IH1cbiAgLmJ1dHRvbnMuaGFzLWFkZG9ucyAuYnV0dG9uOm5vdCg6Zmlyc3QtY2hpbGQpIHtcbiAgICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAwO1xuICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDA7IH1cbiAgLmJ1dHRvbnMuaGFzLWFkZG9ucyAuYnV0dG9uOm5vdCg6bGFzdC1jaGlsZCkge1xuICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAwO1xuICAgIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAwO1xuICAgIG1hcmdpbi1yaWdodDogLTFweDsgfVxuICAuYnV0dG9ucy5oYXMtYWRkb25zIC5idXR0b246bGFzdC1jaGlsZCB7XG4gICAgbWFyZ2luLXJpZ2h0OiAwOyB9XG4gIC5idXR0b25zLmhhcy1hZGRvbnMgLmJ1dHRvbjpob3ZlciwgLmJ1dHRvbnMuaGFzLWFkZG9ucyAuYnV0dG9uLmlzLWhvdmVyZWQge1xuICAgIHotaW5kZXg6IDI7IH1cbiAgLmJ1dHRvbnMuaGFzLWFkZG9ucyAuYnV0dG9uOmZvY3VzLCAuYnV0dG9ucy5oYXMtYWRkb25zIC5idXR0b24uaXMtZm9jdXNlZCwgLmJ1dHRvbnMuaGFzLWFkZG9ucyAuYnV0dG9uOmFjdGl2ZSwgLmJ1dHRvbnMuaGFzLWFkZG9ucyAuYnV0dG9uLmlzLWFjdGl2ZSwgLmJ1dHRvbnMuaGFzLWFkZG9ucyAuYnV0dG9uLmlzLXNlbGVjdGVkIHtcbiAgICB6LWluZGV4OiAzOyB9XG4gICAgLmJ1dHRvbnMuaGFzLWFkZG9ucyAuYnV0dG9uOmZvY3VzOmhvdmVyLCAuYnV0dG9ucy5oYXMtYWRkb25zIC5idXR0b24uaXMtZm9jdXNlZDpob3ZlciwgLmJ1dHRvbnMuaGFzLWFkZG9ucyAuYnV0dG9uOmFjdGl2ZTpob3ZlciwgLmJ1dHRvbnMuaGFzLWFkZG9ucyAuYnV0dG9uLmlzLWFjdGl2ZTpob3ZlciwgLmJ1dHRvbnMuaGFzLWFkZG9ucyAuYnV0dG9uLmlzLXNlbGVjdGVkOmhvdmVyIHtcbiAgICAgIHotaW5kZXg6IDQ7IH1cbiAgLmJ1dHRvbnMuaGFzLWFkZG9ucyAuYnV0dG9uLmlzLWV4cGFuZGVkIHtcbiAgICBmbGV4LWdyb3c6IDE7XG4gICAgZmxleC1zaHJpbms6IDE7IH1cbiAgLmJ1dHRvbnMuaXMtY2VudGVyZWQge1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOyB9XG4gICAgLmJ1dHRvbnMuaXMtY2VudGVyZWQ6bm90KC5oYXMtYWRkb25zKSAuYnV0dG9uOm5vdCguaXMtZnVsbHdpZHRoKSB7XG4gICAgICBtYXJnaW4tbGVmdDogMC4yNXJlbTtcbiAgICAgIG1hcmdpbi1yaWdodDogMC4yNXJlbTsgfVxuICAuYnV0dG9ucy5pcy1yaWdodCB7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDsgfVxuICAgIC5idXR0b25zLmlzLXJpZ2h0Om5vdCguaGFzLWFkZG9ucykgLmJ1dHRvbjpub3QoLmlzLWZ1bGx3aWR0aCkge1xuICAgICAgbWFyZ2luLWxlZnQ6IDAuMjVyZW07XG4gICAgICBtYXJnaW4tcmlnaHQ6IDAuMjVyZW07IH1cblxuLmNvbnRhaW5lciB7XG4gIGZsZXgtZ3JvdzogMTtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6IGF1dG87IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgLmNvbnRhaW5lciB7XG4gICAgICBtYXgtd2lkdGg6IDk2MHB4OyB9XG4gICAgICAuY29udGFpbmVyLmlzLWZsdWlkIHtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDMycHg7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMzJweDtcbiAgICAgICAgbWF4LXdpZHRoOiBub25lOyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTIxNXB4KSB7XG4gICAgLmNvbnRhaW5lci5pcy13aWRlc2NyZWVuIHtcbiAgICAgIG1heC13aWR0aDogMTE1MnB4OyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTQwN3B4KSB7XG4gICAgLmNvbnRhaW5lci5pcy1mdWxsaGQge1xuICAgICAgbWF4LXdpZHRoOiAxMzQ0cHg7IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMjE2cHgpIHtcbiAgICAuY29udGFpbmVyIHtcbiAgICAgIG1heC13aWR0aDogMTE1MnB4OyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTQwOHB4KSB7XG4gICAgLmNvbnRhaW5lciB7XG4gICAgICBtYXgtd2lkdGg6IDEzNDRweDsgfSB9XG5cbi5jb250ZW50IGxpICsgbGkge1xuICBtYXJnaW4tdG9wOiAwLjI1ZW07IH1cblxuLmNvbnRlbnQgcDpub3QoOmxhc3QtY2hpbGQpLFxuLmNvbnRlbnQgZGw6bm90KDpsYXN0LWNoaWxkKSxcbi5jb250ZW50IG9sOm5vdCg6bGFzdC1jaGlsZCksXG4uY29udGVudCB1bDpub3QoOmxhc3QtY2hpbGQpLFxuLmNvbnRlbnQgYmxvY2txdW90ZTpub3QoOmxhc3QtY2hpbGQpLFxuLmNvbnRlbnQgcHJlOm5vdCg6bGFzdC1jaGlsZCksXG4uY29udGVudCB0YWJsZTpub3QoOmxhc3QtY2hpbGQpIHtcbiAgbWFyZ2luLWJvdHRvbTogMWVtOyB9XG5cbi5jb250ZW50IGgxLFxuLmNvbnRlbnQgaDIsXG4uY29udGVudCBoMyxcbi5jb250ZW50IGg0LFxuLmNvbnRlbnQgaDUsXG4uY29udGVudCBoNiB7XG4gIGNvbG9yOiAjMzYzNjM2O1xuICBmb250LXdlaWdodDogNjAwO1xuICBsaW5lLWhlaWdodDogMS4xMjU7IH1cblxuLmNvbnRlbnQgaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luLWJvdHRvbTogMC41ZW07IH1cbiAgLmNvbnRlbnQgaDE6bm90KDpmaXJzdC1jaGlsZCkge1xuICAgIG1hcmdpbi10b3A6IDFlbTsgfVxuXG4uY29udGVudCBoMiB7XG4gIGZvbnQtc2l6ZTogMS43NWVtO1xuICBtYXJnaW4tYm90dG9tOiAwLjU3MTRlbTsgfVxuICAuY29udGVudCBoMjpub3QoOmZpcnN0LWNoaWxkKSB7XG4gICAgbWFyZ2luLXRvcDogMS4xNDI4ZW07IH1cblxuLmNvbnRlbnQgaDMge1xuICBmb250LXNpemU6IDEuNWVtO1xuICBtYXJnaW4tYm90dG9tOiAwLjY2NjZlbTsgfVxuICAuY29udGVudCBoMzpub3QoOmZpcnN0LWNoaWxkKSB7XG4gICAgbWFyZ2luLXRvcDogMS4zMzMzZW07IH1cblxuLmNvbnRlbnQgaDQge1xuICBmb250LXNpemU6IDEuMjVlbTtcbiAgbWFyZ2luLWJvdHRvbTogMC44ZW07IH1cblxuLmNvbnRlbnQgaDUge1xuICBmb250LXNpemU6IDEuMTI1ZW07XG4gIG1hcmdpbi1ib3R0b206IDAuODg4OGVtOyB9XG5cbi5jb250ZW50IGg2IHtcbiAgZm9udC1zaXplOiAxZW07XG4gIG1hcmdpbi1ib3R0b206IDFlbTsgfVxuXG4uY29udGVudCBibG9ja3F1b3RlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGVzbW9rZTtcbiAgYm9yZGVyLWxlZnQ6IDVweCBzb2xpZCAjZGJkYmRiO1xuICBwYWRkaW5nOiAxLjI1ZW0gMS41ZW07IH1cblxuLmNvbnRlbnQgb2wge1xuICBsaXN0LXN0eWxlLXBvc2l0aW9uOiBvdXRzaWRlO1xuICBtYXJnaW4tbGVmdDogMmVtO1xuICBtYXJnaW4tdG9wOiAxZW07IH1cbiAgLmNvbnRlbnQgb2w6bm90KFt0eXBlXSkge1xuICAgIGxpc3Qtc3R5bGUtdHlwZTogZGVjaW1hbDsgfVxuICAgIC5jb250ZW50IG9sOm5vdChbdHlwZV0pLmlzLWxvd2VyLWFscGhhIHtcbiAgICAgIGxpc3Qtc3R5bGUtdHlwZTogbG93ZXItYWxwaGE7IH1cbiAgICAuY29udGVudCBvbDpub3QoW3R5cGVdKS5pcy1sb3dlci1yb21hbiB7XG4gICAgICBsaXN0LXN0eWxlLXR5cGU6IGxvd2VyLXJvbWFuOyB9XG4gICAgLmNvbnRlbnQgb2w6bm90KFt0eXBlXSkuaXMtdXBwZXItYWxwaGEge1xuICAgICAgbGlzdC1zdHlsZS10eXBlOiB1cHBlci1hbHBoYTsgfVxuICAgIC5jb250ZW50IG9sOm5vdChbdHlwZV0pLmlzLXVwcGVyLXJvbWFuIHtcbiAgICAgIGxpc3Qtc3R5bGUtdHlwZTogdXBwZXItcm9tYW47IH1cblxuLmNvbnRlbnQgdWwge1xuICBsaXN0LXN0eWxlOiBkaXNjIG91dHNpZGU7XG4gIG1hcmdpbi1sZWZ0OiAyZW07XG4gIG1hcmdpbi10b3A6IDFlbTsgfVxuICAuY29udGVudCB1bCB1bCB7XG4gICAgbGlzdC1zdHlsZS10eXBlOiBjaXJjbGU7XG4gICAgbWFyZ2luLXRvcDogMC41ZW07IH1cbiAgICAuY29udGVudCB1bCB1bCB1bCB7XG4gICAgICBsaXN0LXN0eWxlLXR5cGU6IHNxdWFyZTsgfVxuXG4uY29udGVudCBkZCB7XG4gIG1hcmdpbi1sZWZ0OiAyZW07IH1cblxuLmNvbnRlbnQgZmlndXJlIHtcbiAgbWFyZ2luLWxlZnQ6IDJlbTtcbiAgbWFyZ2luLXJpZ2h0OiAyZW07XG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICAuY29udGVudCBmaWd1cmU6bm90KDpmaXJzdC1jaGlsZCkge1xuICAgIG1hcmdpbi10b3A6IDJlbTsgfVxuICAuY29udGVudCBmaWd1cmU6bm90KDpsYXN0LWNoaWxkKSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMmVtOyB9XG4gIC5jb250ZW50IGZpZ3VyZSBpbWcge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuICAuY29udGVudCBmaWd1cmUgZmlnY2FwdGlvbiB7XG4gICAgZm9udC1zdHlsZTogaXRhbGljOyB9XG5cbi5jb250ZW50IHByZSB7XG4gIC13ZWJraXQtb3ZlcmZsb3ctc2Nyb2xsaW5nOiB0b3VjaDtcbiAgb3ZlcmZsb3cteDogYXV0bztcbiAgcGFkZGluZzogMS4yNWVtIDEuNWVtO1xuICB3aGl0ZS1zcGFjZTogcHJlO1xuICB3b3JkLXdyYXA6IG5vcm1hbDsgfVxuXG4uY29udGVudCBzdXAsXG4uY29udGVudCBzdWIge1xuICBmb250LXNpemU6IDc1JTsgfVxuXG4uY29udGVudCB0YWJsZSB7XG4gIHdpZHRoOiAxMDAlOyB9XG4gIC5jb250ZW50IHRhYmxlIHRkLFxuICAuY29udGVudCB0YWJsZSB0aCB7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2RiZGJkYjtcbiAgICBib3JkZXItd2lkdGg6IDAgMCAxcHg7XG4gICAgcGFkZGluZzogMC41ZW0gMC43NWVtO1xuICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7IH1cbiAgLmNvbnRlbnQgdGFibGUgdGgge1xuICAgIGNvbG9yOiAjMzYzNjM2OyB9XG4gICAgLmNvbnRlbnQgdGFibGUgdGg6bm90KFthbGlnbl0pIHtcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7IH1cbiAgLmNvbnRlbnQgdGFibGUgdGhlYWQgdGQsXG4gIC5jb250ZW50IHRhYmxlIHRoZWFkIHRoIHtcbiAgICBib3JkZXItd2lkdGg6IDAgMCAycHg7XG4gICAgY29sb3I6ICMzNjM2MzY7IH1cbiAgLmNvbnRlbnQgdGFibGUgdGZvb3QgdGQsXG4gIC5jb250ZW50IHRhYmxlIHRmb290IHRoIHtcbiAgICBib3JkZXItd2lkdGg6IDJweCAwIDA7XG4gICAgY29sb3I6ICMzNjM2MzY7IH1cbiAgLmNvbnRlbnQgdGFibGUgdGJvZHkgdHI6bGFzdC1jaGlsZCB0ZCxcbiAgLmNvbnRlbnQgdGFibGUgdGJvZHkgdHI6bGFzdC1jaGlsZCB0aCB7XG4gICAgYm9yZGVyLWJvdHRvbS13aWR0aDogMDsgfVxuXG4uY29udGVudCAudGFicyBsaSArIGxpIHtcbiAgbWFyZ2luLXRvcDogMDsgfVxuXG4uY29udGVudC5pcy1zbWFsbCB7XG4gIGZvbnQtc2l6ZTogMC43NXJlbTsgfVxuXG4uY29udGVudC5pcy1tZWRpdW0ge1xuICBmb250LXNpemU6IDEuMjVyZW07IH1cblxuLmNvbnRlbnQuaXMtbGFyZ2Uge1xuICBmb250LXNpemU6IDEuNXJlbTsgfVxuXG4uaWNvbiB7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGRpc3BsYXk6IGlubGluZS1mbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgaGVpZ2h0OiAxLjVyZW07XG4gIHdpZHRoOiAxLjVyZW07IH1cbiAgLmljb24uaXMtc21hbGwge1xuICAgIGhlaWdodDogMXJlbTtcbiAgICB3aWR0aDogMXJlbTsgfVxuICAuaWNvbi5pcy1tZWRpdW0ge1xuICAgIGhlaWdodDogMnJlbTtcbiAgICB3aWR0aDogMnJlbTsgfVxuICAuaWNvbi5pcy1sYXJnZSB7XG4gICAgaGVpZ2h0OiAzcmVtO1xuICAgIHdpZHRoOiAzcmVtOyB9XG5cbi5pbWFnZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgLmltYWdlIGltZyB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIHdpZHRoOiAxMDAlOyB9XG4gICAgLmltYWdlIGltZy5pcy1yb3VuZGVkIHtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDI5MDQ4NnB4OyB9XG4gIC5pbWFnZS5pcy1zcXVhcmUgaW1nLFxuICAuaW1hZ2UuaXMtc3F1YXJlIC5oYXMtcmF0aW8sIC5pbWFnZS5pcy0xYnkxIGltZyxcbiAgLmltYWdlLmlzLTFieTEgLmhhcy1yYXRpbywgLmltYWdlLmlzLTVieTQgaW1nLFxuICAuaW1hZ2UuaXMtNWJ5NCAuaGFzLXJhdGlvLCAuaW1hZ2UuaXMtNGJ5MyBpbWcsXG4gIC5pbWFnZS5pcy00YnkzIC5oYXMtcmF0aW8sIC5pbWFnZS5pcy0zYnkyIGltZyxcbiAgLmltYWdlLmlzLTNieTIgLmhhcy1yYXRpbywgLmltYWdlLmlzLTVieTMgaW1nLFxuICAuaW1hZ2UuaXMtNWJ5MyAuaGFzLXJhdGlvLCAuaW1hZ2UuaXMtMTZieTkgaW1nLFxuICAuaW1hZ2UuaXMtMTZieTkgLmhhcy1yYXRpbywgLmltYWdlLmlzLTJieTEgaW1nLFxuICAuaW1hZ2UuaXMtMmJ5MSAuaGFzLXJhdGlvLCAuaW1hZ2UuaXMtM2J5MSBpbWcsXG4gIC5pbWFnZS5pcy0zYnkxIC5oYXMtcmF0aW8sIC5pbWFnZS5pcy00Ynk1IGltZyxcbiAgLmltYWdlLmlzLTRieTUgLmhhcy1yYXRpbywgLmltYWdlLmlzLTNieTQgaW1nLFxuICAuaW1hZ2UuaXMtM2J5NCAuaGFzLXJhdGlvLCAuaW1hZ2UuaXMtMmJ5MyBpbWcsXG4gIC5pbWFnZS5pcy0yYnkzIC5oYXMtcmF0aW8sIC5pbWFnZS5pcy0zYnk1IGltZyxcbiAgLmltYWdlLmlzLTNieTUgLmhhcy1yYXRpbywgLmltYWdlLmlzLTlieTE2IGltZyxcbiAgLmltYWdlLmlzLTlieTE2IC5oYXMtcmF0aW8sIC5pbWFnZS5pcy0xYnkyIGltZyxcbiAgLmltYWdlLmlzLTFieTIgLmhhcy1yYXRpbywgLmltYWdlLmlzLTFieTMgaW1nLFxuICAuaW1hZ2UuaXMtMWJ5MyAuaGFzLXJhdGlvIHtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgd2lkdGg6IDEwMCU7IH1cbiAgLmltYWdlLmlzLXNxdWFyZSwgLmltYWdlLmlzLTFieTEge1xuICAgIHBhZGRpbmctdG9wOiAxMDAlOyB9XG4gIC5pbWFnZS5pcy01Ynk0IHtcbiAgICBwYWRkaW5nLXRvcDogODAlOyB9XG4gIC5pbWFnZS5pcy00YnkzIHtcbiAgICBwYWRkaW5nLXRvcDogNzUlOyB9XG4gIC5pbWFnZS5pcy0zYnkyIHtcbiAgICBwYWRkaW5nLXRvcDogNjYuNjY2NiU7IH1cbiAgLmltYWdlLmlzLTVieTMge1xuICAgIHBhZGRpbmctdG9wOiA2MCU7IH1cbiAgLmltYWdlLmlzLTE2Ynk5IHtcbiAgICBwYWRkaW5nLXRvcDogNTYuMjUlOyB9XG4gIC5pbWFnZS5pcy0yYnkxIHtcbiAgICBwYWRkaW5nLXRvcDogNTAlOyB9XG4gIC5pbWFnZS5pcy0zYnkxIHtcbiAgICBwYWRkaW5nLXRvcDogMzMuMzMzMyU7IH1cbiAgLmltYWdlLmlzLTRieTUge1xuICAgIHBhZGRpbmctdG9wOiAxMjUlOyB9XG4gIC5pbWFnZS5pcy0zYnk0IHtcbiAgICBwYWRkaW5nLXRvcDogMTMzLjMzMzMlOyB9XG4gIC5pbWFnZS5pcy0yYnkzIHtcbiAgICBwYWRkaW5nLXRvcDogMTUwJTsgfVxuICAuaW1hZ2UuaXMtM2J5NSB7XG4gICAgcGFkZGluZy10b3A6IDE2Ni42NjY2JTsgfVxuICAuaW1hZ2UuaXMtOWJ5MTYge1xuICAgIHBhZGRpbmctdG9wOiAxNzcuNzc3NyU7IH1cbiAgLmltYWdlLmlzLTFieTIge1xuICAgIHBhZGRpbmctdG9wOiAyMDAlOyB9XG4gIC5pbWFnZS5pcy0xYnkzIHtcbiAgICBwYWRkaW5nLXRvcDogMzAwJTsgfVxuICAuaW1hZ2UuaXMtMTZ4MTYge1xuICAgIGhlaWdodDogMTZweDtcbiAgICB3aWR0aDogMTZweDsgfVxuICAuaW1hZ2UuaXMtMjR4MjQge1xuICAgIGhlaWdodDogMjRweDtcbiAgICB3aWR0aDogMjRweDsgfVxuICAuaW1hZ2UuaXMtMzJ4MzIge1xuICAgIGhlaWdodDogMzJweDtcbiAgICB3aWR0aDogMzJweDsgfVxuICAuaW1hZ2UuaXMtNDh4NDgge1xuICAgIGhlaWdodDogNDhweDtcbiAgICB3aWR0aDogNDhweDsgfVxuICAuaW1hZ2UuaXMtNjR4NjQge1xuICAgIGhlaWdodDogNjRweDtcbiAgICB3aWR0aDogNjRweDsgfVxuICAuaW1hZ2UuaXMtOTZ4OTYge1xuICAgIGhlaWdodDogOTZweDtcbiAgICB3aWR0aDogOTZweDsgfVxuICAuaW1hZ2UuaXMtMTI4eDEyOCB7XG4gICAgaGVpZ2h0OiAxMjhweDtcbiAgICB3aWR0aDogMTI4cHg7IH1cblxuLm5vdGlmaWNhdGlvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlc21va2U7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgcGFkZGluZzogMS4yNXJlbSAyLjVyZW0gMS4yNXJlbSAxLjVyZW07XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAubm90aWZpY2F0aW9uIGE6bm90KC5idXR0b24pOm5vdCguZHJvcGRvd24taXRlbSkge1xuICAgIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IH1cbiAgLm5vdGlmaWNhdGlvbiBzdHJvbmcge1xuICAgIGNvbG9yOiBjdXJyZW50Q29sb3I7IH1cbiAgLm5vdGlmaWNhdGlvbiBjb2RlLFxuICAubm90aWZpY2F0aW9uIHByZSB7XG4gICAgYmFja2dyb3VuZDogd2hpdGU7IH1cbiAgLm5vdGlmaWNhdGlvbiBwcmUgY29kZSB7XG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7IH1cbiAgLm5vdGlmaWNhdGlvbiA+IC5kZWxldGUge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICByaWdodDogMC41cmVtO1xuICAgIHRvcDogMC41cmVtOyB9XG4gIC5ub3RpZmljYXRpb24gLnRpdGxlLFxuICAubm90aWZpY2F0aW9uIC5zdWJ0aXRsZSxcbiAgLm5vdGlmaWNhdGlvbiAuY29udGVudCB7XG4gICAgY29sb3I6IGN1cnJlbnRDb2xvcjsgfVxuICAubm90aWZpY2F0aW9uLmlzLXdoaXRlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICBjb2xvcjogIzBhMGEwYTsgfVxuICAubm90aWZpY2F0aW9uLmlzLWJsYWNrIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMGEwYTBhO1xuICAgIGNvbG9yOiB3aGl0ZTsgfVxuICAubm90aWZpY2F0aW9uLmlzLWxpZ2h0IHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZXNtb2tlO1xuICAgIGNvbG9yOiAjMzYzNjM2OyB9XG4gIC5ub3RpZmljYXRpb24uaXMtZGFyayB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzM2MzYzNjtcbiAgICBjb2xvcjogd2hpdGVzbW9rZTsgfVxuICAubm90aWZpY2F0aW9uLmlzLXByaW1hcnkge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMGQxYjI7XG4gICAgY29sb3I6ICNmZmY7IH1cbiAgLm5vdGlmaWNhdGlvbi5pcy1saW5rIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzI3M2RjO1xuICAgIGNvbG9yOiAjZmZmOyB9XG4gIC5ub3RpZmljYXRpb24uaXMtaW5mbyB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzIwOWNlZTtcbiAgICBjb2xvcjogI2ZmZjsgfVxuICAubm90aWZpY2F0aW9uLmlzLXN1Y2Nlc3Mge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMyM2QxNjA7XG4gICAgY29sb3I6ICNmZmY7IH1cbiAgLm5vdGlmaWNhdGlvbi5pcy13YXJuaW5nIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZkZDU3O1xuICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNyk7IH1cbiAgLm5vdGlmaWNhdGlvbi5pcy1kYW5nZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZjM4NjA7XG4gICAgY29sb3I6ICNmZmY7IH1cblxuLnByb2dyZXNzIHtcbiAgLW1vei1hcHBlYXJhbmNlOiBub25lO1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG4gIGJvcmRlcjogbm9uZTtcbiAgYm9yZGVyLXJhZGl1czogMjkwNDg2cHg7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBoZWlnaHQ6IDFyZW07XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHBhZGRpbmc6IDA7XG4gIHdpZHRoOiAxMDAlOyB9XG4gIC5wcm9ncmVzczo6LXdlYmtpdC1wcm9ncmVzcy1iYXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNkYmRiZGI7IH1cbiAgLnByb2dyZXNzOjotd2Via2l0LXByb2dyZXNzLXZhbHVlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNGE0YTRhOyB9XG4gIC5wcm9ncmVzczo6LW1vei1wcm9ncmVzcy1iYXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM0YTRhNGE7IH1cbiAgLnByb2dyZXNzOjotbXMtZmlsbCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzRhNGE0YTtcbiAgICBib3JkZXI6IG5vbmU7IH1cbiAgLnByb2dyZXNzLmlzLXdoaXRlOjotd2Via2l0LXByb2dyZXNzLXZhbHVlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsgfVxuICAucHJvZ3Jlc3MuaXMtd2hpdGU6Oi1tb3otcHJvZ3Jlc3MtYmFyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsgfVxuICAucHJvZ3Jlc3MuaXMtd2hpdGU6Oi1tcy1maWxsIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsgfVxuICAucHJvZ3Jlc3MuaXMtd2hpdGU6aW5kZXRlcm1pbmF0ZSB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCB3aGl0ZSAzMCUsICNkYmRiZGIgMzAlKTsgfVxuICAucHJvZ3Jlc3MuaXMtYmxhY2s6Oi13ZWJraXQtcHJvZ3Jlc3MtdmFsdWUge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMwYTBhMGE7IH1cbiAgLnByb2dyZXNzLmlzLWJsYWNrOjotbW96LXByb2dyZXNzLWJhciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzBhMGEwYTsgfVxuICAucHJvZ3Jlc3MuaXMtYmxhY2s6Oi1tcy1maWxsIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMGEwYTBhOyB9XG4gIC5wcm9ncmVzcy5pcy1ibGFjazppbmRldGVybWluYXRlIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsICMwYTBhMGEgMzAlLCAjZGJkYmRiIDMwJSk7IH1cbiAgLnByb2dyZXNzLmlzLWxpZ2h0Ojotd2Via2l0LXByb2dyZXNzLXZhbHVlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZXNtb2tlOyB9XG4gIC5wcm9ncmVzcy5pcy1saWdodDo6LW1vei1wcm9ncmVzcy1iYXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlc21va2U7IH1cbiAgLnByb2dyZXNzLmlzLWxpZ2h0OjotbXMtZmlsbCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGVzbW9rZTsgfVxuICAucHJvZ3Jlc3MuaXMtbGlnaHQ6aW5kZXRlcm1pbmF0ZSB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCB3aGl0ZXNtb2tlIDMwJSwgI2RiZGJkYiAzMCUpOyB9XG4gIC5wcm9ncmVzcy5pcy1kYXJrOjotd2Via2l0LXByb2dyZXNzLXZhbHVlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzYzNjM2OyB9XG4gIC5wcm9ncmVzcy5pcy1kYXJrOjotbW96LXByb2dyZXNzLWJhciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzM2MzYzNjsgfVxuICAucHJvZ3Jlc3MuaXMtZGFyazo6LW1zLWZpbGwge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMzNjM2MzY7IH1cbiAgLnByb2dyZXNzLmlzLWRhcms6aW5kZXRlcm1pbmF0ZSB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCAjMzYzNjM2IDMwJSwgI2RiZGJkYiAzMCUpOyB9XG4gIC5wcm9ncmVzcy5pcy1wcmltYXJ5Ojotd2Via2l0LXByb2dyZXNzLXZhbHVlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDBkMWIyOyB9XG4gIC5wcm9ncmVzcy5pcy1wcmltYXJ5OjotbW96LXByb2dyZXNzLWJhciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwZDFiMjsgfVxuICAucHJvZ3Jlc3MuaXMtcHJpbWFyeTo6LW1zLWZpbGwge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMGQxYjI7IH1cbiAgLnByb2dyZXNzLmlzLXByaW1hcnk6aW5kZXRlcm1pbmF0ZSB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCAjMDBkMWIyIDMwJSwgI2RiZGJkYiAzMCUpOyB9XG4gIC5wcm9ncmVzcy5pcy1saW5rOjotd2Via2l0LXByb2dyZXNzLXZhbHVlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzI3M2RjOyB9XG4gIC5wcm9ncmVzcy5pcy1saW5rOjotbW96LXByb2dyZXNzLWJhciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzMyNzNkYzsgfVxuICAucHJvZ3Jlc3MuaXMtbGluazo6LW1zLWZpbGwge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMzMjczZGM7IH1cbiAgLnByb2dyZXNzLmlzLWxpbms6aW5kZXRlcm1pbmF0ZSB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCAjMzI3M2RjIDMwJSwgI2RiZGJkYiAzMCUpOyB9XG4gIC5wcm9ncmVzcy5pcy1pbmZvOjotd2Via2l0LXByb2dyZXNzLXZhbHVlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjA5Y2VlOyB9XG4gIC5wcm9ncmVzcy5pcy1pbmZvOjotbW96LXByb2dyZXNzLWJhciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzIwOWNlZTsgfVxuICAucHJvZ3Jlc3MuaXMtaW5mbzo6LW1zLWZpbGwge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMyMDljZWU7IH1cbiAgLnByb2dyZXNzLmlzLWluZm86aW5kZXRlcm1pbmF0ZSB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCAjMjA5Y2VlIDMwJSwgI2RiZGJkYiAzMCUpOyB9XG4gIC5wcm9ncmVzcy5pcy1zdWNjZXNzOjotd2Via2l0LXByb2dyZXNzLXZhbHVlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjNkMTYwOyB9XG4gIC5wcm9ncmVzcy5pcy1zdWNjZXNzOjotbW96LXByb2dyZXNzLWJhciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzIzZDE2MDsgfVxuICAucHJvZ3Jlc3MuaXMtc3VjY2Vzczo6LW1zLWZpbGwge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMyM2QxNjA7IH1cbiAgLnByb2dyZXNzLmlzLXN1Y2Nlc3M6aW5kZXRlcm1pbmF0ZSB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCAjMjNkMTYwIDMwJSwgI2RiZGJkYiAzMCUpOyB9XG4gIC5wcm9ncmVzcy5pcy13YXJuaW5nOjotd2Via2l0LXByb2dyZXNzLXZhbHVlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZkZDU3OyB9XG4gIC5wcm9ncmVzcy5pcy13YXJuaW5nOjotbW96LXByb2dyZXNzLWJhciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZGQ1NzsgfVxuICAucHJvZ3Jlc3MuaXMtd2FybmluZzo6LW1zLWZpbGwge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmRkNTc7IH1cbiAgLnByb2dyZXNzLmlzLXdhcm5pbmc6aW5kZXRlcm1pbmF0ZSB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCAjZmZkZDU3IDMwJSwgI2RiZGJkYiAzMCUpOyB9XG4gIC5wcm9ncmVzcy5pcy1kYW5nZXI6Oi13ZWJraXQtcHJvZ3Jlc3MtdmFsdWUge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZjM4NjA7IH1cbiAgLnByb2dyZXNzLmlzLWRhbmdlcjo6LW1vei1wcm9ncmVzcy1iYXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZjM4NjA7IH1cbiAgLnByb2dyZXNzLmlzLWRhbmdlcjo6LW1zLWZpbGwge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZjM4NjA7IH1cbiAgLnByb2dyZXNzLmlzLWRhbmdlcjppbmRldGVybWluYXRlIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsICNmZjM4NjAgMzAlLCAjZGJkYmRiIDMwJSk7IH1cbiAgLnByb2dyZXNzOmluZGV0ZXJtaW5hdGUge1xuICAgIGFuaW1hdGlvbi1kdXJhdGlvbjogMS41cztcbiAgICBhbmltYXRpb24taXRlcmF0aW9uLWNvdW50OiBpbmZpbml0ZTtcbiAgICBhbmltYXRpb24tbmFtZTogbW92ZUluZGV0ZXJtaW5hdGU7XG4gICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogbGluZWFyO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNkYmRiZGI7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCAjNGE0YTRhIDMwJSwgI2RiZGJkYiAzMCUpO1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IHRvcCBsZWZ0O1xuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgYmFja2dyb3VuZC1zaXplOiAxNTAlIDE1MCU7IH1cbiAgICAucHJvZ3Jlc3M6aW5kZXRlcm1pbmF0ZTo6LXdlYmtpdC1wcm9ncmVzcy1iYXIge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IH1cbiAgICAucHJvZ3Jlc3M6aW5kZXRlcm1pbmF0ZTo6LW1vei1wcm9ncmVzcy1iYXIge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IH1cbiAgLnByb2dyZXNzLmlzLXNtYWxsIHtcbiAgICBoZWlnaHQ6IDAuNzVyZW07IH1cbiAgLnByb2dyZXNzLmlzLW1lZGl1bSB7XG4gICAgaGVpZ2h0OiAxLjI1cmVtOyB9XG4gIC5wcm9ncmVzcy5pcy1sYXJnZSB7XG4gICAgaGVpZ2h0OiAxLjVyZW07IH1cblxuQGtleWZyYW1lcyBtb3ZlSW5kZXRlcm1pbmF0ZSB7XG4gIGZyb20ge1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IDIwMCUgMDsgfVxuICB0byB7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTIwMCUgMDsgfSB9XG5cbi50YWJsZSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICBjb2xvcjogIzM2MzYzNjsgfVxuICAudGFibGUgdGQsXG4gIC50YWJsZSB0aCB7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2RiZGJkYjtcbiAgICBib3JkZXItd2lkdGg6IDAgMCAxcHg7XG4gICAgcGFkZGluZzogMC41ZW0gMC43NWVtO1xuICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7IH1cbiAgICAudGFibGUgdGQuaXMtd2hpdGUsXG4gICAgLnRhYmxlIHRoLmlzLXdoaXRlIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICAgICAgYm9yZGVyLWNvbG9yOiB3aGl0ZTtcbiAgICAgIGNvbG9yOiAjMGEwYTBhOyB9XG4gICAgLnRhYmxlIHRkLmlzLWJsYWNrLFxuICAgIC50YWJsZSB0aC5pcy1ibGFjayB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMGEwYTBhO1xuICAgICAgYm9yZGVyLWNvbG9yOiAjMGEwYTBhO1xuICAgICAgY29sb3I6IHdoaXRlOyB9XG4gICAgLnRhYmxlIHRkLmlzLWxpZ2h0LFxuICAgIC50YWJsZSB0aC5pcy1saWdodCB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZXNtb2tlO1xuICAgICAgYm9yZGVyLWNvbG9yOiB3aGl0ZXNtb2tlO1xuICAgICAgY29sb3I6ICMzNjM2MzY7IH1cbiAgICAudGFibGUgdGQuaXMtZGFyayxcbiAgICAudGFibGUgdGguaXMtZGFyayB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzYzNjM2O1xuICAgICAgYm9yZGVyLWNvbG9yOiAjMzYzNjM2O1xuICAgICAgY29sb3I6IHdoaXRlc21va2U7IH1cbiAgICAudGFibGUgdGQuaXMtcHJpbWFyeSxcbiAgICAudGFibGUgdGguaXMtcHJpbWFyeSB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDBkMWIyO1xuICAgICAgYm9yZGVyLWNvbG9yOiAjMDBkMWIyO1xuICAgICAgY29sb3I6ICNmZmY7IH1cbiAgICAudGFibGUgdGQuaXMtbGluayxcbiAgICAudGFibGUgdGguaXMtbGluayB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzI3M2RjO1xuICAgICAgYm9yZGVyLWNvbG9yOiAjMzI3M2RjO1xuICAgICAgY29sb3I6ICNmZmY7IH1cbiAgICAudGFibGUgdGQuaXMtaW5mbyxcbiAgICAudGFibGUgdGguaXMtaW5mbyB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjA5Y2VlO1xuICAgICAgYm9yZGVyLWNvbG9yOiAjMjA5Y2VlO1xuICAgICAgY29sb3I6ICNmZmY7IH1cbiAgICAudGFibGUgdGQuaXMtc3VjY2VzcyxcbiAgICAudGFibGUgdGguaXMtc3VjY2VzcyB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjNkMTYwO1xuICAgICAgYm9yZGVyLWNvbG9yOiAjMjNkMTYwO1xuICAgICAgY29sb3I6ICNmZmY7IH1cbiAgICAudGFibGUgdGQuaXMtd2FybmluZyxcbiAgICAudGFibGUgdGguaXMtd2FybmluZyB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZkZDU3O1xuICAgICAgYm9yZGVyLWNvbG9yOiAjZmZkZDU3O1xuICAgICAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC43KTsgfVxuICAgIC50YWJsZSB0ZC5pcy1kYW5nZXIsXG4gICAgLnRhYmxlIHRoLmlzLWRhbmdlciB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmYzODYwO1xuICAgICAgYm9yZGVyLWNvbG9yOiAjZmYzODYwO1xuICAgICAgY29sb3I6ICNmZmY7IH1cbiAgICAudGFibGUgdGQuaXMtbmFycm93LFxuICAgIC50YWJsZSB0aC5pcy1uYXJyb3cge1xuICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICAgIHdpZHRoOiAxJTsgfVxuICAgIC50YWJsZSB0ZC5pcy1zZWxlY3RlZCxcbiAgICAudGFibGUgdGguaXMtc2VsZWN0ZWQge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzAwZDFiMjtcbiAgICAgIGNvbG9yOiAjZmZmOyB9XG4gICAgICAudGFibGUgdGQuaXMtc2VsZWN0ZWQgYSxcbiAgICAgIC50YWJsZSB0ZC5pcy1zZWxlY3RlZCBzdHJvbmcsXG4gICAgICAudGFibGUgdGguaXMtc2VsZWN0ZWQgYSxcbiAgICAgIC50YWJsZSB0aC5pcy1zZWxlY3RlZCBzdHJvbmcge1xuICAgICAgICBjb2xvcjogY3VycmVudENvbG9yOyB9XG4gIC50YWJsZSB0aCB7XG4gICAgY29sb3I6ICMzNjM2MzY7IH1cbiAgICAudGFibGUgdGg6bm90KFthbGlnbl0pIHtcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7IH1cbiAgLnRhYmxlIHRyLmlzLXNlbGVjdGVkIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDBkMWIyO1xuICAgIGNvbG9yOiAjZmZmOyB9XG4gICAgLnRhYmxlIHRyLmlzLXNlbGVjdGVkIGEsXG4gICAgLnRhYmxlIHRyLmlzLXNlbGVjdGVkIHN0cm9uZyB7XG4gICAgICBjb2xvcjogY3VycmVudENvbG9yOyB9XG4gICAgLnRhYmxlIHRyLmlzLXNlbGVjdGVkIHRkLFxuICAgIC50YWJsZSB0ci5pcy1zZWxlY3RlZCB0aCB7XG4gICAgICBib3JkZXItY29sb3I6ICNmZmY7XG4gICAgICBjb2xvcjogY3VycmVudENvbG9yOyB9XG4gIC50YWJsZSB0aGVhZCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IH1cbiAgICAudGFibGUgdGhlYWQgdGQsXG4gICAgLnRhYmxlIHRoZWFkIHRoIHtcbiAgICAgIGJvcmRlci13aWR0aDogMCAwIDJweDtcbiAgICAgIGNvbG9yOiAjMzYzNjM2OyB9XG4gIC50YWJsZSB0Zm9vdCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IH1cbiAgICAudGFibGUgdGZvb3QgdGQsXG4gICAgLnRhYmxlIHRmb290IHRoIHtcbiAgICAgIGJvcmRlci13aWR0aDogMnB4IDAgMDtcbiAgICAgIGNvbG9yOiAjMzYzNjM2OyB9XG4gIC50YWJsZSB0Ym9keSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IH1cbiAgICAudGFibGUgdGJvZHkgdHI6bGFzdC1jaGlsZCB0ZCxcbiAgICAudGFibGUgdGJvZHkgdHI6bGFzdC1jaGlsZCB0aCB7XG4gICAgICBib3JkZXItYm90dG9tLXdpZHRoOiAwOyB9XG4gIC50YWJsZS5pcy1ib3JkZXJlZCB0ZCxcbiAgLnRhYmxlLmlzLWJvcmRlcmVkIHRoIHtcbiAgICBib3JkZXItd2lkdGg6IDFweDsgfVxuICAudGFibGUuaXMtYm9yZGVyZWQgdHI6bGFzdC1jaGlsZCB0ZCxcbiAgLnRhYmxlLmlzLWJvcmRlcmVkIHRyOmxhc3QtY2hpbGQgdGgge1xuICAgIGJvcmRlci1ib3R0b20td2lkdGg6IDFweDsgfVxuICAudGFibGUuaXMtZnVsbHdpZHRoIHtcbiAgICB3aWR0aDogMTAwJTsgfVxuICAudGFibGUuaXMtaG92ZXJhYmxlIHRib2R5IHRyOm5vdCguaXMtc2VsZWN0ZWQpOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmFmYWZhOyB9XG4gIC50YWJsZS5pcy1ob3ZlcmFibGUuaXMtc3RyaXBlZCB0Ym9keSB0cjpub3QoLmlzLXNlbGVjdGVkKTpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZhZmFmYTsgfVxuICAgIC50YWJsZS5pcy1ob3ZlcmFibGUuaXMtc3RyaXBlZCB0Ym9keSB0cjpub3QoLmlzLXNlbGVjdGVkKTpob3ZlcjpudGgtY2hpbGQoZXZlbikge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGVzbW9rZTsgfVxuICAudGFibGUuaXMtbmFycm93IHRkLFxuICAudGFibGUuaXMtbmFycm93IHRoIHtcbiAgICBwYWRkaW5nOiAwLjI1ZW0gMC41ZW07IH1cbiAgLnRhYmxlLmlzLXN0cmlwZWQgdGJvZHkgdHI6bm90KC5pcy1zZWxlY3RlZCk6bnRoLWNoaWxkKGV2ZW4pIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmFmYWZhOyB9XG5cbi50YWJsZS1jb250YWluZXIge1xuICAtd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzogdG91Y2g7XG4gIG92ZXJmbG93OiBhdXRvO1xuICBvdmVyZmxvdy15OiBoaWRkZW47XG4gIG1heC13aWR0aDogMTAwJTsgfVxuXG4udGFncyB7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0OyB9XG4gIC50YWdzIC50YWcge1xuICAgIG1hcmdpbi1ib3R0b206IDAuNXJlbTsgfVxuICAgIC50YWdzIC50YWc6bm90KDpsYXN0LWNoaWxkKSB7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDAuNXJlbTsgfVxuICAudGFnczpsYXN0LWNoaWxkIHtcbiAgICBtYXJnaW4tYm90dG9tOiAtMC41cmVtOyB9XG4gIC50YWdzOm5vdCg6bGFzdC1jaGlsZCkge1xuICAgIG1hcmdpbi1ib3R0b206IDFyZW07IH1cbiAgLnRhZ3MuYXJlLW1lZGl1bSAudGFnOm5vdCguaXMtbm9ybWFsKTpub3QoLmlzLWxhcmdlKSB7XG4gICAgZm9udC1zaXplOiAxcmVtOyB9XG4gIC50YWdzLmFyZS1sYXJnZSAudGFnOm5vdCguaXMtbm9ybWFsKTpub3QoLmlzLW1lZGl1bSkge1xuICAgIGZvbnQtc2l6ZTogMS4yNXJlbTsgfVxuICAudGFncy5pcy1jZW50ZXJlZCB7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH1cbiAgICAudGFncy5pcy1jZW50ZXJlZCAudGFnIHtcbiAgICAgIG1hcmdpbi1yaWdodDogMC4yNXJlbTtcbiAgICAgIG1hcmdpbi1sZWZ0OiAwLjI1cmVtOyB9XG4gIC50YWdzLmlzLXJpZ2h0IHtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kOyB9XG4gICAgLnRhZ3MuaXMtcmlnaHQgLnRhZzpub3QoOmZpcnN0LWNoaWxkKSB7XG4gICAgICBtYXJnaW4tbGVmdDogMC41cmVtOyB9XG4gICAgLnRhZ3MuaXMtcmlnaHQgLnRhZzpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICAgIG1hcmdpbi1yaWdodDogMDsgfVxuICAudGFncy5oYXMtYWRkb25zIC50YWcge1xuICAgIG1hcmdpbi1yaWdodDogMDsgfVxuICAgIC50YWdzLmhhcy1hZGRvbnMgLnRhZzpub3QoOmZpcnN0LWNoaWxkKSB7XG4gICAgICBtYXJnaW4tbGVmdDogMDtcbiAgICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDA7XG4gICAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAwOyB9XG4gICAgLnRhZ3MuaGFzLWFkZG9ucyAudGFnOm5vdCg6bGFzdC1jaGlsZCkge1xuICAgICAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDA7XG4gICAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMDsgfVxuXG4udGFnOm5vdChib2R5KSB7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlc21va2U7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgY29sb3I6ICM0YTRhNGE7XG4gIGRpc3BsYXk6IGlubGluZS1mbGV4O1xuICBmb250LXNpemU6IDAuNzVyZW07XG4gIGhlaWdodDogMmVtO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgcGFkZGluZy1sZWZ0OiAwLjc1ZW07XG4gIHBhZGRpbmctcmlnaHQ6IDAuNzVlbTtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDsgfVxuICAudGFnOm5vdChib2R5KSAuZGVsZXRlIHtcbiAgICBtYXJnaW4tbGVmdDogMC4yNXJlbTtcbiAgICBtYXJnaW4tcmlnaHQ6IC0wLjM3NXJlbTsgfVxuICAudGFnOm5vdChib2R5KS5pcy13aGl0ZSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgY29sb3I6ICMwYTBhMGE7IH1cbiAgLnRhZzpub3QoYm9keSkuaXMtYmxhY2sge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMwYTBhMGE7XG4gICAgY29sb3I6IHdoaXRlOyB9XG4gIC50YWc6bm90KGJvZHkpLmlzLWxpZ2h0IHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZXNtb2tlO1xuICAgIGNvbG9yOiAjMzYzNjM2OyB9XG4gIC50YWc6bm90KGJvZHkpLmlzLWRhcmsge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMzNjM2MzY7XG4gICAgY29sb3I6IHdoaXRlc21va2U7IH1cbiAgLnRhZzpub3QoYm9keSkuaXMtcHJpbWFyeSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwZDFiMjtcbiAgICBjb2xvcjogI2ZmZjsgfVxuICAudGFnOm5vdChib2R5KS5pcy1saW5rIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzI3M2RjO1xuICAgIGNvbG9yOiAjZmZmOyB9XG4gIC50YWc6bm90KGJvZHkpLmlzLWluZm8ge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMyMDljZWU7XG4gICAgY29sb3I6ICNmZmY7IH1cbiAgLnRhZzpub3QoYm9keSkuaXMtc3VjY2VzcyB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzIzZDE2MDtcbiAgICBjb2xvcjogI2ZmZjsgfVxuICAudGFnOm5vdChib2R5KS5pcy13YXJuaW5nIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZkZDU3O1xuICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNyk7IH1cbiAgLnRhZzpub3QoYm9keSkuaXMtZGFuZ2VyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmYzODYwO1xuICAgIGNvbG9yOiAjZmZmOyB9XG4gIC50YWc6bm90KGJvZHkpLmlzLW5vcm1hbCB7XG4gICAgZm9udC1zaXplOiAwLjc1cmVtOyB9XG4gIC50YWc6bm90KGJvZHkpLmlzLW1lZGl1bSB7XG4gICAgZm9udC1zaXplOiAxcmVtOyB9XG4gIC50YWc6bm90KGJvZHkpLmlzLWxhcmdlIHtcbiAgICBmb250LXNpemU6IDEuMjVyZW07IH1cbiAgLnRhZzpub3QoYm9keSkgLmljb246Zmlyc3QtY2hpbGQ6bm90KDpsYXN0LWNoaWxkKSB7XG4gICAgbWFyZ2luLWxlZnQ6IC0wLjM3NWVtO1xuICAgIG1hcmdpbi1yaWdodDogMC4xODc1ZW07IH1cbiAgLnRhZzpub3QoYm9keSkgLmljb246bGFzdC1jaGlsZDpub3QoOmZpcnN0LWNoaWxkKSB7XG4gICAgbWFyZ2luLWxlZnQ6IDAuMTg3NWVtO1xuICAgIG1hcmdpbi1yaWdodDogLTAuMzc1ZW07IH1cbiAgLnRhZzpub3QoYm9keSkgLmljb246Zmlyc3QtY2hpbGQ6bGFzdC1jaGlsZCB7XG4gICAgbWFyZ2luLWxlZnQ6IC0wLjM3NWVtO1xuICAgIG1hcmdpbi1yaWdodDogLTAuMzc1ZW07IH1cbiAgLnRhZzpub3QoYm9keSkuaXMtZGVsZXRlIHtcbiAgICBtYXJnaW4tbGVmdDogMXB4O1xuICAgIHBhZGRpbmc6IDA7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHdpZHRoOiAyZW07IH1cbiAgICAudGFnOm5vdChib2R5KS5pcy1kZWxldGU6OmJlZm9yZSwgLnRhZzpub3QoYm9keSkuaXMtZGVsZXRlOjphZnRlciB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBsZWZ0OiA1MCU7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IDUwJTtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKSB0cmFuc2xhdGVZKC01MCUpIHJvdGF0ZSg0NWRlZyk7XG4gICAgICB0cmFuc2Zvcm0tb3JpZ2luOiBjZW50ZXIgY2VudGVyOyB9XG4gICAgLnRhZzpub3QoYm9keSkuaXMtZGVsZXRlOjpiZWZvcmUge1xuICAgICAgaGVpZ2h0OiAxcHg7XG4gICAgICB3aWR0aDogNTAlOyB9XG4gICAgLnRhZzpub3QoYm9keSkuaXMtZGVsZXRlOjphZnRlciB7XG4gICAgICBoZWlnaHQ6IDUwJTtcbiAgICAgIHdpZHRoOiAxcHg7IH1cbiAgICAudGFnOm5vdChib2R5KS5pcy1kZWxldGU6aG92ZXIsIC50YWc6bm90KGJvZHkpLmlzLWRlbGV0ZTpmb2N1cyB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZThlOGU4OyB9XG4gICAgLnRhZzpub3QoYm9keSkuaXMtZGVsZXRlOmFjdGl2ZSB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGJkYmRiOyB9XG4gIC50YWc6bm90KGJvZHkpLmlzLXJvdW5kZWQge1xuICAgIGJvcmRlci1yYWRpdXM6IDI5MDQ4NnB4OyB9XG5cbmEudGFnOmhvdmVyIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IH1cblxuLnRpdGxlLFxuLnN1YnRpdGxlIHtcbiAgd29yZC1icmVhazogYnJlYWstd29yZDsgfVxuICAudGl0bGUgZW0sXG4gIC50aXRsZSBzcGFuLFxuICAuc3VidGl0bGUgZW0sXG4gIC5zdWJ0aXRsZSBzcGFuIHtcbiAgICBmb250LXdlaWdodDogaW5oZXJpdDsgfVxuICAudGl0bGUgc3ViLFxuICAuc3VidGl0bGUgc3ViIHtcbiAgICBmb250LXNpemU6IDAuNzVlbTsgfVxuICAudGl0bGUgc3VwLFxuICAuc3VidGl0bGUgc3VwIHtcbiAgICBmb250LXNpemU6IDAuNzVlbTsgfVxuICAudGl0bGUgLnRhZyxcbiAgLnN1YnRpdGxlIC50YWcge1xuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IH1cblxuLnRpdGxlIHtcbiAgY29sb3I6ICMzNjM2MzY7XG4gIGZvbnQtc2l6ZTogMnJlbTtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgbGluZS1oZWlnaHQ6IDEuMTI1OyB9XG4gIC50aXRsZSBzdHJvbmcge1xuICAgIGNvbG9yOiBpbmhlcml0O1xuICAgIGZvbnQtd2VpZ2h0OiBpbmhlcml0OyB9XG4gIC50aXRsZSArIC5oaWdobGlnaHQge1xuICAgIG1hcmdpbi10b3A6IC0wLjc1cmVtOyB9XG4gIC50aXRsZTpub3QoLmlzLXNwYWNlZCkgKyAuc3VidGl0bGUge1xuICAgIG1hcmdpbi10b3A6IC0xLjI1cmVtOyB9XG4gIC50aXRsZS5pcy0xIHtcbiAgICBmb250LXNpemU6IDNyZW07IH1cbiAgLnRpdGxlLmlzLTIge1xuICAgIGZvbnQtc2l6ZTogMi41cmVtOyB9XG4gIC50aXRsZS5pcy0zIHtcbiAgICBmb250LXNpemU6IDJyZW07IH1cbiAgLnRpdGxlLmlzLTQge1xuICAgIGZvbnQtc2l6ZTogMS41cmVtOyB9XG4gIC50aXRsZS5pcy01IHtcbiAgICBmb250LXNpemU6IDEuMjVyZW07IH1cbiAgLnRpdGxlLmlzLTYge1xuICAgIGZvbnQtc2l6ZTogMXJlbTsgfVxuICAudGl0bGUuaXMtNyB7XG4gICAgZm9udC1zaXplOiAwLjc1cmVtOyB9XG5cbi5zdWJ0aXRsZSB7XG4gIGNvbG9yOiAjNGE0YTRhO1xuICBmb250LXNpemU6IDEuMjVyZW07XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjI1OyB9XG4gIC5zdWJ0aXRsZSBzdHJvbmcge1xuICAgIGNvbG9yOiAjMzYzNjM2O1xuICAgIGZvbnQtd2VpZ2h0OiA2MDA7IH1cbiAgLnN1YnRpdGxlOm5vdCguaXMtc3BhY2VkKSArIC50aXRsZSB7XG4gICAgbWFyZ2luLXRvcDogLTEuMjVyZW07IH1cbiAgLnN1YnRpdGxlLmlzLTEge1xuICAgIGZvbnQtc2l6ZTogM3JlbTsgfVxuICAuc3VidGl0bGUuaXMtMiB7XG4gICAgZm9udC1zaXplOiAyLjVyZW07IH1cbiAgLnN1YnRpdGxlLmlzLTMge1xuICAgIGZvbnQtc2l6ZTogMnJlbTsgfVxuICAuc3VidGl0bGUuaXMtNCB7XG4gICAgZm9udC1zaXplOiAxLjVyZW07IH1cbiAgLnN1YnRpdGxlLmlzLTUge1xuICAgIGZvbnQtc2l6ZTogMS4yNXJlbTsgfVxuICAuc3VidGl0bGUuaXMtNiB7XG4gICAgZm9udC1zaXplOiAxcmVtOyB9XG4gIC5zdWJ0aXRsZS5pcy03IHtcbiAgICBmb250LXNpemU6IDAuNzVyZW07IH1cblxuLmhlYWRpbmcge1xuICBkaXNwbGF5OiBibG9jaztcbiAgZm9udC1zaXplOiAxMXB4O1xuICBsZXR0ZXItc3BhY2luZzogMXB4O1xuICBtYXJnaW4tYm90dG9tOiA1cHg7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IH1cblxuLmhpZ2hsaWdodCB7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgcGFkZGluZzogMDsgfVxuICAuaGlnaGxpZ2h0IHByZSB7XG4gICAgb3ZlcmZsb3c6IGF1dG87XG4gICAgbWF4LXdpZHRoOiAxMDAlOyB9XG5cbi5udW1iZXIge1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZXNtb2tlO1xuICBib3JkZXItcmFkaXVzOiAyOTA0ODZweDtcbiAgZGlzcGxheTogaW5saW5lLWZsZXg7XG4gIGZvbnQtc2l6ZTogMS4yNXJlbTtcbiAgaGVpZ2h0OiAyZW07XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBtYXJnaW4tcmlnaHQ6IDEuNXJlbTtcbiAgbWluLXdpZHRoOiAyLjVlbTtcbiAgcGFkZGluZzogMC4yNXJlbSAwLjVyZW07XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgdmVydGljYWwtYWxpZ246IHRvcDsgfVxuXG4uaW5wdXQsIC50ZXh0YXJlYSwgLnNlbGVjdCBzZWxlY3Qge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgYm9yZGVyLWNvbG9yOiAjZGJkYmRiO1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIGNvbG9yOiAjMzYzNjM2OyB9XG4gIC5pbnB1dDo6LW1vei1wbGFjZWhvbGRlciwgLnRleHRhcmVhOjotbW96LXBsYWNlaG9sZGVyLCAuc2VsZWN0IHNlbGVjdDo6LW1vei1wbGFjZWhvbGRlciB7XG4gICAgY29sb3I6IHJnYmEoNTQsIDU0LCA1NCwgMC4zKTsgfVxuICAuaW5wdXQ6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIsIC50ZXh0YXJlYTo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciwgLnNlbGVjdCBzZWxlY3Q6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICAgIGNvbG9yOiByZ2JhKDU0LCA1NCwgNTQsIDAuMyk7IH1cbiAgLmlucHV0Oi1tb3otcGxhY2Vob2xkZXIsIC50ZXh0YXJlYTotbW96LXBsYWNlaG9sZGVyLCAuc2VsZWN0IHNlbGVjdDotbW96LXBsYWNlaG9sZGVyIHtcbiAgICBjb2xvcjogcmdiYSg1NCwgNTQsIDU0LCAwLjMpOyB9XG4gIC5pbnB1dDotbXMtaW5wdXQtcGxhY2Vob2xkZXIsIC50ZXh0YXJlYTotbXMtaW5wdXQtcGxhY2Vob2xkZXIsIC5zZWxlY3Qgc2VsZWN0Oi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgY29sb3I6IHJnYmEoNTQsIDU0LCA1NCwgMC4zKTsgfVxuICAuaW5wdXQ6aG92ZXIsIC50ZXh0YXJlYTpob3ZlciwgLnNlbGVjdCBzZWxlY3Q6aG92ZXIsIC5pcy1ob3ZlcmVkLmlucHV0LCAuaXMtaG92ZXJlZC50ZXh0YXJlYSwgLnNlbGVjdCBzZWxlY3QuaXMtaG92ZXJlZCB7XG4gICAgYm9yZGVyLWNvbG9yOiAjYjViNWI1OyB9XG4gIC5pbnB1dDpmb2N1cywgLnRleHRhcmVhOmZvY3VzLCAuc2VsZWN0IHNlbGVjdDpmb2N1cywgLmlzLWZvY3VzZWQuaW5wdXQsIC5pcy1mb2N1c2VkLnRleHRhcmVhLCAuc2VsZWN0IHNlbGVjdC5pcy1mb2N1c2VkLCAuaW5wdXQ6YWN0aXZlLCAudGV4dGFyZWE6YWN0aXZlLCAuc2VsZWN0IHNlbGVjdDphY3RpdmUsIC5pcy1hY3RpdmUuaW5wdXQsIC5pcy1hY3RpdmUudGV4dGFyZWEsIC5zZWxlY3Qgc2VsZWN0LmlzLWFjdGl2ZSB7XG4gICAgYm9yZGVyLWNvbG9yOiAjMzI3M2RjO1xuICAgIGJveC1zaGFkb3c6IDAgMCAwIDAuMTI1ZW0gcmdiYSg1MCwgMTE1LCAyMjAsIDAuMjUpOyB9XG4gIC5pbnB1dFtkaXNhYmxlZF0sIC50ZXh0YXJlYVtkaXNhYmxlZF0sIC5zZWxlY3Qgc2VsZWN0W2Rpc2FibGVkXSxcbiAgZmllbGRzZXRbZGlzYWJsZWRdIC5pbnB1dCxcbiAgZmllbGRzZXRbZGlzYWJsZWRdIC50ZXh0YXJlYSxcbiAgZmllbGRzZXRbZGlzYWJsZWRdIC5zZWxlY3Qgc2VsZWN0LFxuICAuc2VsZWN0IGZpZWxkc2V0W2Rpc2FibGVkXSBzZWxlY3Qge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlc21va2U7XG4gICAgYm9yZGVyLWNvbG9yOiB3aGl0ZXNtb2tlO1xuICAgIGJveC1zaGFkb3c6IG5vbmU7XG4gICAgY29sb3I6ICM3YTdhN2E7IH1cbiAgICAuaW5wdXRbZGlzYWJsZWRdOjotbW96LXBsYWNlaG9sZGVyLCAudGV4dGFyZWFbZGlzYWJsZWRdOjotbW96LXBsYWNlaG9sZGVyLCAuc2VsZWN0IHNlbGVjdFtkaXNhYmxlZF06Oi1tb3otcGxhY2Vob2xkZXIsXG4gICAgZmllbGRzZXRbZGlzYWJsZWRdIC5pbnB1dDo6LW1vei1wbGFjZWhvbGRlcixcbiAgICBmaWVsZHNldFtkaXNhYmxlZF0gLnRleHRhcmVhOjotbW96LXBsYWNlaG9sZGVyLFxuICAgIGZpZWxkc2V0W2Rpc2FibGVkXSAuc2VsZWN0IHNlbGVjdDo6LW1vei1wbGFjZWhvbGRlcixcbiAgICAuc2VsZWN0IGZpZWxkc2V0W2Rpc2FibGVkXSBzZWxlY3Q6Oi1tb3otcGxhY2Vob2xkZXIge1xuICAgICAgY29sb3I6IHJnYmEoMTIyLCAxMjIsIDEyMiwgMC4zKTsgfVxuICAgIC5pbnB1dFtkaXNhYmxlZF06Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIsIC50ZXh0YXJlYVtkaXNhYmxlZF06Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIsIC5zZWxlY3Qgc2VsZWN0W2Rpc2FibGVkXTo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlcixcbiAgICBmaWVsZHNldFtkaXNhYmxlZF0gLmlucHV0Ojotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyLFxuICAgIGZpZWxkc2V0W2Rpc2FibGVkXSAudGV4dGFyZWE6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIsXG4gICAgZmllbGRzZXRbZGlzYWJsZWRdIC5zZWxlY3Qgc2VsZWN0Ojotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyLFxuICAgIC5zZWxlY3QgZmllbGRzZXRbZGlzYWJsZWRdIHNlbGVjdDo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgICBjb2xvcjogcmdiYSgxMjIsIDEyMiwgMTIyLCAwLjMpOyB9XG4gICAgLmlucHV0W2Rpc2FibGVkXTotbW96LXBsYWNlaG9sZGVyLCAudGV4dGFyZWFbZGlzYWJsZWRdOi1tb3otcGxhY2Vob2xkZXIsIC5zZWxlY3Qgc2VsZWN0W2Rpc2FibGVkXTotbW96LXBsYWNlaG9sZGVyLFxuICAgIGZpZWxkc2V0W2Rpc2FibGVkXSAuaW5wdXQ6LW1vei1wbGFjZWhvbGRlcixcbiAgICBmaWVsZHNldFtkaXNhYmxlZF0gLnRleHRhcmVhOi1tb3otcGxhY2Vob2xkZXIsXG4gICAgZmllbGRzZXRbZGlzYWJsZWRdIC5zZWxlY3Qgc2VsZWN0Oi1tb3otcGxhY2Vob2xkZXIsXG4gICAgLnNlbGVjdCBmaWVsZHNldFtkaXNhYmxlZF0gc2VsZWN0Oi1tb3otcGxhY2Vob2xkZXIge1xuICAgICAgY29sb3I6IHJnYmEoMTIyLCAxMjIsIDEyMiwgMC4zKTsgfVxuICAgIC5pbnB1dFtkaXNhYmxlZF06LW1zLWlucHV0LXBsYWNlaG9sZGVyLCAudGV4dGFyZWFbZGlzYWJsZWRdOi1tcy1pbnB1dC1wbGFjZWhvbGRlciwgLnNlbGVjdCBzZWxlY3RbZGlzYWJsZWRdOi1tcy1pbnB1dC1wbGFjZWhvbGRlcixcbiAgICBmaWVsZHNldFtkaXNhYmxlZF0gLmlucHV0Oi1tcy1pbnB1dC1wbGFjZWhvbGRlcixcbiAgICBmaWVsZHNldFtkaXNhYmxlZF0gLnRleHRhcmVhOi1tcy1pbnB1dC1wbGFjZWhvbGRlcixcbiAgICBmaWVsZHNldFtkaXNhYmxlZF0gLnNlbGVjdCBzZWxlY3Q6LW1zLWlucHV0LXBsYWNlaG9sZGVyLFxuICAgIC5zZWxlY3QgZmllbGRzZXRbZGlzYWJsZWRdIHNlbGVjdDotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuICAgICAgY29sb3I6IHJnYmEoMTIyLCAxMjIsIDEyMiwgMC4zKTsgfVxuXG4uaW5wdXQsIC50ZXh0YXJlYSB7XG4gIGJveC1zaGFkb3c6IGluc2V0IDAgMXB4IDJweCByZ2JhKDEwLCAxMCwgMTAsIDAuMSk7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgd2lkdGg6IDEwMCU7IH1cbiAgLmlucHV0W3JlYWRvbmx5XSwgLnRleHRhcmVhW3JlYWRvbmx5XSB7XG4gICAgYm94LXNoYWRvdzogbm9uZTsgfVxuICAuaXMtd2hpdGUuaW5wdXQsIC5pcy13aGl0ZS50ZXh0YXJlYSB7XG4gICAgYm9yZGVyLWNvbG9yOiB3aGl0ZTsgfVxuICAgIC5pcy13aGl0ZS5pbnB1dDpmb2N1cywgLmlzLXdoaXRlLnRleHRhcmVhOmZvY3VzLCAuaXMtd2hpdGUuaXMtZm9jdXNlZC5pbnB1dCwgLmlzLXdoaXRlLmlzLWZvY3VzZWQudGV4dGFyZWEsIC5pcy13aGl0ZS5pbnB1dDphY3RpdmUsIC5pcy13aGl0ZS50ZXh0YXJlYTphY3RpdmUsIC5pcy13aGl0ZS5pcy1hY3RpdmUuaW5wdXQsIC5pcy13aGl0ZS5pcy1hY3RpdmUudGV4dGFyZWEge1xuICAgICAgYm94LXNoYWRvdzogMCAwIDAgMC4xMjVlbSByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMjUpOyB9XG4gIC5pcy1ibGFjay5pbnB1dCwgLmlzLWJsYWNrLnRleHRhcmVhIHtcbiAgICBib3JkZXItY29sb3I6ICMwYTBhMGE7IH1cbiAgICAuaXMtYmxhY2suaW5wdXQ6Zm9jdXMsIC5pcy1ibGFjay50ZXh0YXJlYTpmb2N1cywgLmlzLWJsYWNrLmlzLWZvY3VzZWQuaW5wdXQsIC5pcy1ibGFjay5pcy1mb2N1c2VkLnRleHRhcmVhLCAuaXMtYmxhY2suaW5wdXQ6YWN0aXZlLCAuaXMtYmxhY2sudGV4dGFyZWE6YWN0aXZlLCAuaXMtYmxhY2suaXMtYWN0aXZlLmlucHV0LCAuaXMtYmxhY2suaXMtYWN0aXZlLnRleHRhcmVhIHtcbiAgICAgIGJveC1zaGFkb3c6IDAgMCAwIDAuMTI1ZW0gcmdiYSgxMCwgMTAsIDEwLCAwLjI1KTsgfVxuICAuaXMtbGlnaHQuaW5wdXQsIC5pcy1saWdodC50ZXh0YXJlYSB7XG4gICAgYm9yZGVyLWNvbG9yOiB3aGl0ZXNtb2tlOyB9XG4gICAgLmlzLWxpZ2h0LmlucHV0OmZvY3VzLCAuaXMtbGlnaHQudGV4dGFyZWE6Zm9jdXMsIC5pcy1saWdodC5pcy1mb2N1c2VkLmlucHV0LCAuaXMtbGlnaHQuaXMtZm9jdXNlZC50ZXh0YXJlYSwgLmlzLWxpZ2h0LmlucHV0OmFjdGl2ZSwgLmlzLWxpZ2h0LnRleHRhcmVhOmFjdGl2ZSwgLmlzLWxpZ2h0LmlzLWFjdGl2ZS5pbnB1dCwgLmlzLWxpZ2h0LmlzLWFjdGl2ZS50ZXh0YXJlYSB7XG4gICAgICBib3gtc2hhZG93OiAwIDAgMCAwLjEyNWVtIHJnYmEoMjQ1LCAyNDUsIDI0NSwgMC4yNSk7IH1cbiAgLmlzLWRhcmsuaW5wdXQsIC5pcy1kYXJrLnRleHRhcmVhIHtcbiAgICBib3JkZXItY29sb3I6ICMzNjM2MzY7IH1cbiAgICAuaXMtZGFyay5pbnB1dDpmb2N1cywgLmlzLWRhcmsudGV4dGFyZWE6Zm9jdXMsIC5pcy1kYXJrLmlzLWZvY3VzZWQuaW5wdXQsIC5pcy1kYXJrLmlzLWZvY3VzZWQudGV4dGFyZWEsIC5pcy1kYXJrLmlucHV0OmFjdGl2ZSwgLmlzLWRhcmsudGV4dGFyZWE6YWN0aXZlLCAuaXMtZGFyay5pcy1hY3RpdmUuaW5wdXQsIC5pcy1kYXJrLmlzLWFjdGl2ZS50ZXh0YXJlYSB7XG4gICAgICBib3gtc2hhZG93OiAwIDAgMCAwLjEyNWVtIHJnYmEoNTQsIDU0LCA1NCwgMC4yNSk7IH1cbiAgLmlzLXByaW1hcnkuaW5wdXQsIC5pcy1wcmltYXJ5LnRleHRhcmVhIHtcbiAgICBib3JkZXItY29sb3I6ICMwMGQxYjI7IH1cbiAgICAuaXMtcHJpbWFyeS5pbnB1dDpmb2N1cywgLmlzLXByaW1hcnkudGV4dGFyZWE6Zm9jdXMsIC5pcy1wcmltYXJ5LmlzLWZvY3VzZWQuaW5wdXQsIC5pcy1wcmltYXJ5LmlzLWZvY3VzZWQudGV4dGFyZWEsIC5pcy1wcmltYXJ5LmlucHV0OmFjdGl2ZSwgLmlzLXByaW1hcnkudGV4dGFyZWE6YWN0aXZlLCAuaXMtcHJpbWFyeS5pcy1hY3RpdmUuaW5wdXQsIC5pcy1wcmltYXJ5LmlzLWFjdGl2ZS50ZXh0YXJlYSB7XG4gICAgICBib3gtc2hhZG93OiAwIDAgMCAwLjEyNWVtIHJnYmEoMCwgMjA5LCAxNzgsIDAuMjUpOyB9XG4gIC5pcy1saW5rLmlucHV0LCAuaXMtbGluay50ZXh0YXJlYSB7XG4gICAgYm9yZGVyLWNvbG9yOiAjMzI3M2RjOyB9XG4gICAgLmlzLWxpbmsuaW5wdXQ6Zm9jdXMsIC5pcy1saW5rLnRleHRhcmVhOmZvY3VzLCAuaXMtbGluay5pcy1mb2N1c2VkLmlucHV0LCAuaXMtbGluay5pcy1mb2N1c2VkLnRleHRhcmVhLCAuaXMtbGluay5pbnB1dDphY3RpdmUsIC5pcy1saW5rLnRleHRhcmVhOmFjdGl2ZSwgLmlzLWxpbmsuaXMtYWN0aXZlLmlucHV0LCAuaXMtbGluay5pcy1hY3RpdmUudGV4dGFyZWEge1xuICAgICAgYm94LXNoYWRvdzogMCAwIDAgMC4xMjVlbSByZ2JhKDUwLCAxMTUsIDIyMCwgMC4yNSk7IH1cbiAgLmlzLWluZm8uaW5wdXQsIC5pcy1pbmZvLnRleHRhcmVhIHtcbiAgICBib3JkZXItY29sb3I6ICMyMDljZWU7IH1cbiAgICAuaXMtaW5mby5pbnB1dDpmb2N1cywgLmlzLWluZm8udGV4dGFyZWE6Zm9jdXMsIC5pcy1pbmZvLmlzLWZvY3VzZWQuaW5wdXQsIC5pcy1pbmZvLmlzLWZvY3VzZWQudGV4dGFyZWEsIC5pcy1pbmZvLmlucHV0OmFjdGl2ZSwgLmlzLWluZm8udGV4dGFyZWE6YWN0aXZlLCAuaXMtaW5mby5pcy1hY3RpdmUuaW5wdXQsIC5pcy1pbmZvLmlzLWFjdGl2ZS50ZXh0YXJlYSB7XG4gICAgICBib3gtc2hhZG93OiAwIDAgMCAwLjEyNWVtIHJnYmEoMzIsIDE1NiwgMjM4LCAwLjI1KTsgfVxuICAuaXMtc3VjY2Vzcy5pbnB1dCwgLmlzLXN1Y2Nlc3MudGV4dGFyZWEge1xuICAgIGJvcmRlci1jb2xvcjogIzIzZDE2MDsgfVxuICAgIC5pcy1zdWNjZXNzLmlucHV0OmZvY3VzLCAuaXMtc3VjY2Vzcy50ZXh0YXJlYTpmb2N1cywgLmlzLXN1Y2Nlc3MuaXMtZm9jdXNlZC5pbnB1dCwgLmlzLXN1Y2Nlc3MuaXMtZm9jdXNlZC50ZXh0YXJlYSwgLmlzLXN1Y2Nlc3MuaW5wdXQ6YWN0aXZlLCAuaXMtc3VjY2Vzcy50ZXh0YXJlYTphY3RpdmUsIC5pcy1zdWNjZXNzLmlzLWFjdGl2ZS5pbnB1dCwgLmlzLXN1Y2Nlc3MuaXMtYWN0aXZlLnRleHRhcmVhIHtcbiAgICAgIGJveC1zaGFkb3c6IDAgMCAwIDAuMTI1ZW0gcmdiYSgzNSwgMjA5LCA5NiwgMC4yNSk7IH1cbiAgLmlzLXdhcm5pbmcuaW5wdXQsIC5pcy13YXJuaW5nLnRleHRhcmVhIHtcbiAgICBib3JkZXItY29sb3I6ICNmZmRkNTc7IH1cbiAgICAuaXMtd2FybmluZy5pbnB1dDpmb2N1cywgLmlzLXdhcm5pbmcudGV4dGFyZWE6Zm9jdXMsIC5pcy13YXJuaW5nLmlzLWZvY3VzZWQuaW5wdXQsIC5pcy13YXJuaW5nLmlzLWZvY3VzZWQudGV4dGFyZWEsIC5pcy13YXJuaW5nLmlucHV0OmFjdGl2ZSwgLmlzLXdhcm5pbmcudGV4dGFyZWE6YWN0aXZlLCAuaXMtd2FybmluZy5pcy1hY3RpdmUuaW5wdXQsIC5pcy13YXJuaW5nLmlzLWFjdGl2ZS50ZXh0YXJlYSB7XG4gICAgICBib3gtc2hhZG93OiAwIDAgMCAwLjEyNWVtIHJnYmEoMjU1LCAyMjEsIDg3LCAwLjI1KTsgfVxuICAuaXMtZGFuZ2VyLmlucHV0LCAuaXMtZGFuZ2VyLnRleHRhcmVhIHtcbiAgICBib3JkZXItY29sb3I6ICNmZjM4NjA7IH1cbiAgICAuaXMtZGFuZ2VyLmlucHV0OmZvY3VzLCAuaXMtZGFuZ2VyLnRleHRhcmVhOmZvY3VzLCAuaXMtZGFuZ2VyLmlzLWZvY3VzZWQuaW5wdXQsIC5pcy1kYW5nZXIuaXMtZm9jdXNlZC50ZXh0YXJlYSwgLmlzLWRhbmdlci5pbnB1dDphY3RpdmUsIC5pcy1kYW5nZXIudGV4dGFyZWE6YWN0aXZlLCAuaXMtZGFuZ2VyLmlzLWFjdGl2ZS5pbnB1dCwgLmlzLWRhbmdlci5pcy1hY3RpdmUudGV4dGFyZWEge1xuICAgICAgYm94LXNoYWRvdzogMCAwIDAgMC4xMjVlbSByZ2JhKDI1NSwgNTYsIDk2LCAwLjI1KTsgfVxuICAuaXMtc21hbGwuaW5wdXQsIC5pcy1zbWFsbC50ZXh0YXJlYSB7XG4gICAgYm9yZGVyLXJhZGl1czogMnB4O1xuICAgIGZvbnQtc2l6ZTogMC43NXJlbTsgfVxuICAuaXMtbWVkaXVtLmlucHV0LCAuaXMtbWVkaXVtLnRleHRhcmVhIHtcbiAgICBmb250LXNpemU6IDEuMjVyZW07IH1cbiAgLmlzLWxhcmdlLmlucHV0LCAuaXMtbGFyZ2UudGV4dGFyZWEge1xuICAgIGZvbnQtc2l6ZTogMS41cmVtOyB9XG4gIC5pcy1mdWxsd2lkdGguaW5wdXQsIC5pcy1mdWxsd2lkdGgudGV4dGFyZWEge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHdpZHRoOiAxMDAlOyB9XG4gIC5pcy1pbmxpbmUuaW5wdXQsIC5pcy1pbmxpbmUudGV4dGFyZWEge1xuICAgIGRpc3BsYXk6IGlubGluZTtcbiAgICB3aWR0aDogYXV0bzsgfVxuXG4uaW5wdXQuaXMtcm91bmRlZCB7XG4gIGJvcmRlci1yYWRpdXM6IDI5MDQ4NnB4O1xuICBwYWRkaW5nLWxlZnQ6IDFlbTtcbiAgcGFkZGluZy1yaWdodDogMWVtOyB9XG5cbi5pbnB1dC5pcy1zdGF0aWMge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgYm94LXNoYWRvdzogbm9uZTtcbiAgcGFkZGluZy1sZWZ0OiAwO1xuICBwYWRkaW5nLXJpZ2h0OiAwOyB9XG5cbi50ZXh0YXJlYSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIG1pbi13aWR0aDogMTAwJTtcbiAgcGFkZGluZzogMC42MjVlbTtcbiAgcmVzaXplOiB2ZXJ0aWNhbDsgfVxuICAudGV4dGFyZWE6bm90KFtyb3dzXSkge1xuICAgIG1heC1oZWlnaHQ6IDYwMHB4O1xuICAgIG1pbi1oZWlnaHQ6IDEyMHB4OyB9XG4gIC50ZXh0YXJlYVtyb3dzXSB7XG4gICAgaGVpZ2h0OiBpbml0aWFsOyB9XG4gIC50ZXh0YXJlYS5oYXMtZml4ZWQtc2l6ZSB7XG4gICAgcmVzaXplOiBub25lOyB9XG5cbi5jaGVja2JveCwgLnJhZGlvIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGxpbmUtaGVpZ2h0OiAxLjI1O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgLmNoZWNrYm94IGlucHV0LCAucmFkaW8gaW5wdXQge1xuICAgIGN1cnNvcjogcG9pbnRlcjsgfVxuICAuY2hlY2tib3g6aG92ZXIsIC5yYWRpbzpob3ZlciB7XG4gICAgY29sb3I6ICMzNjM2MzY7IH1cbiAgLmNoZWNrYm94W2Rpc2FibGVkXSwgLnJhZGlvW2Rpc2FibGVkXSxcbiAgZmllbGRzZXRbZGlzYWJsZWRdIC5jaGVja2JveCxcbiAgZmllbGRzZXRbZGlzYWJsZWRdIC5yYWRpbyB7XG4gICAgY29sb3I6ICM3YTdhN2E7XG4gICAgY3Vyc29yOiBub3QtYWxsb3dlZDsgfVxuXG4ucmFkaW8gKyAucmFkaW8ge1xuICBtYXJnaW4tbGVmdDogMC41ZW07IH1cblxuLnNlbGVjdCB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7IH1cbiAgLnNlbGVjdDpub3QoLmlzLW11bHRpcGxlKSB7XG4gICAgaGVpZ2h0OiAyLjI1ZW07IH1cbiAgLnNlbGVjdDpub3QoLmlzLW11bHRpcGxlKTpub3QoLmlzLWxvYWRpbmcpOjphZnRlciB7XG4gICAgYm9yZGVyLWNvbG9yOiAjMzI3M2RjO1xuICAgIHJpZ2h0OiAxLjEyNWVtO1xuICAgIHotaW5kZXg6IDQ7IH1cbiAgLnNlbGVjdC5pcy1yb3VuZGVkIHNlbGVjdCB7XG4gICAgYm9yZGVyLXJhZGl1czogMjkwNDg2cHg7XG4gICAgcGFkZGluZy1sZWZ0OiAxZW07IH1cbiAgLnNlbGVjdCBzZWxlY3Qge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBmb250LXNpemU6IDFlbTtcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgb3V0bGluZTogbm9uZTsgfVxuICAgIC5zZWxlY3Qgc2VsZWN0OjotbXMtZXhwYW5kIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgICAuc2VsZWN0IHNlbGVjdFtkaXNhYmxlZF06aG92ZXIsXG4gICAgZmllbGRzZXRbZGlzYWJsZWRdIC5zZWxlY3Qgc2VsZWN0OmhvdmVyIHtcbiAgICAgIGJvcmRlci1jb2xvcjogd2hpdGVzbW9rZTsgfVxuICAgIC5zZWxlY3Qgc2VsZWN0Om5vdChbbXVsdGlwbGVdKSB7XG4gICAgICBwYWRkaW5nLXJpZ2h0OiAyLjVlbTsgfVxuICAgIC5zZWxlY3Qgc2VsZWN0W211bHRpcGxlXSB7XG4gICAgICBoZWlnaHQ6IGF1dG87XG4gICAgICBwYWRkaW5nOiAwOyB9XG4gICAgICAuc2VsZWN0IHNlbGVjdFttdWx0aXBsZV0gb3B0aW9uIHtcbiAgICAgICAgcGFkZGluZzogMC41ZW0gMWVtOyB9XG4gIC5zZWxlY3Q6bm90KC5pcy1tdWx0aXBsZSk6bm90KC5pcy1sb2FkaW5nKTpob3Zlcjo6YWZ0ZXIge1xuICAgIGJvcmRlci1jb2xvcjogIzM2MzYzNjsgfVxuICAuc2VsZWN0LmlzLXdoaXRlOm5vdCg6aG92ZXIpOjphZnRlciB7XG4gICAgYm9yZGVyLWNvbG9yOiB3aGl0ZTsgfVxuICAuc2VsZWN0LmlzLXdoaXRlIHNlbGVjdCB7XG4gICAgYm9yZGVyLWNvbG9yOiB3aGl0ZTsgfVxuICAgIC5zZWxlY3QuaXMtd2hpdGUgc2VsZWN0OmhvdmVyLCAuc2VsZWN0LmlzLXdoaXRlIHNlbGVjdC5pcy1ob3ZlcmVkIHtcbiAgICAgIGJvcmRlci1jb2xvcjogI2YyZjJmMjsgfVxuICAgIC5zZWxlY3QuaXMtd2hpdGUgc2VsZWN0OmZvY3VzLCAuc2VsZWN0LmlzLXdoaXRlIHNlbGVjdC5pcy1mb2N1c2VkLCAuc2VsZWN0LmlzLXdoaXRlIHNlbGVjdDphY3RpdmUsIC5zZWxlY3QuaXMtd2hpdGUgc2VsZWN0LmlzLWFjdGl2ZSB7XG4gICAgICBib3gtc2hhZG93OiAwIDAgMCAwLjEyNWVtIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4yNSk7IH1cbiAgLnNlbGVjdC5pcy1ibGFjazpub3QoOmhvdmVyKTo6YWZ0ZXIge1xuICAgIGJvcmRlci1jb2xvcjogIzBhMGEwYTsgfVxuICAuc2VsZWN0LmlzLWJsYWNrIHNlbGVjdCB7XG4gICAgYm9yZGVyLWNvbG9yOiAjMGEwYTBhOyB9XG4gICAgLnNlbGVjdC5pcy1ibGFjayBzZWxlY3Q6aG92ZXIsIC5zZWxlY3QuaXMtYmxhY2sgc2VsZWN0LmlzLWhvdmVyZWQge1xuICAgICAgYm9yZGVyLWNvbG9yOiBibGFjazsgfVxuICAgIC5zZWxlY3QuaXMtYmxhY2sgc2VsZWN0OmZvY3VzLCAuc2VsZWN0LmlzLWJsYWNrIHNlbGVjdC5pcy1mb2N1c2VkLCAuc2VsZWN0LmlzLWJsYWNrIHNlbGVjdDphY3RpdmUsIC5zZWxlY3QuaXMtYmxhY2sgc2VsZWN0LmlzLWFjdGl2ZSB7XG4gICAgICBib3gtc2hhZG93OiAwIDAgMCAwLjEyNWVtIHJnYmEoMTAsIDEwLCAxMCwgMC4yNSk7IH1cbiAgLnNlbGVjdC5pcy1saWdodDpub3QoOmhvdmVyKTo6YWZ0ZXIge1xuICAgIGJvcmRlci1jb2xvcjogd2hpdGVzbW9rZTsgfVxuICAuc2VsZWN0LmlzLWxpZ2h0IHNlbGVjdCB7XG4gICAgYm9yZGVyLWNvbG9yOiB3aGl0ZXNtb2tlOyB9XG4gICAgLnNlbGVjdC5pcy1saWdodCBzZWxlY3Q6aG92ZXIsIC5zZWxlY3QuaXMtbGlnaHQgc2VsZWN0LmlzLWhvdmVyZWQge1xuICAgICAgYm9yZGVyLWNvbG9yOiAjZThlOGU4OyB9XG4gICAgLnNlbGVjdC5pcy1saWdodCBzZWxlY3Q6Zm9jdXMsIC5zZWxlY3QuaXMtbGlnaHQgc2VsZWN0LmlzLWZvY3VzZWQsIC5zZWxlY3QuaXMtbGlnaHQgc2VsZWN0OmFjdGl2ZSwgLnNlbGVjdC5pcy1saWdodCBzZWxlY3QuaXMtYWN0aXZlIHtcbiAgICAgIGJveC1zaGFkb3c6IDAgMCAwIDAuMTI1ZW0gcmdiYSgyNDUsIDI0NSwgMjQ1LCAwLjI1KTsgfVxuICAuc2VsZWN0LmlzLWRhcms6bm90KDpob3Zlcik6OmFmdGVyIHtcbiAgICBib3JkZXItY29sb3I6ICMzNjM2MzY7IH1cbiAgLnNlbGVjdC5pcy1kYXJrIHNlbGVjdCB7XG4gICAgYm9yZGVyLWNvbG9yOiAjMzYzNjM2OyB9XG4gICAgLnNlbGVjdC5pcy1kYXJrIHNlbGVjdDpob3ZlciwgLnNlbGVjdC5pcy1kYXJrIHNlbGVjdC5pcy1ob3ZlcmVkIHtcbiAgICAgIGJvcmRlci1jb2xvcjogIzI5MjkyOTsgfVxuICAgIC5zZWxlY3QuaXMtZGFyayBzZWxlY3Q6Zm9jdXMsIC5zZWxlY3QuaXMtZGFyayBzZWxlY3QuaXMtZm9jdXNlZCwgLnNlbGVjdC5pcy1kYXJrIHNlbGVjdDphY3RpdmUsIC5zZWxlY3QuaXMtZGFyayBzZWxlY3QuaXMtYWN0aXZlIHtcbiAgICAgIGJveC1zaGFkb3c6IDAgMCAwIDAuMTI1ZW0gcmdiYSg1NCwgNTQsIDU0LCAwLjI1KTsgfVxuICAuc2VsZWN0LmlzLXByaW1hcnk6bm90KDpob3Zlcik6OmFmdGVyIHtcbiAgICBib3JkZXItY29sb3I6ICMwMGQxYjI7IH1cbiAgLnNlbGVjdC5pcy1wcmltYXJ5IHNlbGVjdCB7XG4gICAgYm9yZGVyLWNvbG9yOiAjMDBkMWIyOyB9XG4gICAgLnNlbGVjdC5pcy1wcmltYXJ5IHNlbGVjdDpob3ZlciwgLnNlbGVjdC5pcy1wcmltYXJ5IHNlbGVjdC5pcy1ob3ZlcmVkIHtcbiAgICAgIGJvcmRlci1jb2xvcjogIzAwYjg5YzsgfVxuICAgIC5zZWxlY3QuaXMtcHJpbWFyeSBzZWxlY3Q6Zm9jdXMsIC5zZWxlY3QuaXMtcHJpbWFyeSBzZWxlY3QuaXMtZm9jdXNlZCwgLnNlbGVjdC5pcy1wcmltYXJ5IHNlbGVjdDphY3RpdmUsIC5zZWxlY3QuaXMtcHJpbWFyeSBzZWxlY3QuaXMtYWN0aXZlIHtcbiAgICAgIGJveC1zaGFkb3c6IDAgMCAwIDAuMTI1ZW0gcmdiYSgwLCAyMDksIDE3OCwgMC4yNSk7IH1cbiAgLnNlbGVjdC5pcy1saW5rOm5vdCg6aG92ZXIpOjphZnRlciB7XG4gICAgYm9yZGVyLWNvbG9yOiAjMzI3M2RjOyB9XG4gIC5zZWxlY3QuaXMtbGluayBzZWxlY3Qge1xuICAgIGJvcmRlci1jb2xvcjogIzMyNzNkYzsgfVxuICAgIC5zZWxlY3QuaXMtbGluayBzZWxlY3Q6aG92ZXIsIC5zZWxlY3QuaXMtbGluayBzZWxlY3QuaXMtaG92ZXJlZCB7XG4gICAgICBib3JkZXItY29sb3I6ICMyMzY2ZDE7IH1cbiAgICAuc2VsZWN0LmlzLWxpbmsgc2VsZWN0OmZvY3VzLCAuc2VsZWN0LmlzLWxpbmsgc2VsZWN0LmlzLWZvY3VzZWQsIC5zZWxlY3QuaXMtbGluayBzZWxlY3Q6YWN0aXZlLCAuc2VsZWN0LmlzLWxpbmsgc2VsZWN0LmlzLWFjdGl2ZSB7XG4gICAgICBib3gtc2hhZG93OiAwIDAgMCAwLjEyNWVtIHJnYmEoNTAsIDExNSwgMjIwLCAwLjI1KTsgfVxuICAuc2VsZWN0LmlzLWluZm86bm90KDpob3Zlcik6OmFmdGVyIHtcbiAgICBib3JkZXItY29sb3I6ICMyMDljZWU7IH1cbiAgLnNlbGVjdC5pcy1pbmZvIHNlbGVjdCB7XG4gICAgYm9yZGVyLWNvbG9yOiAjMjA5Y2VlOyB9XG4gICAgLnNlbGVjdC5pcy1pbmZvIHNlbGVjdDpob3ZlciwgLnNlbGVjdC5pcy1pbmZvIHNlbGVjdC5pcy1ob3ZlcmVkIHtcbiAgICAgIGJvcmRlci1jb2xvcjogIzExOGZlNDsgfVxuICAgIC5zZWxlY3QuaXMtaW5mbyBzZWxlY3Q6Zm9jdXMsIC5zZWxlY3QuaXMtaW5mbyBzZWxlY3QuaXMtZm9jdXNlZCwgLnNlbGVjdC5pcy1pbmZvIHNlbGVjdDphY3RpdmUsIC5zZWxlY3QuaXMtaW5mbyBzZWxlY3QuaXMtYWN0aXZlIHtcbiAgICAgIGJveC1zaGFkb3c6IDAgMCAwIDAuMTI1ZW0gcmdiYSgzMiwgMTU2LCAyMzgsIDAuMjUpOyB9XG4gIC5zZWxlY3QuaXMtc3VjY2Vzczpub3QoOmhvdmVyKTo6YWZ0ZXIge1xuICAgIGJvcmRlci1jb2xvcjogIzIzZDE2MDsgfVxuICAuc2VsZWN0LmlzLXN1Y2Nlc3Mgc2VsZWN0IHtcbiAgICBib3JkZXItY29sb3I6ICMyM2QxNjA7IH1cbiAgICAuc2VsZWN0LmlzLXN1Y2Nlc3Mgc2VsZWN0OmhvdmVyLCAuc2VsZWN0LmlzLXN1Y2Nlc3Mgc2VsZWN0LmlzLWhvdmVyZWQge1xuICAgICAgYm9yZGVyLWNvbG9yOiAjMjBiYzU2OyB9XG4gICAgLnNlbGVjdC5pcy1zdWNjZXNzIHNlbGVjdDpmb2N1cywgLnNlbGVjdC5pcy1zdWNjZXNzIHNlbGVjdC5pcy1mb2N1c2VkLCAuc2VsZWN0LmlzLXN1Y2Nlc3Mgc2VsZWN0OmFjdGl2ZSwgLnNlbGVjdC5pcy1zdWNjZXNzIHNlbGVjdC5pcy1hY3RpdmUge1xuICAgICAgYm94LXNoYWRvdzogMCAwIDAgMC4xMjVlbSByZ2JhKDM1LCAyMDksIDk2LCAwLjI1KTsgfVxuICAuc2VsZWN0LmlzLXdhcm5pbmc6bm90KDpob3Zlcik6OmFmdGVyIHtcbiAgICBib3JkZXItY29sb3I6ICNmZmRkNTc7IH1cbiAgLnNlbGVjdC5pcy13YXJuaW5nIHNlbGVjdCB7XG4gICAgYm9yZGVyLWNvbG9yOiAjZmZkZDU3OyB9XG4gICAgLnNlbGVjdC5pcy13YXJuaW5nIHNlbGVjdDpob3ZlciwgLnNlbGVjdC5pcy13YXJuaW5nIHNlbGVjdC5pcy1ob3ZlcmVkIHtcbiAgICAgIGJvcmRlci1jb2xvcjogI2ZmZDgzZDsgfVxuICAgIC5zZWxlY3QuaXMtd2FybmluZyBzZWxlY3Q6Zm9jdXMsIC5zZWxlY3QuaXMtd2FybmluZyBzZWxlY3QuaXMtZm9jdXNlZCwgLnNlbGVjdC5pcy13YXJuaW5nIHNlbGVjdDphY3RpdmUsIC5zZWxlY3QuaXMtd2FybmluZyBzZWxlY3QuaXMtYWN0aXZlIHtcbiAgICAgIGJveC1zaGFkb3c6IDAgMCAwIDAuMTI1ZW0gcmdiYSgyNTUsIDIyMSwgODcsIDAuMjUpOyB9XG4gIC5zZWxlY3QuaXMtZGFuZ2VyOm5vdCg6aG92ZXIpOjphZnRlciB7XG4gICAgYm9yZGVyLWNvbG9yOiAjZmYzODYwOyB9XG4gIC5zZWxlY3QuaXMtZGFuZ2VyIHNlbGVjdCB7XG4gICAgYm9yZGVyLWNvbG9yOiAjZmYzODYwOyB9XG4gICAgLnNlbGVjdC5pcy1kYW5nZXIgc2VsZWN0OmhvdmVyLCAuc2VsZWN0LmlzLWRhbmdlciBzZWxlY3QuaXMtaG92ZXJlZCB7XG4gICAgICBib3JkZXItY29sb3I6ICNmZjFmNGI7IH1cbiAgICAuc2VsZWN0LmlzLWRhbmdlciBzZWxlY3Q6Zm9jdXMsIC5zZWxlY3QuaXMtZGFuZ2VyIHNlbGVjdC5pcy1mb2N1c2VkLCAuc2VsZWN0LmlzLWRhbmdlciBzZWxlY3Q6YWN0aXZlLCAuc2VsZWN0LmlzLWRhbmdlciBzZWxlY3QuaXMtYWN0aXZlIHtcbiAgICAgIGJveC1zaGFkb3c6IDAgMCAwIDAuMTI1ZW0gcmdiYSgyNTUsIDU2LCA5NiwgMC4yNSk7IH1cbiAgLnNlbGVjdC5pcy1zbWFsbCB7XG4gICAgYm9yZGVyLXJhZGl1czogMnB4O1xuICAgIGZvbnQtc2l6ZTogMC43NXJlbTsgfVxuICAuc2VsZWN0LmlzLW1lZGl1bSB7XG4gICAgZm9udC1zaXplOiAxLjI1cmVtOyB9XG4gIC5zZWxlY3QuaXMtbGFyZ2Uge1xuICAgIGZvbnQtc2l6ZTogMS41cmVtOyB9XG4gIC5zZWxlY3QuaXMtZGlzYWJsZWQ6OmFmdGVyIHtcbiAgICBib3JkZXItY29sb3I6ICM3YTdhN2E7IH1cbiAgLnNlbGVjdC5pcy1mdWxsd2lkdGgge1xuICAgIHdpZHRoOiAxMDAlOyB9XG4gICAgLnNlbGVjdC5pcy1mdWxsd2lkdGggc2VsZWN0IHtcbiAgICAgIHdpZHRoOiAxMDAlOyB9XG4gIC5zZWxlY3QuaXMtbG9hZGluZzo6YWZ0ZXIge1xuICAgIG1hcmdpbi10b3A6IDA7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHJpZ2h0OiAwLjYyNWVtO1xuICAgIHRvcDogMC42MjVlbTtcbiAgICB0cmFuc2Zvcm06IG5vbmU7IH1cbiAgLnNlbGVjdC5pcy1sb2FkaW5nLmlzLXNtYWxsOmFmdGVyIHtcbiAgICBmb250LXNpemU6IDAuNzVyZW07IH1cbiAgLnNlbGVjdC5pcy1sb2FkaW5nLmlzLW1lZGl1bTphZnRlciB7XG4gICAgZm9udC1zaXplOiAxLjI1cmVtOyB9XG4gIC5zZWxlY3QuaXMtbG9hZGluZy5pcy1sYXJnZTphZnRlciB7XG4gICAgZm9udC1zaXplOiAxLjVyZW07IH1cblxuLmZpbGUge1xuICBhbGlnbi1pdGVtczogc3RyZXRjaDtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgLmZpbGUuaXMtd2hpdGUgLmZpbGUtY3RhIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIGNvbG9yOiAjMGEwYTBhOyB9XG4gIC5maWxlLmlzLXdoaXRlOmhvdmVyIC5maWxlLWN0YSwgLmZpbGUuaXMtd2hpdGUuaXMtaG92ZXJlZCAuZmlsZS1jdGEge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmOWY5Zjk7XG4gICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBjb2xvcjogIzBhMGEwYTsgfVxuICAuZmlsZS5pcy13aGl0ZTpmb2N1cyAuZmlsZS1jdGEsIC5maWxlLmlzLXdoaXRlLmlzLWZvY3VzZWQgLmZpbGUtY3RhIHtcbiAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIGJveC1zaGFkb3c6IDAgMCAwLjVlbSByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMjUpO1xuICAgIGNvbG9yOiAjMGEwYTBhOyB9XG4gIC5maWxlLmlzLXdoaXRlOmFjdGl2ZSAuZmlsZS1jdGEsIC5maWxlLmlzLXdoaXRlLmlzLWFjdGl2ZSAuZmlsZS1jdGEge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmMmYyZjI7XG4gICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBjb2xvcjogIzBhMGEwYTsgfVxuICAuZmlsZS5pcy1ibGFjayAuZmlsZS1jdGEge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMwYTBhMGE7XG4gICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBjb2xvcjogd2hpdGU7IH1cbiAgLmZpbGUuaXMtYmxhY2s6aG92ZXIgLmZpbGUtY3RhLCAuZmlsZS5pcy1ibGFjay5pcy1ob3ZlcmVkIC5maWxlLWN0YSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzA0MDQwNDtcbiAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIGNvbG9yOiB3aGl0ZTsgfVxuICAuZmlsZS5pcy1ibGFjazpmb2N1cyAuZmlsZS1jdGEsIC5maWxlLmlzLWJsYWNrLmlzLWZvY3VzZWQgLmZpbGUtY3RhIHtcbiAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIGJveC1zaGFkb3c6IDAgMCAwLjVlbSByZ2JhKDEwLCAxMCwgMTAsIDAuMjUpO1xuICAgIGNvbG9yOiB3aGl0ZTsgfVxuICAuZmlsZS5pcy1ibGFjazphY3RpdmUgLmZpbGUtY3RhLCAuZmlsZS5pcy1ibGFjay5pcy1hY3RpdmUgLmZpbGUtY3RhIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbiAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIGNvbG9yOiB3aGl0ZTsgfVxuICAuZmlsZS5pcy1saWdodCAuZmlsZS1jdGEge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlc21va2U7XG4gICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBjb2xvcjogIzM2MzYzNjsgfVxuICAuZmlsZS5pcy1saWdodDpob3ZlciAuZmlsZS1jdGEsIC5maWxlLmlzLWxpZ2h0LmlzLWhvdmVyZWQgLmZpbGUtY3RhIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWVlZWVlO1xuICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgY29sb3I6ICMzNjM2MzY7IH1cbiAgLmZpbGUuaXMtbGlnaHQ6Zm9jdXMgLmZpbGUtY3RhLCAuZmlsZS5pcy1saWdodC5pcy1mb2N1c2VkIC5maWxlLWN0YSB7XG4gICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBib3gtc2hhZG93OiAwIDAgMC41ZW0gcmdiYSgyNDUsIDI0NSwgMjQ1LCAwLjI1KTtcbiAgICBjb2xvcjogIzM2MzYzNjsgfVxuICAuZmlsZS5pcy1saWdodDphY3RpdmUgLmZpbGUtY3RhLCAuZmlsZS5pcy1saWdodC5pcy1hY3RpdmUgLmZpbGUtY3RhIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZThlOGU4O1xuICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgY29sb3I6ICMzNjM2MzY7IH1cbiAgLmZpbGUuaXMtZGFyayAuZmlsZS1jdGEge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMzNjM2MzY7XG4gICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBjb2xvcjogd2hpdGVzbW9rZTsgfVxuICAuZmlsZS5pcy1kYXJrOmhvdmVyIC5maWxlLWN0YSwgLmZpbGUuaXMtZGFyay5pcy1ob3ZlcmVkIC5maWxlLWN0YSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJmMmYyZjtcbiAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIGNvbG9yOiB3aGl0ZXNtb2tlOyB9XG4gIC5maWxlLmlzLWRhcms6Zm9jdXMgLmZpbGUtY3RhLCAuZmlsZS5pcy1kYXJrLmlzLWZvY3VzZWQgLmZpbGUtY3RhIHtcbiAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIGJveC1zaGFkb3c6IDAgMCAwLjVlbSByZ2JhKDU0LCA1NCwgNTQsIDAuMjUpO1xuICAgIGNvbG9yOiB3aGl0ZXNtb2tlOyB9XG4gIC5maWxlLmlzLWRhcms6YWN0aXZlIC5maWxlLWN0YSwgLmZpbGUuaXMtZGFyay5pcy1hY3RpdmUgLmZpbGUtY3RhIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjkyOTI5O1xuICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgY29sb3I6IHdoaXRlc21va2U7IH1cbiAgLmZpbGUuaXMtcHJpbWFyeSAuZmlsZS1jdGEge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMGQxYjI7XG4gICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBjb2xvcjogI2ZmZjsgfVxuICAuZmlsZS5pcy1wcmltYXJ5OmhvdmVyIC5maWxlLWN0YSwgLmZpbGUuaXMtcHJpbWFyeS5pcy1ob3ZlcmVkIC5maWxlLWN0YSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwYzRhNztcbiAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIGNvbG9yOiAjZmZmOyB9XG4gIC5maWxlLmlzLXByaW1hcnk6Zm9jdXMgLmZpbGUtY3RhLCAuZmlsZS5pcy1wcmltYXJ5LmlzLWZvY3VzZWQgLmZpbGUtY3RhIHtcbiAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIGJveC1zaGFkb3c6IDAgMCAwLjVlbSByZ2JhKDAsIDIwOSwgMTc4LCAwLjI1KTtcbiAgICBjb2xvcjogI2ZmZjsgfVxuICAuZmlsZS5pcy1wcmltYXJ5OmFjdGl2ZSAuZmlsZS1jdGEsIC5maWxlLmlzLXByaW1hcnkuaXMtYWN0aXZlIC5maWxlLWN0YSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwYjg5YztcbiAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIGNvbG9yOiAjZmZmOyB9XG4gIC5maWxlLmlzLWxpbmsgLmZpbGUtY3RhIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzI3M2RjO1xuICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgY29sb3I6ICNmZmY7IH1cbiAgLmZpbGUuaXMtbGluazpob3ZlciAuZmlsZS1jdGEsIC5maWxlLmlzLWxpbmsuaXMtaG92ZXJlZCAuZmlsZS1jdGEge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMyNzZjZGE7XG4gICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBjb2xvcjogI2ZmZjsgfVxuICAuZmlsZS5pcy1saW5rOmZvY3VzIC5maWxlLWN0YSwgLmZpbGUuaXMtbGluay5pcy1mb2N1c2VkIC5maWxlLWN0YSB7XG4gICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBib3gtc2hhZG93OiAwIDAgMC41ZW0gcmdiYSg1MCwgMTE1LCAyMjAsIDAuMjUpO1xuICAgIGNvbG9yOiAjZmZmOyB9XG4gIC5maWxlLmlzLWxpbms6YWN0aXZlIC5maWxlLWN0YSwgLmZpbGUuaXMtbGluay5pcy1hY3RpdmUgLmZpbGUtY3RhIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjM2NmQxO1xuICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgY29sb3I6ICNmZmY7IH1cbiAgLmZpbGUuaXMtaW5mbyAuZmlsZS1jdGEge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMyMDljZWU7XG4gICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBjb2xvcjogI2ZmZjsgfVxuICAuZmlsZS5pcy1pbmZvOmhvdmVyIC5maWxlLWN0YSwgLmZpbGUuaXMtaW5mby5pcy1ob3ZlcmVkIC5maWxlLWN0YSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzE0OTZlZDtcbiAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIGNvbG9yOiAjZmZmOyB9XG4gIC5maWxlLmlzLWluZm86Zm9jdXMgLmZpbGUtY3RhLCAuZmlsZS5pcy1pbmZvLmlzLWZvY3VzZWQgLmZpbGUtY3RhIHtcbiAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIGJveC1zaGFkb3c6IDAgMCAwLjVlbSByZ2JhKDMyLCAxNTYsIDIzOCwgMC4yNSk7XG4gICAgY29sb3I6ICNmZmY7IH1cbiAgLmZpbGUuaXMtaW5mbzphY3RpdmUgLmZpbGUtY3RhLCAuZmlsZS5pcy1pbmZvLmlzLWFjdGl2ZSAuZmlsZS1jdGEge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMxMThmZTQ7XG4gICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBjb2xvcjogI2ZmZjsgfVxuICAuZmlsZS5pcy1zdWNjZXNzIC5maWxlLWN0YSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzIzZDE2MDtcbiAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIGNvbG9yOiAjZmZmOyB9XG4gIC5maWxlLmlzLXN1Y2Nlc3M6aG92ZXIgLmZpbGUtY3RhLCAuZmlsZS5pcy1zdWNjZXNzLmlzLWhvdmVyZWQgLmZpbGUtY3RhIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjJjNjViO1xuICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgY29sb3I6ICNmZmY7IH1cbiAgLmZpbGUuaXMtc3VjY2Vzczpmb2N1cyAuZmlsZS1jdGEsIC5maWxlLmlzLXN1Y2Nlc3MuaXMtZm9jdXNlZCAuZmlsZS1jdGEge1xuICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgYm94LXNoYWRvdzogMCAwIDAuNWVtIHJnYmEoMzUsIDIwOSwgOTYsIDAuMjUpO1xuICAgIGNvbG9yOiAjZmZmOyB9XG4gIC5maWxlLmlzLXN1Y2Nlc3M6YWN0aXZlIC5maWxlLWN0YSwgLmZpbGUuaXMtc3VjY2Vzcy5pcy1hY3RpdmUgLmZpbGUtY3RhIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjBiYzU2O1xuICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgY29sb3I6ICNmZmY7IH1cbiAgLmZpbGUuaXMtd2FybmluZyAuZmlsZS1jdGEge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmRkNTc7XG4gICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjcpOyB9XG4gIC5maWxlLmlzLXdhcm5pbmc6aG92ZXIgLmZpbGUtY3RhLCAuZmlsZS5pcy13YXJuaW5nLmlzLWhvdmVyZWQgLmZpbGUtY3RhIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZkYjRhO1xuICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC43KTsgfVxuICAuZmlsZS5pcy13YXJuaW5nOmZvY3VzIC5maWxlLWN0YSwgLmZpbGUuaXMtd2FybmluZy5pcy1mb2N1c2VkIC5maWxlLWN0YSB7XG4gICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBib3gtc2hhZG93OiAwIDAgMC41ZW0gcmdiYSgyNTUsIDIyMSwgODcsIDAuMjUpO1xuICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNyk7IH1cbiAgLmZpbGUuaXMtd2FybmluZzphY3RpdmUgLmZpbGUtY3RhLCAuZmlsZS5pcy13YXJuaW5nLmlzLWFjdGl2ZSAuZmlsZS1jdGEge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmQ4M2Q7XG4gICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjcpOyB9XG4gIC5maWxlLmlzLWRhbmdlciAuZmlsZS1jdGEge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZjM4NjA7XG4gICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBjb2xvcjogI2ZmZjsgfVxuICAuZmlsZS5pcy1kYW5nZXI6aG92ZXIgLmZpbGUtY3RhLCAuZmlsZS5pcy1kYW5nZXIuaXMtaG92ZXJlZCAuZmlsZS1jdGEge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZjJiNTY7XG4gICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBjb2xvcjogI2ZmZjsgfVxuICAuZmlsZS5pcy1kYW5nZXI6Zm9jdXMgLmZpbGUtY3RhLCAuZmlsZS5pcy1kYW5nZXIuaXMtZm9jdXNlZCAuZmlsZS1jdGEge1xuICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgYm94LXNoYWRvdzogMCAwIDAuNWVtIHJnYmEoMjU1LCA1NiwgOTYsIDAuMjUpO1xuICAgIGNvbG9yOiAjZmZmOyB9XG4gIC5maWxlLmlzLWRhbmdlcjphY3RpdmUgLmZpbGUtY3RhLCAuZmlsZS5pcy1kYW5nZXIuaXMtYWN0aXZlIC5maWxlLWN0YSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmMWY0YjtcbiAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIGNvbG9yOiAjZmZmOyB9XG4gIC5maWxlLmlzLXNtYWxsIHtcbiAgICBmb250LXNpemU6IDAuNzVyZW07IH1cbiAgLmZpbGUuaXMtbWVkaXVtIHtcbiAgICBmb250LXNpemU6IDEuMjVyZW07IH1cbiAgICAuZmlsZS5pcy1tZWRpdW0gLmZpbGUtaWNvbiAuZmEge1xuICAgICAgZm9udC1zaXplOiAyMXB4OyB9XG4gIC5maWxlLmlzLWxhcmdlIHtcbiAgICBmb250LXNpemU6IDEuNXJlbTsgfVxuICAgIC5maWxlLmlzLWxhcmdlIC5maWxlLWljb24gLmZhIHtcbiAgICAgIGZvbnQtc2l6ZTogMjhweDsgfVxuICAuZmlsZS5oYXMtbmFtZSAuZmlsZS1jdGEge1xuICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAwO1xuICAgIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAwOyB9XG4gIC5maWxlLmhhcy1uYW1lIC5maWxlLW5hbWUge1xuICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDA7XG4gICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMDsgfVxuICAuZmlsZS5oYXMtbmFtZS5pcy1lbXB0eSAuZmlsZS1jdGEge1xuICAgIGJvcmRlci1yYWRpdXM6IDRweDsgfVxuICAuZmlsZS5oYXMtbmFtZS5pcy1lbXB0eSAuZmlsZS1uYW1lIHtcbiAgICBkaXNwbGF5OiBub25lOyB9XG4gIC5maWxlLmlzLWJveGVkIC5maWxlLWxhYmVsIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyB9XG4gIC5maWxlLmlzLWJveGVkIC5maWxlLWN0YSB7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBoZWlnaHQ6IGF1dG87XG4gICAgcGFkZGluZzogMWVtIDNlbTsgfVxuICAuZmlsZS5pcy1ib3hlZCAuZmlsZS1uYW1lIHtcbiAgICBib3JkZXItd2lkdGg6IDAgMXB4IDFweDsgfVxuICAuZmlsZS5pcy1ib3hlZCAuZmlsZS1pY29uIHtcbiAgICBoZWlnaHQ6IDEuNWVtO1xuICAgIHdpZHRoOiAxLjVlbTsgfVxuICAgIC5maWxlLmlzLWJveGVkIC5maWxlLWljb24gLmZhIHtcbiAgICAgIGZvbnQtc2l6ZTogMjFweDsgfVxuICAuZmlsZS5pcy1ib3hlZC5pcy1zbWFsbCAuZmlsZS1pY29uIC5mYSB7XG4gICAgZm9udC1zaXplOiAxNHB4OyB9XG4gIC5maWxlLmlzLWJveGVkLmlzLW1lZGl1bSAuZmlsZS1pY29uIC5mYSB7XG4gICAgZm9udC1zaXplOiAyOHB4OyB9XG4gIC5maWxlLmlzLWJveGVkLmlzLWxhcmdlIC5maWxlLWljb24gLmZhIHtcbiAgICBmb250LXNpemU6IDM1cHg7IH1cbiAgLmZpbGUuaXMtYm94ZWQuaGFzLW5hbWUgLmZpbGUtY3RhIHtcbiAgICBib3JkZXItcmFkaXVzOiA0cHggNHB4IDAgMDsgfVxuICAuZmlsZS5pcy1ib3hlZC5oYXMtbmFtZSAuZmlsZS1uYW1lIHtcbiAgICBib3JkZXItcmFkaXVzOiAwIDAgNHB4IDRweDtcbiAgICBib3JkZXItd2lkdGg6IDAgMXB4IDFweDsgfVxuICAuZmlsZS5pcy1jZW50ZXJlZCB7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH1cbiAgLmZpbGUuaXMtZnVsbHdpZHRoIC5maWxlLWxhYmVsIHtcbiAgICB3aWR0aDogMTAwJTsgfVxuICAuZmlsZS5pcy1mdWxsd2lkdGggLmZpbGUtbmFtZSB7XG4gICAgZmxleC1ncm93OiAxO1xuICAgIG1heC13aWR0aDogbm9uZTsgfVxuICAuZmlsZS5pcy1yaWdodCB7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDsgfVxuICAgIC5maWxlLmlzLXJpZ2h0IC5maWxlLWN0YSB7XG4gICAgICBib3JkZXItcmFkaXVzOiAwIDRweCA0cHggMDsgfVxuICAgIC5maWxlLmlzLXJpZ2h0IC5maWxlLW5hbWUge1xuICAgICAgYm9yZGVyLXJhZGl1czogNHB4IDAgMCA0cHg7XG4gICAgICBib3JkZXItd2lkdGg6IDFweCAwIDFweCAxcHg7XG4gICAgICBvcmRlcjogLTE7IH1cblxuLmZpbGUtbGFiZWwge1xuICBhbGlnbi1pdGVtczogc3RyZXRjaDtcbiAgZGlzcGxheTogZmxleDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAuZmlsZS1sYWJlbDpob3ZlciAuZmlsZS1jdGEge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNlZWVlZWU7XG4gICAgY29sb3I6ICMzNjM2MzY7IH1cbiAgLmZpbGUtbGFiZWw6aG92ZXIgLmZpbGUtbmFtZSB7XG4gICAgYm9yZGVyLWNvbG9yOiAjZDVkNWQ1OyB9XG4gIC5maWxlLWxhYmVsOmFjdGl2ZSAuZmlsZS1jdGEge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNlOGU4ZTg7XG4gICAgY29sb3I6ICMzNjM2MzY7IH1cbiAgLmZpbGUtbGFiZWw6YWN0aXZlIC5maWxlLW5hbWUge1xuICAgIGJvcmRlci1jb2xvcjogI2NmY2ZjZjsgfVxuXG4uZmlsZS1pbnB1dCB7XG4gIGhlaWdodDogMTAwJTtcbiAgbGVmdDogMDtcbiAgb3BhY2l0eTogMDtcbiAgb3V0bGluZTogbm9uZTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIHdpZHRoOiAxMDAlOyB9XG5cbi5maWxlLWN0YSxcbi5maWxlLW5hbWUge1xuICBib3JkZXItY29sb3I6ICNkYmRiZGI7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgZm9udC1zaXplOiAxZW07XG4gIHBhZGRpbmctbGVmdDogMWVtO1xuICBwYWRkaW5nLXJpZ2h0OiAxZW07XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7IH1cblxuLmZpbGUtY3RhIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGVzbW9rZTtcbiAgY29sb3I6ICM0YTRhNGE7IH1cblxuLmZpbGUtbmFtZSB7XG4gIGJvcmRlci1jb2xvcjogI2RiZGJkYjtcbiAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgYm9yZGVyLXdpZHRoOiAxcHggMXB4IDFweCAwO1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWF4LXdpZHRoOiAxNmVtO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpczsgfVxuXG4uZmlsZS1pY29uIHtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZGlzcGxheTogZmxleDtcbiAgaGVpZ2h0OiAxZW07XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBtYXJnaW4tcmlnaHQ6IDAuNWVtO1xuICB3aWR0aDogMWVtOyB9XG4gIC5maWxlLWljb24gLmZhIHtcbiAgICBmb250LXNpemU6IDE0cHg7IH1cblxuLmxhYmVsIHtcbiAgY29sb3I6ICMzNjM2MzY7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBmb250LXNpemU6IDFyZW07XG4gIGZvbnQtd2VpZ2h0OiA3MDA7IH1cbiAgLmxhYmVsOm5vdCg6bGFzdC1jaGlsZCkge1xuICAgIG1hcmdpbi1ib3R0b206IDAuNWVtOyB9XG4gIC5sYWJlbC5pcy1zbWFsbCB7XG4gICAgZm9udC1zaXplOiAwLjc1cmVtOyB9XG4gIC5sYWJlbC5pcy1tZWRpdW0ge1xuICAgIGZvbnQtc2l6ZTogMS4yNXJlbTsgfVxuICAubGFiZWwuaXMtbGFyZ2Uge1xuICAgIGZvbnQtc2l6ZTogMS41cmVtOyB9XG5cbi5oZWxwIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZvbnQtc2l6ZTogMC43NXJlbTtcbiAgbWFyZ2luLXRvcDogMC4yNXJlbTsgfVxuICAuaGVscC5pcy13aGl0ZSB7XG4gICAgY29sb3I6IHdoaXRlOyB9XG4gIC5oZWxwLmlzLWJsYWNrIHtcbiAgICBjb2xvcjogIzBhMGEwYTsgfVxuICAuaGVscC5pcy1saWdodCB7XG4gICAgY29sb3I6IHdoaXRlc21va2U7IH1cbiAgLmhlbHAuaXMtZGFyayB7XG4gICAgY29sb3I6ICMzNjM2MzY7IH1cbiAgLmhlbHAuaXMtcHJpbWFyeSB7XG4gICAgY29sb3I6ICMwMGQxYjI7IH1cbiAgLmhlbHAuaXMtbGluayB7XG4gICAgY29sb3I6ICMzMjczZGM7IH1cbiAgLmhlbHAuaXMtaW5mbyB7XG4gICAgY29sb3I6ICMyMDljZWU7IH1cbiAgLmhlbHAuaXMtc3VjY2VzcyB7XG4gICAgY29sb3I6ICMyM2QxNjA7IH1cbiAgLmhlbHAuaXMtd2FybmluZyB7XG4gICAgY29sb3I6ICNmZmRkNTc7IH1cbiAgLmhlbHAuaXMtZGFuZ2VyIHtcbiAgICBjb2xvcjogI2ZmMzg2MDsgfVxuXG4uZmllbGQ6bm90KDpsYXN0LWNoaWxkKSB7XG4gIG1hcmdpbi1ib3R0b206IDAuNzVyZW07IH1cblxuLmZpZWxkLmhhcy1hZGRvbnMge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7IH1cbiAgLmZpZWxkLmhhcy1hZGRvbnMgLmNvbnRyb2w6bm90KDpsYXN0LWNoaWxkKSB7XG4gICAgbWFyZ2luLXJpZ2h0OiAtMXB4OyB9XG4gIC5maWVsZC5oYXMtYWRkb25zIC5jb250cm9sOm5vdCg6Zmlyc3QtY2hpbGQpOm5vdCg6bGFzdC1jaGlsZCkgLmJ1dHRvbixcbiAgLmZpZWxkLmhhcy1hZGRvbnMgLmNvbnRyb2w6bm90KDpmaXJzdC1jaGlsZCk6bm90KDpsYXN0LWNoaWxkKSAuaW5wdXQsXG4gIC5maWVsZC5oYXMtYWRkb25zIC5jb250cm9sOm5vdCg6Zmlyc3QtY2hpbGQpOm5vdCg6bGFzdC1jaGlsZCkgLnNlbGVjdCBzZWxlY3Qge1xuICAgIGJvcmRlci1yYWRpdXM6IDA7IH1cbiAgLmZpZWxkLmhhcy1hZGRvbnMgLmNvbnRyb2w6Zmlyc3QtY2hpbGQ6bm90KDpvbmx5LWNoaWxkKSAuYnV0dG9uLFxuICAuZmllbGQuaGFzLWFkZG9ucyAuY29udHJvbDpmaXJzdC1jaGlsZDpub3QoOm9ubHktY2hpbGQpIC5pbnB1dCxcbiAgLmZpZWxkLmhhcy1hZGRvbnMgLmNvbnRyb2w6Zmlyc3QtY2hpbGQ6bm90KDpvbmx5LWNoaWxkKSAuc2VsZWN0IHNlbGVjdCB7XG4gICAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDA7XG4gICAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDA7IH1cbiAgLmZpZWxkLmhhcy1hZGRvbnMgLmNvbnRyb2w6bGFzdC1jaGlsZDpub3QoOm9ubHktY2hpbGQpIC5idXR0b24sXG4gIC5maWVsZC5oYXMtYWRkb25zIC5jb250cm9sOmxhc3QtY2hpbGQ6bm90KDpvbmx5LWNoaWxkKSAuaW5wdXQsXG4gIC5maWVsZC5oYXMtYWRkb25zIC5jb250cm9sOmxhc3QtY2hpbGQ6bm90KDpvbmx5LWNoaWxkKSAuc2VsZWN0IHNlbGVjdCB7XG4gICAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogMDtcbiAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAwOyB9XG4gIC5maWVsZC5oYXMtYWRkb25zIC5jb250cm9sIC5idXR0b246bm90KFtkaXNhYmxlZF0pOmhvdmVyLCAuZmllbGQuaGFzLWFkZG9ucyAuY29udHJvbCAuYnV0dG9uOm5vdChbZGlzYWJsZWRdKS5pcy1ob3ZlcmVkLFxuICAuZmllbGQuaGFzLWFkZG9ucyAuY29udHJvbCAuaW5wdXQ6bm90KFtkaXNhYmxlZF0pOmhvdmVyLFxuICAuZmllbGQuaGFzLWFkZG9ucyAuY29udHJvbCAuaW5wdXQ6bm90KFtkaXNhYmxlZF0pLmlzLWhvdmVyZWQsXG4gIC5maWVsZC5oYXMtYWRkb25zIC5jb250cm9sIC5zZWxlY3Qgc2VsZWN0Om5vdChbZGlzYWJsZWRdKTpob3ZlcixcbiAgLmZpZWxkLmhhcy1hZGRvbnMgLmNvbnRyb2wgLnNlbGVjdCBzZWxlY3Q6bm90KFtkaXNhYmxlZF0pLmlzLWhvdmVyZWQge1xuICAgIHotaW5kZXg6IDI7IH1cbiAgLmZpZWxkLmhhcy1hZGRvbnMgLmNvbnRyb2wgLmJ1dHRvbjpub3QoW2Rpc2FibGVkXSk6Zm9jdXMsIC5maWVsZC5oYXMtYWRkb25zIC5jb250cm9sIC5idXR0b246bm90KFtkaXNhYmxlZF0pLmlzLWZvY3VzZWQsIC5maWVsZC5oYXMtYWRkb25zIC5jb250cm9sIC5idXR0b246bm90KFtkaXNhYmxlZF0pOmFjdGl2ZSwgLmZpZWxkLmhhcy1hZGRvbnMgLmNvbnRyb2wgLmJ1dHRvbjpub3QoW2Rpc2FibGVkXSkuaXMtYWN0aXZlLFxuICAuZmllbGQuaGFzLWFkZG9ucyAuY29udHJvbCAuaW5wdXQ6bm90KFtkaXNhYmxlZF0pOmZvY3VzLFxuICAuZmllbGQuaGFzLWFkZG9ucyAuY29udHJvbCAuaW5wdXQ6bm90KFtkaXNhYmxlZF0pLmlzLWZvY3VzZWQsXG4gIC5maWVsZC5oYXMtYWRkb25zIC5jb250cm9sIC5pbnB1dDpub3QoW2Rpc2FibGVkXSk6YWN0aXZlLFxuICAuZmllbGQuaGFzLWFkZG9ucyAuY29udHJvbCAuaW5wdXQ6bm90KFtkaXNhYmxlZF0pLmlzLWFjdGl2ZSxcbiAgLmZpZWxkLmhhcy1hZGRvbnMgLmNvbnRyb2wgLnNlbGVjdCBzZWxlY3Q6bm90KFtkaXNhYmxlZF0pOmZvY3VzLFxuICAuZmllbGQuaGFzLWFkZG9ucyAuY29udHJvbCAuc2VsZWN0IHNlbGVjdDpub3QoW2Rpc2FibGVkXSkuaXMtZm9jdXNlZCxcbiAgLmZpZWxkLmhhcy1hZGRvbnMgLmNvbnRyb2wgLnNlbGVjdCBzZWxlY3Q6bm90KFtkaXNhYmxlZF0pOmFjdGl2ZSxcbiAgLmZpZWxkLmhhcy1hZGRvbnMgLmNvbnRyb2wgLnNlbGVjdCBzZWxlY3Q6bm90KFtkaXNhYmxlZF0pLmlzLWFjdGl2ZSB7XG4gICAgei1pbmRleDogMzsgfVxuICAgIC5maWVsZC5oYXMtYWRkb25zIC5jb250cm9sIC5idXR0b246bm90KFtkaXNhYmxlZF0pOmZvY3VzOmhvdmVyLCAuZmllbGQuaGFzLWFkZG9ucyAuY29udHJvbCAuYnV0dG9uOm5vdChbZGlzYWJsZWRdKS5pcy1mb2N1c2VkOmhvdmVyLCAuZmllbGQuaGFzLWFkZG9ucyAuY29udHJvbCAuYnV0dG9uOm5vdChbZGlzYWJsZWRdKTphY3RpdmU6aG92ZXIsIC5maWVsZC5oYXMtYWRkb25zIC5jb250cm9sIC5idXR0b246bm90KFtkaXNhYmxlZF0pLmlzLWFjdGl2ZTpob3ZlcixcbiAgICAuZmllbGQuaGFzLWFkZG9ucyAuY29udHJvbCAuaW5wdXQ6bm90KFtkaXNhYmxlZF0pOmZvY3VzOmhvdmVyLFxuICAgIC5maWVsZC5oYXMtYWRkb25zIC5jb250cm9sIC5pbnB1dDpub3QoW2Rpc2FibGVkXSkuaXMtZm9jdXNlZDpob3ZlcixcbiAgICAuZmllbGQuaGFzLWFkZG9ucyAuY29udHJvbCAuaW5wdXQ6bm90KFtkaXNhYmxlZF0pOmFjdGl2ZTpob3ZlcixcbiAgICAuZmllbGQuaGFzLWFkZG9ucyAuY29udHJvbCAuaW5wdXQ6bm90KFtkaXNhYmxlZF0pLmlzLWFjdGl2ZTpob3ZlcixcbiAgICAuZmllbGQuaGFzLWFkZG9ucyAuY29udHJvbCAuc2VsZWN0IHNlbGVjdDpub3QoW2Rpc2FibGVkXSk6Zm9jdXM6aG92ZXIsXG4gICAgLmZpZWxkLmhhcy1hZGRvbnMgLmNvbnRyb2wgLnNlbGVjdCBzZWxlY3Q6bm90KFtkaXNhYmxlZF0pLmlzLWZvY3VzZWQ6aG92ZXIsXG4gICAgLmZpZWxkLmhhcy1hZGRvbnMgLmNvbnRyb2wgLnNlbGVjdCBzZWxlY3Q6bm90KFtkaXNhYmxlZF0pOmFjdGl2ZTpob3ZlcixcbiAgICAuZmllbGQuaGFzLWFkZG9ucyAuY29udHJvbCAuc2VsZWN0IHNlbGVjdDpub3QoW2Rpc2FibGVkXSkuaXMtYWN0aXZlOmhvdmVyIHtcbiAgICAgIHotaW5kZXg6IDQ7IH1cbiAgLmZpZWxkLmhhcy1hZGRvbnMgLmNvbnRyb2wuaXMtZXhwYW5kZWQge1xuICAgIGZsZXgtZ3JvdzogMTtcbiAgICBmbGV4LXNocmluazogMTsgfVxuICAuZmllbGQuaGFzLWFkZG9ucy5oYXMtYWRkb25zLWNlbnRlcmVkIHtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgfVxuICAuZmllbGQuaGFzLWFkZG9ucy5oYXMtYWRkb25zLXJpZ2h0IHtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kOyB9XG4gIC5maWVsZC5oYXMtYWRkb25zLmhhcy1hZGRvbnMtZnVsbHdpZHRoIC5jb250cm9sIHtcbiAgICBmbGV4LWdyb3c6IDE7XG4gICAgZmxleC1zaHJpbms6IDA7IH1cblxuLmZpZWxkLmlzLWdyb3VwZWQge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7IH1cbiAgLmZpZWxkLmlzLWdyb3VwZWQgPiAuY29udHJvbCB7XG4gICAgZmxleC1zaHJpbms6IDA7IH1cbiAgICAuZmllbGQuaXMtZ3JvdXBlZCA+IC5jb250cm9sOm5vdCg6bGFzdC1jaGlsZCkge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICAgIG1hcmdpbi1yaWdodDogMC43NXJlbTsgfVxuICAgIC5maWVsZC5pcy1ncm91cGVkID4gLmNvbnRyb2wuaXMtZXhwYW5kZWQge1xuICAgICAgZmxleC1ncm93OiAxO1xuICAgICAgZmxleC1zaHJpbms6IDE7IH1cbiAgLmZpZWxkLmlzLWdyb3VwZWQuaXMtZ3JvdXBlZC1jZW50ZXJlZCB7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH1cbiAgLmZpZWxkLmlzLWdyb3VwZWQuaXMtZ3JvdXBlZC1yaWdodCB7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDsgfVxuICAuZmllbGQuaXMtZ3JvdXBlZC5pcy1ncm91cGVkLW11bHRpbGluZSB7XG4gICAgZmxleC13cmFwOiB3cmFwOyB9XG4gICAgLmZpZWxkLmlzLWdyb3VwZWQuaXMtZ3JvdXBlZC1tdWx0aWxpbmUgPiAuY29udHJvbDpsYXN0LWNoaWxkLCAuZmllbGQuaXMtZ3JvdXBlZC5pcy1ncm91cGVkLW11bHRpbGluZSA+IC5jb250cm9sOm5vdCg6bGFzdC1jaGlsZCkge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMC43NXJlbTsgfVxuICAgIC5maWVsZC5pcy1ncm91cGVkLmlzLWdyb3VwZWQtbXVsdGlsaW5lOmxhc3QtY2hpbGQge1xuICAgICAgbWFyZ2luLWJvdHRvbTogLTAuNzVyZW07IH1cbiAgICAuZmllbGQuaXMtZ3JvdXBlZC5pcy1ncm91cGVkLW11bHRpbGluZTpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDA7IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY5cHgpLCBwcmludCB7XG4gIC5maWVsZC5pcy1ob3Jpem9udGFsIHtcbiAgICBkaXNwbGF5OiBmbGV4OyB9IH1cblxuLmZpZWxkLWxhYmVsIC5sYWJlbCB7XG4gIGZvbnQtc2l6ZTogaW5oZXJpdDsgfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAuZmllbGQtbGFiZWwge1xuICAgIG1hcmdpbi1ib3R0b206IDAuNXJlbTsgfSB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OXB4KSwgcHJpbnQge1xuICAuZmllbGQtbGFiZWwge1xuICAgIGZsZXgtYmFzaXM6IDA7XG4gICAgZmxleC1ncm93OiAxO1xuICAgIGZsZXgtc2hyaW5rOiAwO1xuICAgIG1hcmdpbi1yaWdodDogMS41cmVtO1xuICAgIHRleHQtYWxpZ246IHJpZ2h0OyB9XG4gICAgLmZpZWxkLWxhYmVsLmlzLXNtYWxsIHtcbiAgICAgIGZvbnQtc2l6ZTogMC43NXJlbTtcbiAgICAgIHBhZGRpbmctdG9wOiAwLjM3NWVtOyB9XG4gICAgLmZpZWxkLWxhYmVsLmlzLW5vcm1hbCB7XG4gICAgICBwYWRkaW5nLXRvcDogMC4zNzVlbTsgfVxuICAgIC5maWVsZC1sYWJlbC5pcy1tZWRpdW0ge1xuICAgICAgZm9udC1zaXplOiAxLjI1cmVtO1xuICAgICAgcGFkZGluZy10b3A6IDAuMzc1ZW07IH1cbiAgICAuZmllbGQtbGFiZWwuaXMtbGFyZ2Uge1xuICAgICAgZm9udC1zaXplOiAxLjVyZW07XG4gICAgICBwYWRkaW5nLXRvcDogMC4zNzVlbTsgfSB9XG5cbi5maWVsZC1ib2R5IC5maWVsZCAuZmllbGQge1xuICBtYXJnaW4tYm90dG9tOiAwOyB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OXB4KSwgcHJpbnQge1xuICAuZmllbGQtYm9keSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWJhc2lzOiAwO1xuICAgIGZsZXgtZ3JvdzogNTtcbiAgICBmbGV4LXNocmluazogMTsgfVxuICAgIC5maWVsZC1ib2R5IC5maWVsZCB7XG4gICAgICBtYXJnaW4tYm90dG9tOiAwOyB9XG4gICAgLmZpZWxkLWJvZHkgPiAuZmllbGQge1xuICAgICAgZmxleC1zaHJpbms6IDE7IH1cbiAgICAgIC5maWVsZC1ib2R5ID4gLmZpZWxkOm5vdCguaXMtbmFycm93KSB7XG4gICAgICAgIGZsZXgtZ3JvdzogMTsgfVxuICAgICAgLmZpZWxkLWJvZHkgPiAuZmllbGQ6bm90KDpsYXN0LWNoaWxkKSB7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMC43NXJlbTsgfSB9XG5cbi5jb250cm9sIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgY2xlYXI6IGJvdGg7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0ZXh0LWFsaWduOiBsZWZ0OyB9XG4gIC5jb250cm9sLmhhcy1pY29ucy1sZWZ0IC5pbnB1dDpmb2N1cyB+IC5pY29uLFxuICAuY29udHJvbC5oYXMtaWNvbnMtbGVmdCAuc2VsZWN0OmZvY3VzIH4gLmljb24sIC5jb250cm9sLmhhcy1pY29ucy1yaWdodCAuaW5wdXQ6Zm9jdXMgfiAuaWNvbixcbiAgLmNvbnRyb2wuaGFzLWljb25zLXJpZ2h0IC5zZWxlY3Q6Zm9jdXMgfiAuaWNvbiB7XG4gICAgY29sb3I6ICM3YTdhN2E7IH1cbiAgLmNvbnRyb2wuaGFzLWljb25zLWxlZnQgLmlucHV0LmlzLXNtYWxsIH4gLmljb24sXG4gIC5jb250cm9sLmhhcy1pY29ucy1sZWZ0IC5zZWxlY3QuaXMtc21hbGwgfiAuaWNvbiwgLmNvbnRyb2wuaGFzLWljb25zLXJpZ2h0IC5pbnB1dC5pcy1zbWFsbCB+IC5pY29uLFxuICAuY29udHJvbC5oYXMtaWNvbnMtcmlnaHQgLnNlbGVjdC5pcy1zbWFsbCB+IC5pY29uIHtcbiAgICBmb250LXNpemU6IDAuNzVyZW07IH1cbiAgLmNvbnRyb2wuaGFzLWljb25zLWxlZnQgLmlucHV0LmlzLW1lZGl1bSB+IC5pY29uLFxuICAuY29udHJvbC5oYXMtaWNvbnMtbGVmdCAuc2VsZWN0LmlzLW1lZGl1bSB+IC5pY29uLCAuY29udHJvbC5oYXMtaWNvbnMtcmlnaHQgLmlucHV0LmlzLW1lZGl1bSB+IC5pY29uLFxuICAuY29udHJvbC5oYXMtaWNvbnMtcmlnaHQgLnNlbGVjdC5pcy1tZWRpdW0gfiAuaWNvbiB7XG4gICAgZm9udC1zaXplOiAxLjI1cmVtOyB9XG4gIC5jb250cm9sLmhhcy1pY29ucy1sZWZ0IC5pbnB1dC5pcy1sYXJnZSB+IC5pY29uLFxuICAuY29udHJvbC5oYXMtaWNvbnMtbGVmdCAuc2VsZWN0LmlzLWxhcmdlIH4gLmljb24sIC5jb250cm9sLmhhcy1pY29ucy1yaWdodCAuaW5wdXQuaXMtbGFyZ2UgfiAuaWNvbixcbiAgLmNvbnRyb2wuaGFzLWljb25zLXJpZ2h0IC5zZWxlY3QuaXMtbGFyZ2UgfiAuaWNvbiB7XG4gICAgZm9udC1zaXplOiAxLjVyZW07IH1cbiAgLmNvbnRyb2wuaGFzLWljb25zLWxlZnQgLmljb24sIC5jb250cm9sLmhhcy1pY29ucy1yaWdodCAuaWNvbiB7XG4gICAgY29sb3I6ICNkYmRiZGI7XG4gICAgaGVpZ2h0OiAyLjI1ZW07XG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICB3aWR0aDogMi4yNWVtO1xuICAgIHotaW5kZXg6IDQ7IH1cbiAgLmNvbnRyb2wuaGFzLWljb25zLWxlZnQgLmlucHV0LFxuICAuY29udHJvbC5oYXMtaWNvbnMtbGVmdCAuc2VsZWN0IHNlbGVjdCB7XG4gICAgcGFkZGluZy1sZWZ0OiAyLjI1ZW07IH1cbiAgLmNvbnRyb2wuaGFzLWljb25zLWxlZnQgLmljb24uaXMtbGVmdCB7XG4gICAgbGVmdDogMDsgfVxuICAuY29udHJvbC5oYXMtaWNvbnMtcmlnaHQgLmlucHV0LFxuICAuY29udHJvbC5oYXMtaWNvbnMtcmlnaHQgLnNlbGVjdCBzZWxlY3Qge1xuICAgIHBhZGRpbmctcmlnaHQ6IDIuMjVlbTsgfVxuICAuY29udHJvbC5oYXMtaWNvbnMtcmlnaHQgLmljb24uaXMtcmlnaHQge1xuICAgIHJpZ2h0OiAwOyB9XG4gIC5jb250cm9sLmlzLWxvYWRpbmc6OmFmdGVyIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGUgIWltcG9ydGFudDtcbiAgICByaWdodDogMC42MjVlbTtcbiAgICB0b3A6IDAuNjI1ZW07XG4gICAgei1pbmRleDogNDsgfVxuICAuY29udHJvbC5pcy1sb2FkaW5nLmlzLXNtYWxsOmFmdGVyIHtcbiAgICBmb250LXNpemU6IDAuNzVyZW07IH1cbiAgLmNvbnRyb2wuaXMtbG9hZGluZy5pcy1tZWRpdW06YWZ0ZXIge1xuICAgIGZvbnQtc2l6ZTogMS4yNXJlbTsgfVxuICAuY29udHJvbC5pcy1sb2FkaW5nLmlzLWxhcmdlOmFmdGVyIHtcbiAgICBmb250LXNpemU6IDEuNXJlbTsgfVxuXG4uYnJlYWRjcnVtYiB7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDsgfVxuICAuYnJlYWRjcnVtYiBhIHtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGNvbG9yOiAjMzI3M2RjO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgcGFkZGluZzogMCAwLjc1ZW07IH1cbiAgICAuYnJlYWRjcnVtYiBhOmhvdmVyIHtcbiAgICAgIGNvbG9yOiAjMzYzNjM2OyB9XG4gIC5icmVhZGNydW1iIGxpIHtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGRpc3BsYXk6IGZsZXg7IH1cbiAgICAuYnJlYWRjcnVtYiBsaTpmaXJzdC1jaGlsZCBhIHtcbiAgICAgIHBhZGRpbmctbGVmdDogMDsgfVxuICAgIC5icmVhZGNydW1iIGxpLmlzLWFjdGl2ZSBhIHtcbiAgICAgIGNvbG9yOiAjMzYzNjM2O1xuICAgICAgY3Vyc29yOiBkZWZhdWx0O1xuICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7IH1cbiAgICAuYnJlYWRjcnVtYiBsaSArIGxpOjpiZWZvcmUge1xuICAgICAgY29sb3I6ICNiNWI1YjU7XG4gICAgICBjb250ZW50OiBcIlxcMDAwMmZcIjsgfVxuICAuYnJlYWRjcnVtYiB1bCxcbiAgLmJyZWFkY3J1bWIgb2wge1xuICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDsgfVxuICAuYnJlYWRjcnVtYiAuaWNvbjpmaXJzdC1jaGlsZCB7XG4gICAgbWFyZ2luLXJpZ2h0OiAwLjVlbTsgfVxuICAuYnJlYWRjcnVtYiAuaWNvbjpsYXN0LWNoaWxkIHtcbiAgICBtYXJnaW4tbGVmdDogMC41ZW07IH1cbiAgLmJyZWFkY3J1bWIuaXMtY2VudGVyZWQgb2wsXG4gIC5icmVhZGNydW1iLmlzLWNlbnRlcmVkIHVsIHtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgfVxuICAuYnJlYWRjcnVtYi5pcy1yaWdodCBvbCxcbiAgLmJyZWFkY3J1bWIuaXMtcmlnaHQgdWwge1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7IH1cbiAgLmJyZWFkY3J1bWIuaXMtc21hbGwge1xuICAgIGZvbnQtc2l6ZTogMC43NXJlbTsgfVxuICAuYnJlYWRjcnVtYi5pcy1tZWRpdW0ge1xuICAgIGZvbnQtc2l6ZTogMS4yNXJlbTsgfVxuICAuYnJlYWRjcnVtYi5pcy1sYXJnZSB7XG4gICAgZm9udC1zaXplOiAxLjVyZW07IH1cbiAgLmJyZWFkY3J1bWIuaGFzLWFycm93LXNlcGFyYXRvciBsaSArIGxpOjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFwwMjE5MlwiOyB9XG4gIC5icmVhZGNydW1iLmhhcy1idWxsZXQtc2VwYXJhdG9yIGxpICsgbGk6OmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXDAyMDIyXCI7IH1cbiAgLmJyZWFkY3J1bWIuaGFzLWRvdC1zZXBhcmF0b3IgbGkgKyBsaTo6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcMDAwYjdcIjsgfVxuICAuYnJlYWRjcnVtYi5oYXMtc3VjY2VlZHMtc2VwYXJhdG9yIGxpICsgbGk6OmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXDAyMjdCXCI7IH1cblxuLmNhcmQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgYm94LXNoYWRvdzogMCAycHggM3B4IHJnYmEoMTAsIDEwLCAxMCwgMC4xKSwgMCAwIDAgMXB4IHJnYmEoMTAsIDEwLCAxMCwgMC4xKTtcbiAgY29sb3I6ICM0YTRhNGE7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG5cbi5jYXJkLWhlYWRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBhbGlnbi1pdGVtczogc3RyZXRjaDtcbiAgYm94LXNoYWRvdzogMCAxcHggMnB4IHJnYmEoMTAsIDEwLCAxMCwgMC4xKTtcbiAgZGlzcGxheTogZmxleDsgfVxuXG4uY2FyZC1oZWFkZXItdGl0bGUge1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBjb2xvcjogIzM2MzYzNjtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1ncm93OiAxO1xuICBmb250LXdlaWdodDogNzAwO1xuICBwYWRkaW5nOiAwLjc1cmVtOyB9XG4gIC5jYXJkLWhlYWRlci10aXRsZS5pcy1jZW50ZXJlZCB7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH1cblxuLmNhcmQtaGVhZGVyLWljb24ge1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBwYWRkaW5nOiAwLjc1cmVtOyB9XG5cbi5jYXJkLWltYWdlIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuXG4uY2FyZC1jb250ZW50IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIHBhZGRpbmc6IDEuNXJlbTsgfVxuXG4uY2FyZC1mb290ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNkYmRiZGI7XG4gIGFsaWduLWl0ZW1zOiBzdHJldGNoO1xuICBkaXNwbGF5OiBmbGV4OyB9XG5cbi5jYXJkLWZvb3Rlci1pdGVtIHtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1iYXNpczogMDtcbiAgZmxleC1ncm93OiAxO1xuICBmbGV4LXNocmluazogMDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHBhZGRpbmc6IDAuNzVyZW07IH1cbiAgLmNhcmQtZm9vdGVyLWl0ZW06bm90KDpsYXN0LWNoaWxkKSB7XG4gICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgI2RiZGJkYjsgfVxuXG4uY2FyZCAubWVkaWE6bm90KDpsYXN0LWNoaWxkKSB7XG4gIG1hcmdpbi1ib3R0b206IDEuNXJlbTsgfVxuXG4uZHJvcGRvd24ge1xuICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogdG9wOyB9XG4gIC5kcm9wZG93bi5pcy1hY3RpdmUgLmRyb3Bkb3duLW1lbnUsIC5kcm9wZG93bi5pcy1ob3ZlcmFibGU6aG92ZXIgLmRyb3Bkb3duLW1lbnUge1xuICAgIGRpc3BsYXk6IGJsb2NrOyB9XG4gIC5kcm9wZG93bi5pcy1yaWdodCAuZHJvcGRvd24tbWVudSB7XG4gICAgbGVmdDogYXV0bztcbiAgICByaWdodDogMDsgfVxuICAuZHJvcGRvd24uaXMtdXAgLmRyb3Bkb3duLW1lbnUge1xuICAgIGJvdHRvbTogMTAwJTtcbiAgICBwYWRkaW5nLWJvdHRvbTogNHB4O1xuICAgIHBhZGRpbmctdG9wOiBpbml0aWFsO1xuICAgIHRvcDogYXV0bzsgfVxuXG4uZHJvcGRvd24tbWVudSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGxlZnQ6IDA7XG4gIG1pbi13aWR0aDogMTJyZW07XG4gIHBhZGRpbmctdG9wOiA0cHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAxMDAlO1xuICB6LWluZGV4OiAyMDsgfVxuXG4uZHJvcGRvd24tY29udGVudCB7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIGJveC1zaGFkb3c6IDAgMnB4IDNweCByZ2JhKDEwLCAxMCwgMTAsIDAuMSksIDAgMCAwIDFweCByZ2JhKDEwLCAxMCwgMTAsIDAuMSk7XG4gIHBhZGRpbmctYm90dG9tOiAwLjVyZW07XG4gIHBhZGRpbmctdG9wOiAwLjVyZW07IH1cblxuLmRyb3Bkb3duLWl0ZW0ge1xuICBjb2xvcjogIzRhNGE0YTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZvbnQtc2l6ZTogMC44NzVyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIHBhZGRpbmc6IDAuMzc1cmVtIDFyZW07XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuXG5hLmRyb3Bkb3duLWl0ZW0sXG5idXR0b24uZHJvcGRvd24taXRlbSB7XG4gIHBhZGRpbmctcmlnaHQ6IDNyZW07XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIHdpZHRoOiAxMDAlOyB9XG4gIGEuZHJvcGRvd24taXRlbTpob3ZlcixcbiAgYnV0dG9uLmRyb3Bkb3duLWl0ZW06aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlc21va2U7XG4gICAgY29sb3I6ICMwYTBhMGE7IH1cbiAgYS5kcm9wZG93bi1pdGVtLmlzLWFjdGl2ZSxcbiAgYnV0dG9uLmRyb3Bkb3duLWl0ZW0uaXMtYWN0aXZlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzI3M2RjO1xuICAgIGNvbG9yOiAjZmZmOyB9XG5cbi5kcm9wZG93bi1kaXZpZGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2RiZGJkYjtcbiAgYm9yZGVyOiBub25lO1xuICBkaXNwbGF5OiBibG9jaztcbiAgaGVpZ2h0OiAxcHg7XG4gIG1hcmdpbjogMC41cmVtIDA7IH1cblxuLmxldmVsIHtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOyB9XG4gIC5sZXZlbCBjb2RlIHtcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7IH1cbiAgLmxldmVsIGltZyB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7IH1cbiAgLmxldmVsLmlzLW1vYmlsZSB7XG4gICAgZGlzcGxheTogZmxleDsgfVxuICAgIC5sZXZlbC5pcy1tb2JpbGUgLmxldmVsLWxlZnQsXG4gICAgLmxldmVsLmlzLW1vYmlsZSAubGV2ZWwtcmlnaHQge1xuICAgICAgZGlzcGxheTogZmxleDsgfVxuICAgIC5sZXZlbC5pcy1tb2JpbGUgLmxldmVsLWxlZnQgKyAubGV2ZWwtcmlnaHQge1xuICAgICAgbWFyZ2luLXRvcDogMDsgfVxuICAgIC5sZXZlbC5pcy1tb2JpbGUgLmxldmVsLWl0ZW06bm90KDpsYXN0LWNoaWxkKSB7XG4gICAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgICAgbWFyZ2luLXJpZ2h0OiAwLjc1cmVtOyB9XG4gICAgLmxldmVsLmlzLW1vYmlsZSAubGV2ZWwtaXRlbTpub3QoLmlzLW5hcnJvdykge1xuICAgICAgZmxleC1ncm93OiAxOyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OXB4KSwgcHJpbnQge1xuICAgIC5sZXZlbCB7XG4gICAgICBkaXNwbGF5OiBmbGV4OyB9XG4gICAgICAubGV2ZWwgPiAubGV2ZWwtaXRlbTpub3QoLmlzLW5hcnJvdykge1xuICAgICAgICBmbGV4LWdyb3c6IDE7IH0gfVxuXG4ubGV2ZWwtaXRlbSB7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtYmFzaXM6IGF1dG87XG4gIGZsZXgtZ3JvdzogMDtcbiAgZmxleC1zaHJpbms6IDA7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyOyB9XG4gIC5sZXZlbC1pdGVtIC50aXRsZSxcbiAgLmxldmVsLWl0ZW0gLnN1YnRpdGxlIHtcbiAgICBtYXJnaW4tYm90dG9tOiAwOyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLmxldmVsLWl0ZW06bm90KDpsYXN0LWNoaWxkKSB7XG4gICAgICBtYXJnaW4tYm90dG9tOiAwLjc1cmVtOyB9IH1cblxuLmxldmVsLWxlZnQsXG4ubGV2ZWwtcmlnaHQge1xuICBmbGV4LWJhc2lzOiBhdXRvO1xuICBmbGV4LWdyb3c6IDA7XG4gIGZsZXgtc2hyaW5rOiAwOyB9XG4gIC5sZXZlbC1sZWZ0IC5sZXZlbC1pdGVtLmlzLWZsZXhpYmxlLFxuICAubGV2ZWwtcmlnaHQgLmxldmVsLWl0ZW0uaXMtZmxleGlibGUge1xuICAgIGZsZXgtZ3JvdzogMTsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjlweCksIHByaW50IHtcbiAgICAubGV2ZWwtbGVmdCAubGV2ZWwtaXRlbTpub3QoOmxhc3QtY2hpbGQpLFxuICAgIC5sZXZlbC1yaWdodCAubGV2ZWwtaXRlbTpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICAgIG1hcmdpbi1yaWdodDogMC43NXJlbTsgfSB9XG5cbi5sZXZlbC1sZWZ0IHtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0OyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLmxldmVsLWxlZnQgKyAubGV2ZWwtcmlnaHQge1xuICAgICAgbWFyZ2luLXRvcDogMS41cmVtOyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY5cHgpLCBwcmludCB7XG4gICAgLmxldmVsLWxlZnQge1xuICAgICAgZGlzcGxheTogZmxleDsgfSB9XG5cbi5sZXZlbC1yaWdodCB7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY5cHgpLCBwcmludCB7XG4gICAgLmxldmVsLXJpZ2h0IHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7IH0gfVxuXG4ubGlzdCB7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIGJveC1zaGFkb3c6IDAgMnB4IDNweCByZ2JhKDEwLCAxMCwgMTAsIDAuMSksIDAgMCAwIDFweCByZ2JhKDEwLCAxMCwgMTAsIDAuMSk7IH1cblxuLmxpc3QtaXRlbSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwYWRkaW5nOiAwLjVlbSAxZW07IH1cbiAgLmxpc3QtaXRlbTpub3QoYSkge1xuICAgIGNvbG9yOiAjNGE0YTRhOyB9XG4gIC5saXN0LWl0ZW06Zmlyc3QtY2hpbGQge1xuICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDRweDtcbiAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogNHB4OyB9XG4gIC5saXN0LWl0ZW06bGFzdC1jaGlsZCB7XG4gICAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogNHB4O1xuICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiA0cHg7IH1cbiAgLmxpc3QtaXRlbTpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2RiZGJkYjsgfVxuICAubGlzdC1pdGVtLmlzLWFjdGl2ZSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzMyNzNkYztcbiAgICBjb2xvcjogI2ZmZjsgfVxuXG5hLmxpc3QtaXRlbSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlc21va2U7XG4gIGN1cnNvcjogcG9pbnRlcjsgfVxuXG4ubWVkaWEge1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgZGlzcGxheTogZmxleDtcbiAgdGV4dC1hbGlnbjogbGVmdDsgfVxuICAubWVkaWEgLmNvbnRlbnQ6bm90KDpsYXN0LWNoaWxkKSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMC43NXJlbTsgfVxuICAubWVkaWEgLm1lZGlhIHtcbiAgICBib3JkZXItdG9wOiAxcHggc29saWQgcmdiYSgyMTksIDIxOSwgMjE5LCAwLjUpO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgcGFkZGluZy10b3A6IDAuNzVyZW07IH1cbiAgICAubWVkaWEgLm1lZGlhIC5jb250ZW50Om5vdCg6bGFzdC1jaGlsZCksXG4gICAgLm1lZGlhIC5tZWRpYSAuY29udHJvbDpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDAuNXJlbTsgfVxuICAgIC5tZWRpYSAubWVkaWEgLm1lZGlhIHtcbiAgICAgIHBhZGRpbmctdG9wOiAwLjVyZW07IH1cbiAgICAgIC5tZWRpYSAubWVkaWEgLm1lZGlhICsgLm1lZGlhIHtcbiAgICAgICAgbWFyZ2luLXRvcDogMC41cmVtOyB9XG4gIC5tZWRpYSArIC5tZWRpYSB7XG4gICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkIHJnYmEoMjE5LCAyMTksIDIxOSwgMC41KTtcbiAgICBtYXJnaW4tdG9wOiAxcmVtO1xuICAgIHBhZGRpbmctdG9wOiAxcmVtOyB9XG4gIC5tZWRpYS5pcy1sYXJnZSArIC5tZWRpYSB7XG4gICAgbWFyZ2luLXRvcDogMS41cmVtO1xuICAgIHBhZGRpbmctdG9wOiAxLjVyZW07IH1cblxuLm1lZGlhLWxlZnQsXG4ubWVkaWEtcmlnaHQge1xuICBmbGV4LWJhc2lzOiBhdXRvO1xuICBmbGV4LWdyb3c6IDA7XG4gIGZsZXgtc2hyaW5rOiAwOyB9XG5cbi5tZWRpYS1sZWZ0IHtcbiAgbWFyZ2luLXJpZ2h0OiAxcmVtOyB9XG5cbi5tZWRpYS1yaWdodCB7XG4gIG1hcmdpbi1sZWZ0OiAxcmVtOyB9XG5cbi5tZWRpYS1jb250ZW50IHtcbiAgZmxleC1iYXNpczogYXV0bztcbiAgZmxleC1ncm93OiAxO1xuICBmbGV4LXNocmluazogMTtcbiAgdGV4dC1hbGlnbjogbGVmdDsgfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAubWVkaWEtY29udGVudCB7XG4gICAgb3ZlcmZsb3cteDogYXV0bzsgfSB9XG5cbi5tZW51IHtcbiAgZm9udC1zaXplOiAxcmVtOyB9XG4gIC5tZW51LmlzLXNtYWxsIHtcbiAgICBmb250LXNpemU6IDAuNzVyZW07IH1cbiAgLm1lbnUuaXMtbWVkaXVtIHtcbiAgICBmb250LXNpemU6IDEuMjVyZW07IH1cbiAgLm1lbnUuaXMtbGFyZ2Uge1xuICAgIGZvbnQtc2l6ZTogMS41cmVtOyB9XG5cbi5tZW51LWxpc3Qge1xuICBsaW5lLWhlaWdodDogMS4yNTsgfVxuICAubWVudS1saXN0IGEge1xuICAgIGJvcmRlci1yYWRpdXM6IDJweDtcbiAgICBjb2xvcjogIzRhNGE0YTtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwYWRkaW5nOiAwLjVlbSAwLjc1ZW07IH1cbiAgICAubWVudS1saXN0IGE6aG92ZXIge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGVzbW9rZTtcbiAgICAgIGNvbG9yOiAjMzYzNjM2OyB9XG4gICAgLm1lbnUtbGlzdCBhLmlzLWFjdGl2ZSB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzI3M2RjO1xuICAgICAgY29sb3I6ICNmZmY7IH1cbiAgLm1lbnUtbGlzdCBsaSB1bCB7XG4gICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAjZGJkYmRiO1xuICAgIG1hcmdpbjogMC43NWVtO1xuICAgIHBhZGRpbmctbGVmdDogMC43NWVtOyB9XG5cbi5tZW51LWxhYmVsIHtcbiAgY29sb3I6ICM3YTdhN2E7XG4gIGZvbnQtc2l6ZTogMC43NWVtO1xuICBsZXR0ZXItc3BhY2luZzogMC4xZW07XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IH1cbiAgLm1lbnUtbGFiZWw6bm90KDpmaXJzdC1jaGlsZCkge1xuICAgIG1hcmdpbi10b3A6IDFlbTsgfVxuICAubWVudS1sYWJlbDpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxZW07IH1cblxuLm1lc3NhZ2Uge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZXNtb2tlO1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIGZvbnQtc2l6ZTogMXJlbTsgfVxuICAubWVzc2FnZSBzdHJvbmcge1xuICAgIGNvbG9yOiBjdXJyZW50Q29sb3I7IH1cbiAgLm1lc3NhZ2UgYTpub3QoLmJ1dHRvbik6bm90KC50YWcpOm5vdCguZHJvcGRvd24taXRlbSkge1xuICAgIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IH1cbiAgLm1lc3NhZ2UuaXMtc21hbGwge1xuICAgIGZvbnQtc2l6ZTogMC43NXJlbTsgfVxuICAubWVzc2FnZS5pcy1tZWRpdW0ge1xuICAgIGZvbnQtc2l6ZTogMS4yNXJlbTsgfVxuICAubWVzc2FnZS5pcy1sYXJnZSB7XG4gICAgZm9udC1zaXplOiAxLjVyZW07IH1cbiAgLm1lc3NhZ2UuaXMtd2hpdGUge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlOyB9XG4gICAgLm1lc3NhZ2UuaXMtd2hpdGUgLm1lc3NhZ2UtaGVhZGVyIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICAgICAgY29sb3I6ICMwYTBhMGE7IH1cbiAgICAubWVzc2FnZS5pcy13aGl0ZSAubWVzc2FnZS1ib2R5IHtcbiAgICAgIGJvcmRlci1jb2xvcjogd2hpdGU7XG4gICAgICBjb2xvcjogIzRkNGQ0ZDsgfVxuICAubWVzc2FnZS5pcy1ibGFjayB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZhZmFmYTsgfVxuICAgIC5tZXNzYWdlLmlzLWJsYWNrIC5tZXNzYWdlLWhlYWRlciB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMGEwYTBhO1xuICAgICAgY29sb3I6IHdoaXRlOyB9XG4gICAgLm1lc3NhZ2UuaXMtYmxhY2sgLm1lc3NhZ2UtYm9keSB7XG4gICAgICBib3JkZXItY29sb3I6ICMwYTBhMGE7XG4gICAgICBjb2xvcjogIzA5MDkwOTsgfVxuICAubWVzc2FnZS5pcy1saWdodCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZhZmFmYTsgfVxuICAgIC5tZXNzYWdlLmlzLWxpZ2h0IC5tZXNzYWdlLWhlYWRlciB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZXNtb2tlO1xuICAgICAgY29sb3I6ICMzNjM2MzY7IH1cbiAgICAubWVzc2FnZS5pcy1saWdodCAubWVzc2FnZS1ib2R5IHtcbiAgICAgIGJvcmRlci1jb2xvcjogd2hpdGVzbW9rZTtcbiAgICAgIGNvbG9yOiAjNTA1MDUwOyB9XG4gIC5tZXNzYWdlLmlzLWRhcmsge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmYWZhZmE7IH1cbiAgICAubWVzc2FnZS5pcy1kYXJrIC5tZXNzYWdlLWhlYWRlciB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzYzNjM2O1xuICAgICAgY29sb3I6IHdoaXRlc21va2U7IH1cbiAgICAubWVzc2FnZS5pcy1kYXJrIC5tZXNzYWdlLWJvZHkge1xuICAgICAgYm9yZGVyLWNvbG9yOiAjMzYzNjM2O1xuICAgICAgY29sb3I6ICMyYTJhMmE7IH1cbiAgLm1lc3NhZ2UuaXMtcHJpbWFyeSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZmZmZDsgfVxuICAgIC5tZXNzYWdlLmlzLXByaW1hcnkgLm1lc3NhZ2UtaGVhZGVyIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICMwMGQxYjI7XG4gICAgICBjb2xvcjogI2ZmZjsgfVxuICAgIC5tZXNzYWdlLmlzLXByaW1hcnkgLm1lc3NhZ2UtYm9keSB7XG4gICAgICBib3JkZXItY29sb3I6ICMwMGQxYjI7XG4gICAgICBjb2xvcjogIzAyMTMxMDsgfVxuICAubWVzc2FnZS5pcy1saW5rIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjZmOWZlOyB9XG4gICAgLm1lc3NhZ2UuaXMtbGluayAubWVzc2FnZS1oZWFkZXIge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzMyNzNkYztcbiAgICAgIGNvbG9yOiAjZmZmOyB9XG4gICAgLm1lc3NhZ2UuaXMtbGluayAubWVzc2FnZS1ib2R5IHtcbiAgICAgIGJvcmRlci1jb2xvcjogIzMyNzNkYztcbiAgICAgIGNvbG9yOiAjMjI1MDlhOyB9XG4gIC5tZXNzYWdlLmlzLWluZm8ge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmNmZiZmU7IH1cbiAgICAubWVzc2FnZS5pcy1pbmZvIC5tZXNzYWdlLWhlYWRlciB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjA5Y2VlO1xuICAgICAgY29sb3I6ICNmZmY7IH1cbiAgICAubWVzc2FnZS5pcy1pbmZvIC5tZXNzYWdlLWJvZHkge1xuICAgICAgYm9yZGVyLWNvbG9yOiAjMjA5Y2VlO1xuICAgICAgY29sb3I6ICMxMjUzN2U7IH1cbiAgLm1lc3NhZ2UuaXMtc3VjY2VzcyB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y2ZmVmOTsgfVxuICAgIC5tZXNzYWdlLmlzLXN1Y2Nlc3MgLm1lc3NhZ2UtaGVhZGVyIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICMyM2QxNjA7XG4gICAgICBjb2xvcjogI2ZmZjsgfVxuICAgIC5tZXNzYWdlLmlzLXN1Y2Nlc3MgLm1lc3NhZ2UtYm9keSB7XG4gICAgICBib3JkZXItY29sb3I6ICMyM2QxNjA7XG4gICAgICBjb2xvcjogIzBlMzAxYTsgfVxuICAubWVzc2FnZS5pcy13YXJuaW5nIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZGY1OyB9XG4gICAgLm1lc3NhZ2UuaXMtd2FybmluZyAubWVzc2FnZS1oZWFkZXIge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZGQ1NztcbiAgICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNyk7IH1cbiAgICAubWVzc2FnZS5pcy13YXJuaW5nIC5tZXNzYWdlLWJvZHkge1xuICAgICAgYm9yZGVyLWNvbG9yOiAjZmZkZDU3O1xuICAgICAgY29sb3I6ICMzYjMxMDg7IH1cbiAgLm1lc3NhZ2UuaXMtZGFuZ2VyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmNWY3OyB9XG4gICAgLm1lc3NhZ2UuaXMtZGFuZ2VyIC5tZXNzYWdlLWhlYWRlciB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmYzODYwO1xuICAgICAgY29sb3I6ICNmZmY7IH1cbiAgICAubWVzc2FnZS5pcy1kYW5nZXIgLm1lc3NhZ2UtYm9keSB7XG4gICAgICBib3JkZXItY29sb3I6ICNmZjM4NjA7XG4gICAgICBjb2xvcjogI2NkMDkzMDsgfVxuXG4ubWVzc2FnZS1oZWFkZXIge1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNGE0YTRhO1xuICBib3JkZXItcmFkaXVzOiA0cHggNHB4IDAgMDtcbiAgY29sb3I6ICNmZmY7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgbGluZS1oZWlnaHQ6IDEuMjU7XG4gIHBhZGRpbmc6IDAuNzVlbSAxZW07XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAubWVzc2FnZS1oZWFkZXIgLmRlbGV0ZSB7XG4gICAgZmxleC1ncm93OiAwO1xuICAgIGZsZXgtc2hyaW5rOiAwO1xuICAgIG1hcmdpbi1sZWZ0OiAwLjc1ZW07IH1cbiAgLm1lc3NhZ2UtaGVhZGVyICsgLm1lc3NhZ2UtYm9keSB7XG4gICAgYm9yZGVyLXdpZHRoOiAwO1xuICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDA7XG4gICAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDA7IH1cblxuLm1lc3NhZ2UtYm9keSB7XG4gIGJvcmRlci1jb2xvcjogI2RiZGJkYjtcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xuICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICBib3JkZXItd2lkdGg6IDAgMCAwIDRweDtcbiAgY29sb3I6ICM0YTRhNGE7XG4gIHBhZGRpbmc6IDEuMjVlbSAxLjVlbTsgfVxuICAubWVzc2FnZS1ib2R5IGNvZGUsXG4gIC5tZXNzYWdlLWJvZHkgcHJlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsgfVxuICAubWVzc2FnZS1ib2R5IHByZSBjb2RlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsgfVxuXG4ubW9kYWwge1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBkaXNwbGF5OiBub25lO1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB6LWluZGV4OiA0MDsgfVxuICAubW9kYWwuaXMtYWN0aXZlIHtcbiAgICBkaXNwbGF5OiBmbGV4OyB9XG5cbi5tb2RhbC1iYWNrZ3JvdW5kIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMCwgMTAsIDEwLCAwLjg2KTsgfVxuXG4ubW9kYWwtY29udGVudCxcbi5tb2RhbC1jYXJkIHtcbiAgbWFyZ2luOiAwIDIwcHg7XG4gIG1heC1oZWlnaHQ6IGNhbGMoMTAwdmggLSAxNjBweCk7XG4gIG92ZXJmbG93OiBhdXRvO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHdpZHRoOiAxMDAlOyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OXB4KSwgcHJpbnQge1xuICAgIC5tb2RhbC1jb250ZW50LFxuICAgIC5tb2RhbC1jYXJkIHtcbiAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgICAgbWF4LWhlaWdodDogY2FsYygxMDB2aCAtIDQwcHgpO1xuICAgICAgd2lkdGg6IDY0MHB4OyB9IH1cblxuLm1vZGFsLWNsb3NlIHtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgaGVpZ2h0OiA0MHB4O1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHJpZ2h0OiAyMHB4O1xuICB0b3A6IDIwcHg7XG4gIHdpZHRoOiA0MHB4OyB9XG5cbi5tb2RhbC1jYXJkIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgbWF4LWhlaWdodDogY2FsYygxMDB2aCAtIDQwcHgpO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICAtbXMtb3ZlcmZsb3cteTogdmlzaWJsZTsgfVxuXG4ubW9kYWwtY2FyZC1oZWFkLFxuLm1vZGFsLWNhcmQtZm9vdCB7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlc21va2U7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtc2hyaW5rOiAwO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIHBhZGRpbmc6IDIwcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuXG4ubW9kYWwtY2FyZC1oZWFkIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkYmRiZGI7XG4gIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDZweDtcbiAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDZweDsgfVxuXG4ubW9kYWwtY2FyZC10aXRsZSB7XG4gIGNvbG9yOiAjMzYzNjM2O1xuICBmbGV4LWdyb3c6IDE7XG4gIGZsZXgtc2hyaW5rOiAwO1xuICBmb250LXNpemU6IDEuNXJlbTtcbiAgbGluZS1oZWlnaHQ6IDE7IH1cblxuLm1vZGFsLWNhcmQtZm9vdCB7XG4gIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDZweDtcbiAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDZweDtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNkYmRiZGI7IH1cbiAgLm1vZGFsLWNhcmQtZm9vdCAuYnV0dG9uOm5vdCg6bGFzdC1jaGlsZCkge1xuICAgIG1hcmdpbi1yaWdodDogMC41ZW07IH1cblxuLm1vZGFsLWNhcmQtYm9keSB7XG4gIC13ZWJraXQtb3ZlcmZsb3ctc2Nyb2xsaW5nOiB0b3VjaDtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIGZsZXgtZ3JvdzogMTtcbiAgZmxleC1zaHJpbms6IDE7XG4gIG92ZXJmbG93OiBhdXRvO1xuICBwYWRkaW5nOiAyMHB4OyB9XG5cbi5uYXZiYXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgbWluLWhlaWdodDogMy4yNXJlbTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAzMDsgfVxuICAubmF2YmFyLmlzLXdoaXRlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICBjb2xvcjogIzBhMGEwYTsgfVxuICAgIC5uYXZiYXIuaXMtd2hpdGUgLm5hdmJhci1icmFuZCA+IC5uYXZiYXItaXRlbSxcbiAgICAubmF2YmFyLmlzLXdoaXRlIC5uYXZiYXItYnJhbmQgLm5hdmJhci1saW5rIHtcbiAgICAgIGNvbG9yOiAjMGEwYTBhOyB9XG4gICAgLm5hdmJhci5pcy13aGl0ZSAubmF2YmFyLWJyYW5kID4gYS5uYXZiYXItaXRlbTpmb2N1cywgLm5hdmJhci5pcy13aGl0ZSAubmF2YmFyLWJyYW5kID4gYS5uYXZiYXItaXRlbTpob3ZlciwgLm5hdmJhci5pcy13aGl0ZSAubmF2YmFyLWJyYW5kID4gYS5uYXZiYXItaXRlbS5pcy1hY3RpdmUsXG4gICAgLm5hdmJhci5pcy13aGl0ZSAubmF2YmFyLWJyYW5kIC5uYXZiYXItbGluazpmb2N1cyxcbiAgICAubmF2YmFyLmlzLXdoaXRlIC5uYXZiYXItYnJhbmQgLm5hdmJhci1saW5rOmhvdmVyLFxuICAgIC5uYXZiYXIuaXMtd2hpdGUgLm5hdmJhci1icmFuZCAubmF2YmFyLWxpbmsuaXMtYWN0aXZlIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmMmYyZjI7XG4gICAgICBjb2xvcjogIzBhMGEwYTsgfVxuICAgIC5uYXZiYXIuaXMtd2hpdGUgLm5hdmJhci1icmFuZCAubmF2YmFyLWxpbms6OmFmdGVyIHtcbiAgICAgIGJvcmRlci1jb2xvcjogIzBhMGEwYTsgfVxuICAgIC5uYXZiYXIuaXMtd2hpdGUgLm5hdmJhci1idXJnZXIge1xuICAgICAgY29sb3I6ICMwYTBhMGE7IH1cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgIC5uYXZiYXIuaXMtd2hpdGUgLm5hdmJhci1zdGFydCA+IC5uYXZiYXItaXRlbSxcbiAgICAgIC5uYXZiYXIuaXMtd2hpdGUgLm5hdmJhci1zdGFydCAubmF2YmFyLWxpbmssXG4gICAgICAubmF2YmFyLmlzLXdoaXRlIC5uYXZiYXItZW5kID4gLm5hdmJhci1pdGVtLFxuICAgICAgLm5hdmJhci5pcy13aGl0ZSAubmF2YmFyLWVuZCAubmF2YmFyLWxpbmsge1xuICAgICAgICBjb2xvcjogIzBhMGEwYTsgfVxuICAgICAgLm5hdmJhci5pcy13aGl0ZSAubmF2YmFyLXN0YXJ0ID4gYS5uYXZiYXItaXRlbTpmb2N1cywgLm5hdmJhci5pcy13aGl0ZSAubmF2YmFyLXN0YXJ0ID4gYS5uYXZiYXItaXRlbTpob3ZlciwgLm5hdmJhci5pcy13aGl0ZSAubmF2YmFyLXN0YXJ0ID4gYS5uYXZiYXItaXRlbS5pcy1hY3RpdmUsXG4gICAgICAubmF2YmFyLmlzLXdoaXRlIC5uYXZiYXItc3RhcnQgLm5hdmJhci1saW5rOmZvY3VzLFxuICAgICAgLm5hdmJhci5pcy13aGl0ZSAubmF2YmFyLXN0YXJ0IC5uYXZiYXItbGluazpob3ZlcixcbiAgICAgIC5uYXZiYXIuaXMtd2hpdGUgLm5hdmJhci1zdGFydCAubmF2YmFyLWxpbmsuaXMtYWN0aXZlLFxuICAgICAgLm5hdmJhci5pcy13aGl0ZSAubmF2YmFyLWVuZCA+IGEubmF2YmFyLWl0ZW06Zm9jdXMsXG4gICAgICAubmF2YmFyLmlzLXdoaXRlIC5uYXZiYXItZW5kID4gYS5uYXZiYXItaXRlbTpob3ZlcixcbiAgICAgIC5uYXZiYXIuaXMtd2hpdGUgLm5hdmJhci1lbmQgPiBhLm5hdmJhci1pdGVtLmlzLWFjdGl2ZSxcbiAgICAgIC5uYXZiYXIuaXMtd2hpdGUgLm5hdmJhci1lbmQgLm5hdmJhci1saW5rOmZvY3VzLFxuICAgICAgLm5hdmJhci5pcy13aGl0ZSAubmF2YmFyLWVuZCAubmF2YmFyLWxpbms6aG92ZXIsXG4gICAgICAubmF2YmFyLmlzLXdoaXRlIC5uYXZiYXItZW5kIC5uYXZiYXItbGluay5pcy1hY3RpdmUge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjJmMmYyO1xuICAgICAgICBjb2xvcjogIzBhMGEwYTsgfVxuICAgICAgLm5hdmJhci5pcy13aGl0ZSAubmF2YmFyLXN0YXJ0IC5uYXZiYXItbGluazo6YWZ0ZXIsXG4gICAgICAubmF2YmFyLmlzLXdoaXRlIC5uYXZiYXItZW5kIC5uYXZiYXItbGluazo6YWZ0ZXIge1xuICAgICAgICBib3JkZXItY29sb3I6ICMwYTBhMGE7IH1cbiAgICAgIC5uYXZiYXIuaXMtd2hpdGUgLm5hdmJhci1pdGVtLmhhcy1kcm9wZG93bjpmb2N1cyAubmF2YmFyLWxpbmssXG4gICAgICAubmF2YmFyLmlzLXdoaXRlIC5uYXZiYXItaXRlbS5oYXMtZHJvcGRvd246aG92ZXIgLm5hdmJhci1saW5rLFxuICAgICAgLm5hdmJhci5pcy13aGl0ZSAubmF2YmFyLWl0ZW0uaGFzLWRyb3Bkb3duLmlzLWFjdGl2ZSAubmF2YmFyLWxpbmsge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjJmMmYyO1xuICAgICAgICBjb2xvcjogIzBhMGEwYTsgfVxuICAgICAgLm5hdmJhci5pcy13aGl0ZSAubmF2YmFyLWRyb3Bkb3duIGEubmF2YmFyLWl0ZW0uaXMtYWN0aXZlIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgICAgIGNvbG9yOiAjMGEwYTBhOyB9IH1cbiAgLm5hdmJhci5pcy1ibGFjayB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzBhMGEwYTtcbiAgICBjb2xvcjogd2hpdGU7IH1cbiAgICAubmF2YmFyLmlzLWJsYWNrIC5uYXZiYXItYnJhbmQgPiAubmF2YmFyLWl0ZW0sXG4gICAgLm5hdmJhci5pcy1ibGFjayAubmF2YmFyLWJyYW5kIC5uYXZiYXItbGluayB7XG4gICAgICBjb2xvcjogd2hpdGU7IH1cbiAgICAubmF2YmFyLmlzLWJsYWNrIC5uYXZiYXItYnJhbmQgPiBhLm5hdmJhci1pdGVtOmZvY3VzLCAubmF2YmFyLmlzLWJsYWNrIC5uYXZiYXItYnJhbmQgPiBhLm5hdmJhci1pdGVtOmhvdmVyLCAubmF2YmFyLmlzLWJsYWNrIC5uYXZiYXItYnJhbmQgPiBhLm5hdmJhci1pdGVtLmlzLWFjdGl2ZSxcbiAgICAubmF2YmFyLmlzLWJsYWNrIC5uYXZiYXItYnJhbmQgLm5hdmJhci1saW5rOmZvY3VzLFxuICAgIC5uYXZiYXIuaXMtYmxhY2sgLm5hdmJhci1icmFuZCAubmF2YmFyLWxpbms6aG92ZXIsXG4gICAgLm5hdmJhci5pcy1ibGFjayAubmF2YmFyLWJyYW5kIC5uYXZiYXItbGluay5pcy1hY3RpdmUge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XG4gICAgICBjb2xvcjogd2hpdGU7IH1cbiAgICAubmF2YmFyLmlzLWJsYWNrIC5uYXZiYXItYnJhbmQgLm5hdmJhci1saW5rOjphZnRlciB7XG4gICAgICBib3JkZXItY29sb3I6IHdoaXRlOyB9XG4gICAgLm5hdmJhci5pcy1ibGFjayAubmF2YmFyLWJ1cmdlciB7XG4gICAgICBjb2xvcjogd2hpdGU7IH1cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgIC5uYXZiYXIuaXMtYmxhY2sgLm5hdmJhci1zdGFydCA+IC5uYXZiYXItaXRlbSxcbiAgICAgIC5uYXZiYXIuaXMtYmxhY2sgLm5hdmJhci1zdGFydCAubmF2YmFyLWxpbmssXG4gICAgICAubmF2YmFyLmlzLWJsYWNrIC5uYXZiYXItZW5kID4gLm5hdmJhci1pdGVtLFxuICAgICAgLm5hdmJhci5pcy1ibGFjayAubmF2YmFyLWVuZCAubmF2YmFyLWxpbmsge1xuICAgICAgICBjb2xvcjogd2hpdGU7IH1cbiAgICAgIC5uYXZiYXIuaXMtYmxhY2sgLm5hdmJhci1zdGFydCA+IGEubmF2YmFyLWl0ZW06Zm9jdXMsIC5uYXZiYXIuaXMtYmxhY2sgLm5hdmJhci1zdGFydCA+IGEubmF2YmFyLWl0ZW06aG92ZXIsIC5uYXZiYXIuaXMtYmxhY2sgLm5hdmJhci1zdGFydCA+IGEubmF2YmFyLWl0ZW0uaXMtYWN0aXZlLFxuICAgICAgLm5hdmJhci5pcy1ibGFjayAubmF2YmFyLXN0YXJ0IC5uYXZiYXItbGluazpmb2N1cyxcbiAgICAgIC5uYXZiYXIuaXMtYmxhY2sgLm5hdmJhci1zdGFydCAubmF2YmFyLWxpbms6aG92ZXIsXG4gICAgICAubmF2YmFyLmlzLWJsYWNrIC5uYXZiYXItc3RhcnQgLm5hdmJhci1saW5rLmlzLWFjdGl2ZSxcbiAgICAgIC5uYXZiYXIuaXMtYmxhY2sgLm5hdmJhci1lbmQgPiBhLm5hdmJhci1pdGVtOmZvY3VzLFxuICAgICAgLm5hdmJhci5pcy1ibGFjayAubmF2YmFyLWVuZCA+IGEubmF2YmFyLWl0ZW06aG92ZXIsXG4gICAgICAubmF2YmFyLmlzLWJsYWNrIC5uYXZiYXItZW5kID4gYS5uYXZiYXItaXRlbS5pcy1hY3RpdmUsXG4gICAgICAubmF2YmFyLmlzLWJsYWNrIC5uYXZiYXItZW5kIC5uYXZiYXItbGluazpmb2N1cyxcbiAgICAgIC5uYXZiYXIuaXMtYmxhY2sgLm5hdmJhci1lbmQgLm5hdmJhci1saW5rOmhvdmVyLFxuICAgICAgLm5hdmJhci5pcy1ibGFjayAubmF2YmFyLWVuZCAubmF2YmFyLWxpbmsuaXMtYWN0aXZlIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XG4gICAgICAgIGNvbG9yOiB3aGl0ZTsgfVxuICAgICAgLm5hdmJhci5pcy1ibGFjayAubmF2YmFyLXN0YXJ0IC5uYXZiYXItbGluazo6YWZ0ZXIsXG4gICAgICAubmF2YmFyLmlzLWJsYWNrIC5uYXZiYXItZW5kIC5uYXZiYXItbGluazo6YWZ0ZXIge1xuICAgICAgICBib3JkZXItY29sb3I6IHdoaXRlOyB9XG4gICAgICAubmF2YmFyLmlzLWJsYWNrIC5uYXZiYXItaXRlbS5oYXMtZHJvcGRvd246Zm9jdXMgLm5hdmJhci1saW5rLFxuICAgICAgLm5hdmJhci5pcy1ibGFjayAubmF2YmFyLWl0ZW0uaGFzLWRyb3Bkb3duOmhvdmVyIC5uYXZiYXItbGluayxcbiAgICAgIC5uYXZiYXIuaXMtYmxhY2sgLm5hdmJhci1pdGVtLmhhcy1kcm9wZG93bi5pcy1hY3RpdmUgLm5hdmJhci1saW5rIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XG4gICAgICAgIGNvbG9yOiB3aGl0ZTsgfVxuICAgICAgLm5hdmJhci5pcy1ibGFjayAubmF2YmFyLWRyb3Bkb3duIGEubmF2YmFyLWl0ZW0uaXMtYWN0aXZlIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzBhMGEwYTtcbiAgICAgICAgY29sb3I6IHdoaXRlOyB9IH1cbiAgLm5hdmJhci5pcy1saWdodCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGVzbW9rZTtcbiAgICBjb2xvcjogIzM2MzYzNjsgfVxuICAgIC5uYXZiYXIuaXMtbGlnaHQgLm5hdmJhci1icmFuZCA+IC5uYXZiYXItaXRlbSxcbiAgICAubmF2YmFyLmlzLWxpZ2h0IC5uYXZiYXItYnJhbmQgLm5hdmJhci1saW5rIHtcbiAgICAgIGNvbG9yOiAjMzYzNjM2OyB9XG4gICAgLm5hdmJhci5pcy1saWdodCAubmF2YmFyLWJyYW5kID4gYS5uYXZiYXItaXRlbTpmb2N1cywgLm5hdmJhci5pcy1saWdodCAubmF2YmFyLWJyYW5kID4gYS5uYXZiYXItaXRlbTpob3ZlciwgLm5hdmJhci5pcy1saWdodCAubmF2YmFyLWJyYW5kID4gYS5uYXZiYXItaXRlbS5pcy1hY3RpdmUsXG4gICAgLm5hdmJhci5pcy1saWdodCAubmF2YmFyLWJyYW5kIC5uYXZiYXItbGluazpmb2N1cyxcbiAgICAubmF2YmFyLmlzLWxpZ2h0IC5uYXZiYXItYnJhbmQgLm5hdmJhci1saW5rOmhvdmVyLFxuICAgIC5uYXZiYXIuaXMtbGlnaHQgLm5hdmJhci1icmFuZCAubmF2YmFyLWxpbmsuaXMtYWN0aXZlIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNlOGU4ZTg7XG4gICAgICBjb2xvcjogIzM2MzYzNjsgfVxuICAgIC5uYXZiYXIuaXMtbGlnaHQgLm5hdmJhci1icmFuZCAubmF2YmFyLWxpbms6OmFmdGVyIHtcbiAgICAgIGJvcmRlci1jb2xvcjogIzM2MzYzNjsgfVxuICAgIC5uYXZiYXIuaXMtbGlnaHQgLm5hdmJhci1idXJnZXIge1xuICAgICAgY29sb3I6ICMzNjM2MzY7IH1cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgIC5uYXZiYXIuaXMtbGlnaHQgLm5hdmJhci1zdGFydCA+IC5uYXZiYXItaXRlbSxcbiAgICAgIC5uYXZiYXIuaXMtbGlnaHQgLm5hdmJhci1zdGFydCAubmF2YmFyLWxpbmssXG4gICAgICAubmF2YmFyLmlzLWxpZ2h0IC5uYXZiYXItZW5kID4gLm5hdmJhci1pdGVtLFxuICAgICAgLm5hdmJhci5pcy1saWdodCAubmF2YmFyLWVuZCAubmF2YmFyLWxpbmsge1xuICAgICAgICBjb2xvcjogIzM2MzYzNjsgfVxuICAgICAgLm5hdmJhci5pcy1saWdodCAubmF2YmFyLXN0YXJ0ID4gYS5uYXZiYXItaXRlbTpmb2N1cywgLm5hdmJhci5pcy1saWdodCAubmF2YmFyLXN0YXJ0ID4gYS5uYXZiYXItaXRlbTpob3ZlciwgLm5hdmJhci5pcy1saWdodCAubmF2YmFyLXN0YXJ0ID4gYS5uYXZiYXItaXRlbS5pcy1hY3RpdmUsXG4gICAgICAubmF2YmFyLmlzLWxpZ2h0IC5uYXZiYXItc3RhcnQgLm5hdmJhci1saW5rOmZvY3VzLFxuICAgICAgLm5hdmJhci5pcy1saWdodCAubmF2YmFyLXN0YXJ0IC5uYXZiYXItbGluazpob3ZlcixcbiAgICAgIC5uYXZiYXIuaXMtbGlnaHQgLm5hdmJhci1zdGFydCAubmF2YmFyLWxpbmsuaXMtYWN0aXZlLFxuICAgICAgLm5hdmJhci5pcy1saWdodCAubmF2YmFyLWVuZCA+IGEubmF2YmFyLWl0ZW06Zm9jdXMsXG4gICAgICAubmF2YmFyLmlzLWxpZ2h0IC5uYXZiYXItZW5kID4gYS5uYXZiYXItaXRlbTpob3ZlcixcbiAgICAgIC5uYXZiYXIuaXMtbGlnaHQgLm5hdmJhci1lbmQgPiBhLm5hdmJhci1pdGVtLmlzLWFjdGl2ZSxcbiAgICAgIC5uYXZiYXIuaXMtbGlnaHQgLm5hdmJhci1lbmQgLm5hdmJhci1saW5rOmZvY3VzLFxuICAgICAgLm5hdmJhci5pcy1saWdodCAubmF2YmFyLWVuZCAubmF2YmFyLWxpbms6aG92ZXIsXG4gICAgICAubmF2YmFyLmlzLWxpZ2h0IC5uYXZiYXItZW5kIC5uYXZiYXItbGluay5pcy1hY3RpdmUge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZThlOGU4O1xuICAgICAgICBjb2xvcjogIzM2MzYzNjsgfVxuICAgICAgLm5hdmJhci5pcy1saWdodCAubmF2YmFyLXN0YXJ0IC5uYXZiYXItbGluazo6YWZ0ZXIsXG4gICAgICAubmF2YmFyLmlzLWxpZ2h0IC5uYXZiYXItZW5kIC5uYXZiYXItbGluazo6YWZ0ZXIge1xuICAgICAgICBib3JkZXItY29sb3I6ICMzNjM2MzY7IH1cbiAgICAgIC5uYXZiYXIuaXMtbGlnaHQgLm5hdmJhci1pdGVtLmhhcy1kcm9wZG93bjpmb2N1cyAubmF2YmFyLWxpbmssXG4gICAgICAubmF2YmFyLmlzLWxpZ2h0IC5uYXZiYXItaXRlbS5oYXMtZHJvcGRvd246aG92ZXIgLm5hdmJhci1saW5rLFxuICAgICAgLm5hdmJhci5pcy1saWdodCAubmF2YmFyLWl0ZW0uaGFzLWRyb3Bkb3duLmlzLWFjdGl2ZSAubmF2YmFyLWxpbmsge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZThlOGU4O1xuICAgICAgICBjb2xvcjogIzM2MzYzNjsgfVxuICAgICAgLm5hdmJhci5pcy1saWdodCAubmF2YmFyLWRyb3Bkb3duIGEubmF2YmFyLWl0ZW0uaXMtYWN0aXZlIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGVzbW9rZTtcbiAgICAgICAgY29sb3I6ICMzNjM2MzY7IH0gfVxuICAubmF2YmFyLmlzLWRhcmsge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMzNjM2MzY7XG4gICAgY29sb3I6IHdoaXRlc21va2U7IH1cbiAgICAubmF2YmFyLmlzLWRhcmsgLm5hdmJhci1icmFuZCA+IC5uYXZiYXItaXRlbSxcbiAgICAubmF2YmFyLmlzLWRhcmsgLm5hdmJhci1icmFuZCAubmF2YmFyLWxpbmsge1xuICAgICAgY29sb3I6IHdoaXRlc21va2U7IH1cbiAgICAubmF2YmFyLmlzLWRhcmsgLm5hdmJhci1icmFuZCA+IGEubmF2YmFyLWl0ZW06Zm9jdXMsIC5uYXZiYXIuaXMtZGFyayAubmF2YmFyLWJyYW5kID4gYS5uYXZiYXItaXRlbTpob3ZlciwgLm5hdmJhci5pcy1kYXJrIC5uYXZiYXItYnJhbmQgPiBhLm5hdmJhci1pdGVtLmlzLWFjdGl2ZSxcbiAgICAubmF2YmFyLmlzLWRhcmsgLm5hdmJhci1icmFuZCAubmF2YmFyLWxpbms6Zm9jdXMsXG4gICAgLm5hdmJhci5pcy1kYXJrIC5uYXZiYXItYnJhbmQgLm5hdmJhci1saW5rOmhvdmVyLFxuICAgIC5uYXZiYXIuaXMtZGFyayAubmF2YmFyLWJyYW5kIC5uYXZiYXItbGluay5pcy1hY3RpdmUge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzI5MjkyOTtcbiAgICAgIGNvbG9yOiB3aGl0ZXNtb2tlOyB9XG4gICAgLm5hdmJhci5pcy1kYXJrIC5uYXZiYXItYnJhbmQgLm5hdmJhci1saW5rOjphZnRlciB7XG4gICAgICBib3JkZXItY29sb3I6IHdoaXRlc21va2U7IH1cbiAgICAubmF2YmFyLmlzLWRhcmsgLm5hdmJhci1idXJnZXIge1xuICAgICAgY29sb3I6IHdoaXRlc21va2U7IH1cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgIC5uYXZiYXIuaXMtZGFyayAubmF2YmFyLXN0YXJ0ID4gLm5hdmJhci1pdGVtLFxuICAgICAgLm5hdmJhci5pcy1kYXJrIC5uYXZiYXItc3RhcnQgLm5hdmJhci1saW5rLFxuICAgICAgLm5hdmJhci5pcy1kYXJrIC5uYXZiYXItZW5kID4gLm5hdmJhci1pdGVtLFxuICAgICAgLm5hdmJhci5pcy1kYXJrIC5uYXZiYXItZW5kIC5uYXZiYXItbGluayB7XG4gICAgICAgIGNvbG9yOiB3aGl0ZXNtb2tlOyB9XG4gICAgICAubmF2YmFyLmlzLWRhcmsgLm5hdmJhci1zdGFydCA+IGEubmF2YmFyLWl0ZW06Zm9jdXMsIC5uYXZiYXIuaXMtZGFyayAubmF2YmFyLXN0YXJ0ID4gYS5uYXZiYXItaXRlbTpob3ZlciwgLm5hdmJhci5pcy1kYXJrIC5uYXZiYXItc3RhcnQgPiBhLm5hdmJhci1pdGVtLmlzLWFjdGl2ZSxcbiAgICAgIC5uYXZiYXIuaXMtZGFyayAubmF2YmFyLXN0YXJ0IC5uYXZiYXItbGluazpmb2N1cyxcbiAgICAgIC5uYXZiYXIuaXMtZGFyayAubmF2YmFyLXN0YXJ0IC5uYXZiYXItbGluazpob3ZlcixcbiAgICAgIC5uYXZiYXIuaXMtZGFyayAubmF2YmFyLXN0YXJ0IC5uYXZiYXItbGluay5pcy1hY3RpdmUsXG4gICAgICAubmF2YmFyLmlzLWRhcmsgLm5hdmJhci1lbmQgPiBhLm5hdmJhci1pdGVtOmZvY3VzLFxuICAgICAgLm5hdmJhci5pcy1kYXJrIC5uYXZiYXItZW5kID4gYS5uYXZiYXItaXRlbTpob3ZlcixcbiAgICAgIC5uYXZiYXIuaXMtZGFyayAubmF2YmFyLWVuZCA+IGEubmF2YmFyLWl0ZW0uaXMtYWN0aXZlLFxuICAgICAgLm5hdmJhci5pcy1kYXJrIC5uYXZiYXItZW5kIC5uYXZiYXItbGluazpmb2N1cyxcbiAgICAgIC5uYXZiYXIuaXMtZGFyayAubmF2YmFyLWVuZCAubmF2YmFyLWxpbms6aG92ZXIsXG4gICAgICAubmF2YmFyLmlzLWRhcmsgLm5hdmJhci1lbmQgLm5hdmJhci1saW5rLmlzLWFjdGl2ZSB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMyOTI5Mjk7XG4gICAgICAgIGNvbG9yOiB3aGl0ZXNtb2tlOyB9XG4gICAgICAubmF2YmFyLmlzLWRhcmsgLm5hdmJhci1zdGFydCAubmF2YmFyLWxpbms6OmFmdGVyLFxuICAgICAgLm5hdmJhci5pcy1kYXJrIC5uYXZiYXItZW5kIC5uYXZiYXItbGluazo6YWZ0ZXIge1xuICAgICAgICBib3JkZXItY29sb3I6IHdoaXRlc21va2U7IH1cbiAgICAgIC5uYXZiYXIuaXMtZGFyayAubmF2YmFyLWl0ZW0uaGFzLWRyb3Bkb3duOmZvY3VzIC5uYXZiYXItbGluayxcbiAgICAgIC5uYXZiYXIuaXMtZGFyayAubmF2YmFyLWl0ZW0uaGFzLWRyb3Bkb3duOmhvdmVyIC5uYXZiYXItbGluayxcbiAgICAgIC5uYXZiYXIuaXMtZGFyayAubmF2YmFyLWl0ZW0uaGFzLWRyb3Bkb3duLmlzLWFjdGl2ZSAubmF2YmFyLWxpbmsge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjkyOTI5O1xuICAgICAgICBjb2xvcjogd2hpdGVzbW9rZTsgfVxuICAgICAgLm5hdmJhci5pcy1kYXJrIC5uYXZiYXItZHJvcGRvd24gYS5uYXZiYXItaXRlbS5pcy1hY3RpdmUge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzYzNjM2O1xuICAgICAgICBjb2xvcjogd2hpdGVzbW9rZTsgfSB9XG4gIC5uYXZiYXIuaXMtcHJpbWFyeSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwZDFiMjtcbiAgICBjb2xvcjogI2ZmZjsgfVxuICAgIC5uYXZiYXIuaXMtcHJpbWFyeSAubmF2YmFyLWJyYW5kID4gLm5hdmJhci1pdGVtLFxuICAgIC5uYXZiYXIuaXMtcHJpbWFyeSAubmF2YmFyLWJyYW5kIC5uYXZiYXItbGluayB7XG4gICAgICBjb2xvcjogI2ZmZjsgfVxuICAgIC5uYXZiYXIuaXMtcHJpbWFyeSAubmF2YmFyLWJyYW5kID4gYS5uYXZiYXItaXRlbTpmb2N1cywgLm5hdmJhci5pcy1wcmltYXJ5IC5uYXZiYXItYnJhbmQgPiBhLm5hdmJhci1pdGVtOmhvdmVyLCAubmF2YmFyLmlzLXByaW1hcnkgLm5hdmJhci1icmFuZCA+IGEubmF2YmFyLWl0ZW0uaXMtYWN0aXZlLFxuICAgIC5uYXZiYXIuaXMtcHJpbWFyeSAubmF2YmFyLWJyYW5kIC5uYXZiYXItbGluazpmb2N1cyxcbiAgICAubmF2YmFyLmlzLXByaW1hcnkgLm5hdmJhci1icmFuZCAubmF2YmFyLWxpbms6aG92ZXIsXG4gICAgLm5hdmJhci5pcy1wcmltYXJ5IC5uYXZiYXItYnJhbmQgLm5hdmJhci1saW5rLmlzLWFjdGl2ZSB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDBiODljO1xuICAgICAgY29sb3I6ICNmZmY7IH1cbiAgICAubmF2YmFyLmlzLXByaW1hcnkgLm5hdmJhci1icmFuZCAubmF2YmFyLWxpbms6OmFmdGVyIHtcbiAgICAgIGJvcmRlci1jb2xvcjogI2ZmZjsgfVxuICAgIC5uYXZiYXIuaXMtcHJpbWFyeSAubmF2YmFyLWJ1cmdlciB7XG4gICAgICBjb2xvcjogI2ZmZjsgfVxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgICAgLm5hdmJhci5pcy1wcmltYXJ5IC5uYXZiYXItc3RhcnQgPiAubmF2YmFyLWl0ZW0sXG4gICAgICAubmF2YmFyLmlzLXByaW1hcnkgLm5hdmJhci1zdGFydCAubmF2YmFyLWxpbmssXG4gICAgICAubmF2YmFyLmlzLXByaW1hcnkgLm5hdmJhci1lbmQgPiAubmF2YmFyLWl0ZW0sXG4gICAgICAubmF2YmFyLmlzLXByaW1hcnkgLm5hdmJhci1lbmQgLm5hdmJhci1saW5rIHtcbiAgICAgICAgY29sb3I6ICNmZmY7IH1cbiAgICAgIC5uYXZiYXIuaXMtcHJpbWFyeSAubmF2YmFyLXN0YXJ0ID4gYS5uYXZiYXItaXRlbTpmb2N1cywgLm5hdmJhci5pcy1wcmltYXJ5IC5uYXZiYXItc3RhcnQgPiBhLm5hdmJhci1pdGVtOmhvdmVyLCAubmF2YmFyLmlzLXByaW1hcnkgLm5hdmJhci1zdGFydCA+IGEubmF2YmFyLWl0ZW0uaXMtYWN0aXZlLFxuICAgICAgLm5hdmJhci5pcy1wcmltYXJ5IC5uYXZiYXItc3RhcnQgLm5hdmJhci1saW5rOmZvY3VzLFxuICAgICAgLm5hdmJhci5pcy1wcmltYXJ5IC5uYXZiYXItc3RhcnQgLm5hdmJhci1saW5rOmhvdmVyLFxuICAgICAgLm5hdmJhci5pcy1wcmltYXJ5IC5uYXZiYXItc3RhcnQgLm5hdmJhci1saW5rLmlzLWFjdGl2ZSxcbiAgICAgIC5uYXZiYXIuaXMtcHJpbWFyeSAubmF2YmFyLWVuZCA+IGEubmF2YmFyLWl0ZW06Zm9jdXMsXG4gICAgICAubmF2YmFyLmlzLXByaW1hcnkgLm5hdmJhci1lbmQgPiBhLm5hdmJhci1pdGVtOmhvdmVyLFxuICAgICAgLm5hdmJhci5pcy1wcmltYXJ5IC5uYXZiYXItZW5kID4gYS5uYXZiYXItaXRlbS5pcy1hY3RpdmUsXG4gICAgICAubmF2YmFyLmlzLXByaW1hcnkgLm5hdmJhci1lbmQgLm5hdmJhci1saW5rOmZvY3VzLFxuICAgICAgLm5hdmJhci5pcy1wcmltYXJ5IC5uYXZiYXItZW5kIC5uYXZiYXItbGluazpob3ZlcixcbiAgICAgIC5uYXZiYXIuaXMtcHJpbWFyeSAubmF2YmFyLWVuZCAubmF2YmFyLWxpbmsuaXMtYWN0aXZlIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzAwYjg5YztcbiAgICAgICAgY29sb3I6ICNmZmY7IH1cbiAgICAgIC5uYXZiYXIuaXMtcHJpbWFyeSAubmF2YmFyLXN0YXJ0IC5uYXZiYXItbGluazo6YWZ0ZXIsXG4gICAgICAubmF2YmFyLmlzLXByaW1hcnkgLm5hdmJhci1lbmQgLm5hdmJhci1saW5rOjphZnRlciB7XG4gICAgICAgIGJvcmRlci1jb2xvcjogI2ZmZjsgfVxuICAgICAgLm5hdmJhci5pcy1wcmltYXJ5IC5uYXZiYXItaXRlbS5oYXMtZHJvcGRvd246Zm9jdXMgLm5hdmJhci1saW5rLFxuICAgICAgLm5hdmJhci5pcy1wcmltYXJ5IC5uYXZiYXItaXRlbS5oYXMtZHJvcGRvd246aG92ZXIgLm5hdmJhci1saW5rLFxuICAgICAgLm5hdmJhci5pcy1wcmltYXJ5IC5uYXZiYXItaXRlbS5oYXMtZHJvcGRvd24uaXMtYWN0aXZlIC5uYXZiYXItbGluayB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMwMGI4OWM7XG4gICAgICAgIGNvbG9yOiAjZmZmOyB9XG4gICAgICAubmF2YmFyLmlzLXByaW1hcnkgLm5hdmJhci1kcm9wZG93biBhLm5hdmJhci1pdGVtLmlzLWFjdGl2ZSB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMwMGQxYjI7XG4gICAgICAgIGNvbG9yOiAjZmZmOyB9IH1cbiAgLm5hdmJhci5pcy1saW5rIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzI3M2RjO1xuICAgIGNvbG9yOiAjZmZmOyB9XG4gICAgLm5hdmJhci5pcy1saW5rIC5uYXZiYXItYnJhbmQgPiAubmF2YmFyLWl0ZW0sXG4gICAgLm5hdmJhci5pcy1saW5rIC5uYXZiYXItYnJhbmQgLm5hdmJhci1saW5rIHtcbiAgICAgIGNvbG9yOiAjZmZmOyB9XG4gICAgLm5hdmJhci5pcy1saW5rIC5uYXZiYXItYnJhbmQgPiBhLm5hdmJhci1pdGVtOmZvY3VzLCAubmF2YmFyLmlzLWxpbmsgLm5hdmJhci1icmFuZCA+IGEubmF2YmFyLWl0ZW06aG92ZXIsIC5uYXZiYXIuaXMtbGluayAubmF2YmFyLWJyYW5kID4gYS5uYXZiYXItaXRlbS5pcy1hY3RpdmUsXG4gICAgLm5hdmJhci5pcy1saW5rIC5uYXZiYXItYnJhbmQgLm5hdmJhci1saW5rOmZvY3VzLFxuICAgIC5uYXZiYXIuaXMtbGluayAubmF2YmFyLWJyYW5kIC5uYXZiYXItbGluazpob3ZlcixcbiAgICAubmF2YmFyLmlzLWxpbmsgLm5hdmJhci1icmFuZCAubmF2YmFyLWxpbmsuaXMtYWN0aXZlIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICMyMzY2ZDE7XG4gICAgICBjb2xvcjogI2ZmZjsgfVxuICAgIC5uYXZiYXIuaXMtbGluayAubmF2YmFyLWJyYW5kIC5uYXZiYXItbGluazo6YWZ0ZXIge1xuICAgICAgYm9yZGVyLWNvbG9yOiAjZmZmOyB9XG4gICAgLm5hdmJhci5pcy1saW5rIC5uYXZiYXItYnVyZ2VyIHtcbiAgICAgIGNvbG9yOiAjZmZmOyB9XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAubmF2YmFyLmlzLWxpbmsgLm5hdmJhci1zdGFydCA+IC5uYXZiYXItaXRlbSxcbiAgICAgIC5uYXZiYXIuaXMtbGluayAubmF2YmFyLXN0YXJ0IC5uYXZiYXItbGluayxcbiAgICAgIC5uYXZiYXIuaXMtbGluayAubmF2YmFyLWVuZCA+IC5uYXZiYXItaXRlbSxcbiAgICAgIC5uYXZiYXIuaXMtbGluayAubmF2YmFyLWVuZCAubmF2YmFyLWxpbmsge1xuICAgICAgICBjb2xvcjogI2ZmZjsgfVxuICAgICAgLm5hdmJhci5pcy1saW5rIC5uYXZiYXItc3RhcnQgPiBhLm5hdmJhci1pdGVtOmZvY3VzLCAubmF2YmFyLmlzLWxpbmsgLm5hdmJhci1zdGFydCA+IGEubmF2YmFyLWl0ZW06aG92ZXIsIC5uYXZiYXIuaXMtbGluayAubmF2YmFyLXN0YXJ0ID4gYS5uYXZiYXItaXRlbS5pcy1hY3RpdmUsXG4gICAgICAubmF2YmFyLmlzLWxpbmsgLm5hdmJhci1zdGFydCAubmF2YmFyLWxpbms6Zm9jdXMsXG4gICAgICAubmF2YmFyLmlzLWxpbmsgLm5hdmJhci1zdGFydCAubmF2YmFyLWxpbms6aG92ZXIsXG4gICAgICAubmF2YmFyLmlzLWxpbmsgLm5hdmJhci1zdGFydCAubmF2YmFyLWxpbmsuaXMtYWN0aXZlLFxuICAgICAgLm5hdmJhci5pcy1saW5rIC5uYXZiYXItZW5kID4gYS5uYXZiYXItaXRlbTpmb2N1cyxcbiAgICAgIC5uYXZiYXIuaXMtbGluayAubmF2YmFyLWVuZCA+IGEubmF2YmFyLWl0ZW06aG92ZXIsXG4gICAgICAubmF2YmFyLmlzLWxpbmsgLm5hdmJhci1lbmQgPiBhLm5hdmJhci1pdGVtLmlzLWFjdGl2ZSxcbiAgICAgIC5uYXZiYXIuaXMtbGluayAubmF2YmFyLWVuZCAubmF2YmFyLWxpbms6Zm9jdXMsXG4gICAgICAubmF2YmFyLmlzLWxpbmsgLm5hdmJhci1lbmQgLm5hdmJhci1saW5rOmhvdmVyLFxuICAgICAgLm5hdmJhci5pcy1saW5rIC5uYXZiYXItZW5kIC5uYXZiYXItbGluay5pcy1hY3RpdmUge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjM2NmQxO1xuICAgICAgICBjb2xvcjogI2ZmZjsgfVxuICAgICAgLm5hdmJhci5pcy1saW5rIC5uYXZiYXItc3RhcnQgLm5hdmJhci1saW5rOjphZnRlcixcbiAgICAgIC5uYXZiYXIuaXMtbGluayAubmF2YmFyLWVuZCAubmF2YmFyLWxpbms6OmFmdGVyIHtcbiAgICAgICAgYm9yZGVyLWNvbG9yOiAjZmZmOyB9XG4gICAgICAubmF2YmFyLmlzLWxpbmsgLm5hdmJhci1pdGVtLmhhcy1kcm9wZG93bjpmb2N1cyAubmF2YmFyLWxpbmssXG4gICAgICAubmF2YmFyLmlzLWxpbmsgLm5hdmJhci1pdGVtLmhhcy1kcm9wZG93bjpob3ZlciAubmF2YmFyLWxpbmssXG4gICAgICAubmF2YmFyLmlzLWxpbmsgLm5hdmJhci1pdGVtLmhhcy1kcm9wZG93bi5pcy1hY3RpdmUgLm5hdmJhci1saW5rIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzIzNjZkMTtcbiAgICAgICAgY29sb3I6ICNmZmY7IH1cbiAgICAgIC5uYXZiYXIuaXMtbGluayAubmF2YmFyLWRyb3Bkb3duIGEubmF2YmFyLWl0ZW0uaXMtYWN0aXZlIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzMyNzNkYztcbiAgICAgICAgY29sb3I6ICNmZmY7IH0gfVxuICAubmF2YmFyLmlzLWluZm8ge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMyMDljZWU7XG4gICAgY29sb3I6ICNmZmY7IH1cbiAgICAubmF2YmFyLmlzLWluZm8gLm5hdmJhci1icmFuZCA+IC5uYXZiYXItaXRlbSxcbiAgICAubmF2YmFyLmlzLWluZm8gLm5hdmJhci1icmFuZCAubmF2YmFyLWxpbmsge1xuICAgICAgY29sb3I6ICNmZmY7IH1cbiAgICAubmF2YmFyLmlzLWluZm8gLm5hdmJhci1icmFuZCA+IGEubmF2YmFyLWl0ZW06Zm9jdXMsIC5uYXZiYXIuaXMtaW5mbyAubmF2YmFyLWJyYW5kID4gYS5uYXZiYXItaXRlbTpob3ZlciwgLm5hdmJhci5pcy1pbmZvIC5uYXZiYXItYnJhbmQgPiBhLm5hdmJhci1pdGVtLmlzLWFjdGl2ZSxcbiAgICAubmF2YmFyLmlzLWluZm8gLm5hdmJhci1icmFuZCAubmF2YmFyLWxpbms6Zm9jdXMsXG4gICAgLm5hdmJhci5pcy1pbmZvIC5uYXZiYXItYnJhbmQgLm5hdmJhci1saW5rOmhvdmVyLFxuICAgIC5uYXZiYXIuaXMtaW5mbyAubmF2YmFyLWJyYW5kIC5uYXZiYXItbGluay5pcy1hY3RpdmUge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzExOGZlNDtcbiAgICAgIGNvbG9yOiAjZmZmOyB9XG4gICAgLm5hdmJhci5pcy1pbmZvIC5uYXZiYXItYnJhbmQgLm5hdmJhci1saW5rOjphZnRlciB7XG4gICAgICBib3JkZXItY29sb3I6ICNmZmY7IH1cbiAgICAubmF2YmFyLmlzLWluZm8gLm5hdmJhci1idXJnZXIge1xuICAgICAgY29sb3I6ICNmZmY7IH1cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgIC5uYXZiYXIuaXMtaW5mbyAubmF2YmFyLXN0YXJ0ID4gLm5hdmJhci1pdGVtLFxuICAgICAgLm5hdmJhci5pcy1pbmZvIC5uYXZiYXItc3RhcnQgLm5hdmJhci1saW5rLFxuICAgICAgLm5hdmJhci5pcy1pbmZvIC5uYXZiYXItZW5kID4gLm5hdmJhci1pdGVtLFxuICAgICAgLm5hdmJhci5pcy1pbmZvIC5uYXZiYXItZW5kIC5uYXZiYXItbGluayB7XG4gICAgICAgIGNvbG9yOiAjZmZmOyB9XG4gICAgICAubmF2YmFyLmlzLWluZm8gLm5hdmJhci1zdGFydCA+IGEubmF2YmFyLWl0ZW06Zm9jdXMsIC5uYXZiYXIuaXMtaW5mbyAubmF2YmFyLXN0YXJ0ID4gYS5uYXZiYXItaXRlbTpob3ZlciwgLm5hdmJhci5pcy1pbmZvIC5uYXZiYXItc3RhcnQgPiBhLm5hdmJhci1pdGVtLmlzLWFjdGl2ZSxcbiAgICAgIC5uYXZiYXIuaXMtaW5mbyAubmF2YmFyLXN0YXJ0IC5uYXZiYXItbGluazpmb2N1cyxcbiAgICAgIC5uYXZiYXIuaXMtaW5mbyAubmF2YmFyLXN0YXJ0IC5uYXZiYXItbGluazpob3ZlcixcbiAgICAgIC5uYXZiYXIuaXMtaW5mbyAubmF2YmFyLXN0YXJ0IC5uYXZiYXItbGluay5pcy1hY3RpdmUsXG4gICAgICAubmF2YmFyLmlzLWluZm8gLm5hdmJhci1lbmQgPiBhLm5hdmJhci1pdGVtOmZvY3VzLFxuICAgICAgLm5hdmJhci5pcy1pbmZvIC5uYXZiYXItZW5kID4gYS5uYXZiYXItaXRlbTpob3ZlcixcbiAgICAgIC5uYXZiYXIuaXMtaW5mbyAubmF2YmFyLWVuZCA+IGEubmF2YmFyLWl0ZW0uaXMtYWN0aXZlLFxuICAgICAgLm5hdmJhci5pcy1pbmZvIC5uYXZiYXItZW5kIC5uYXZiYXItbGluazpmb2N1cyxcbiAgICAgIC5uYXZiYXIuaXMtaW5mbyAubmF2YmFyLWVuZCAubmF2YmFyLWxpbms6aG92ZXIsXG4gICAgICAubmF2YmFyLmlzLWluZm8gLm5hdmJhci1lbmQgLm5hdmJhci1saW5rLmlzLWFjdGl2ZSB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMxMThmZTQ7XG4gICAgICAgIGNvbG9yOiAjZmZmOyB9XG4gICAgICAubmF2YmFyLmlzLWluZm8gLm5hdmJhci1zdGFydCAubmF2YmFyLWxpbms6OmFmdGVyLFxuICAgICAgLm5hdmJhci5pcy1pbmZvIC5uYXZiYXItZW5kIC5uYXZiYXItbGluazo6YWZ0ZXIge1xuICAgICAgICBib3JkZXItY29sb3I6ICNmZmY7IH1cbiAgICAgIC5uYXZiYXIuaXMtaW5mbyAubmF2YmFyLWl0ZW0uaGFzLWRyb3Bkb3duOmZvY3VzIC5uYXZiYXItbGluayxcbiAgICAgIC5uYXZiYXIuaXMtaW5mbyAubmF2YmFyLWl0ZW0uaGFzLWRyb3Bkb3duOmhvdmVyIC5uYXZiYXItbGluayxcbiAgICAgIC5uYXZiYXIuaXMtaW5mbyAubmF2YmFyLWl0ZW0uaGFzLWRyb3Bkb3duLmlzLWFjdGl2ZSAubmF2YmFyLWxpbmsge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTE4ZmU0O1xuICAgICAgICBjb2xvcjogI2ZmZjsgfVxuICAgICAgLm5hdmJhci5pcy1pbmZvIC5uYXZiYXItZHJvcGRvd24gYS5uYXZiYXItaXRlbS5pcy1hY3RpdmUge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjA5Y2VlO1xuICAgICAgICBjb2xvcjogI2ZmZjsgfSB9XG4gIC5uYXZiYXIuaXMtc3VjY2VzcyB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzIzZDE2MDtcbiAgICBjb2xvcjogI2ZmZjsgfVxuICAgIC5uYXZiYXIuaXMtc3VjY2VzcyAubmF2YmFyLWJyYW5kID4gLm5hdmJhci1pdGVtLFxuICAgIC5uYXZiYXIuaXMtc3VjY2VzcyAubmF2YmFyLWJyYW5kIC5uYXZiYXItbGluayB7XG4gICAgICBjb2xvcjogI2ZmZjsgfVxuICAgIC5uYXZiYXIuaXMtc3VjY2VzcyAubmF2YmFyLWJyYW5kID4gYS5uYXZiYXItaXRlbTpmb2N1cywgLm5hdmJhci5pcy1zdWNjZXNzIC5uYXZiYXItYnJhbmQgPiBhLm5hdmJhci1pdGVtOmhvdmVyLCAubmF2YmFyLmlzLXN1Y2Nlc3MgLm5hdmJhci1icmFuZCA+IGEubmF2YmFyLWl0ZW0uaXMtYWN0aXZlLFxuICAgIC5uYXZiYXIuaXMtc3VjY2VzcyAubmF2YmFyLWJyYW5kIC5uYXZiYXItbGluazpmb2N1cyxcbiAgICAubmF2YmFyLmlzLXN1Y2Nlc3MgLm5hdmJhci1icmFuZCAubmF2YmFyLWxpbms6aG92ZXIsXG4gICAgLm5hdmJhci5pcy1zdWNjZXNzIC5uYXZiYXItYnJhbmQgLm5hdmJhci1saW5rLmlzLWFjdGl2ZSB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjBiYzU2O1xuICAgICAgY29sb3I6ICNmZmY7IH1cbiAgICAubmF2YmFyLmlzLXN1Y2Nlc3MgLm5hdmJhci1icmFuZCAubmF2YmFyLWxpbms6OmFmdGVyIHtcbiAgICAgIGJvcmRlci1jb2xvcjogI2ZmZjsgfVxuICAgIC5uYXZiYXIuaXMtc3VjY2VzcyAubmF2YmFyLWJ1cmdlciB7XG4gICAgICBjb2xvcjogI2ZmZjsgfVxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgICAgLm5hdmJhci5pcy1zdWNjZXNzIC5uYXZiYXItc3RhcnQgPiAubmF2YmFyLWl0ZW0sXG4gICAgICAubmF2YmFyLmlzLXN1Y2Nlc3MgLm5hdmJhci1zdGFydCAubmF2YmFyLWxpbmssXG4gICAgICAubmF2YmFyLmlzLXN1Y2Nlc3MgLm5hdmJhci1lbmQgPiAubmF2YmFyLWl0ZW0sXG4gICAgICAubmF2YmFyLmlzLXN1Y2Nlc3MgLm5hdmJhci1lbmQgLm5hdmJhci1saW5rIHtcbiAgICAgICAgY29sb3I6ICNmZmY7IH1cbiAgICAgIC5uYXZiYXIuaXMtc3VjY2VzcyAubmF2YmFyLXN0YXJ0ID4gYS5uYXZiYXItaXRlbTpmb2N1cywgLm5hdmJhci5pcy1zdWNjZXNzIC5uYXZiYXItc3RhcnQgPiBhLm5hdmJhci1pdGVtOmhvdmVyLCAubmF2YmFyLmlzLXN1Y2Nlc3MgLm5hdmJhci1zdGFydCA+IGEubmF2YmFyLWl0ZW0uaXMtYWN0aXZlLFxuICAgICAgLm5hdmJhci5pcy1zdWNjZXNzIC5uYXZiYXItc3RhcnQgLm5hdmJhci1saW5rOmZvY3VzLFxuICAgICAgLm5hdmJhci5pcy1zdWNjZXNzIC5uYXZiYXItc3RhcnQgLm5hdmJhci1saW5rOmhvdmVyLFxuICAgICAgLm5hdmJhci5pcy1zdWNjZXNzIC5uYXZiYXItc3RhcnQgLm5hdmJhci1saW5rLmlzLWFjdGl2ZSxcbiAgICAgIC5uYXZiYXIuaXMtc3VjY2VzcyAubmF2YmFyLWVuZCA+IGEubmF2YmFyLWl0ZW06Zm9jdXMsXG4gICAgICAubmF2YmFyLmlzLXN1Y2Nlc3MgLm5hdmJhci1lbmQgPiBhLm5hdmJhci1pdGVtOmhvdmVyLFxuICAgICAgLm5hdmJhci5pcy1zdWNjZXNzIC5uYXZiYXItZW5kID4gYS5uYXZiYXItaXRlbS5pcy1hY3RpdmUsXG4gICAgICAubmF2YmFyLmlzLXN1Y2Nlc3MgLm5hdmJhci1lbmQgLm5hdmJhci1saW5rOmZvY3VzLFxuICAgICAgLm5hdmJhci5pcy1zdWNjZXNzIC5uYXZiYXItZW5kIC5uYXZiYXItbGluazpob3ZlcixcbiAgICAgIC5uYXZiYXIuaXMtc3VjY2VzcyAubmF2YmFyLWVuZCAubmF2YmFyLWxpbmsuaXMtYWN0aXZlIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzIwYmM1NjtcbiAgICAgICAgY29sb3I6ICNmZmY7IH1cbiAgICAgIC5uYXZiYXIuaXMtc3VjY2VzcyAubmF2YmFyLXN0YXJ0IC5uYXZiYXItbGluazo6YWZ0ZXIsXG4gICAgICAubmF2YmFyLmlzLXN1Y2Nlc3MgLm5hdmJhci1lbmQgLm5hdmJhci1saW5rOjphZnRlciB7XG4gICAgICAgIGJvcmRlci1jb2xvcjogI2ZmZjsgfVxuICAgICAgLm5hdmJhci5pcy1zdWNjZXNzIC5uYXZiYXItaXRlbS5oYXMtZHJvcGRvd246Zm9jdXMgLm5hdmJhci1saW5rLFxuICAgICAgLm5hdmJhci5pcy1zdWNjZXNzIC5uYXZiYXItaXRlbS5oYXMtZHJvcGRvd246aG92ZXIgLm5hdmJhci1saW5rLFxuICAgICAgLm5hdmJhci5pcy1zdWNjZXNzIC5uYXZiYXItaXRlbS5oYXMtZHJvcGRvd24uaXMtYWN0aXZlIC5uYXZiYXItbGluayB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMyMGJjNTY7XG4gICAgICAgIGNvbG9yOiAjZmZmOyB9XG4gICAgICAubmF2YmFyLmlzLXN1Y2Nlc3MgLm5hdmJhci1kcm9wZG93biBhLm5hdmJhci1pdGVtLmlzLWFjdGl2ZSB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMyM2QxNjA7XG4gICAgICAgIGNvbG9yOiAjZmZmOyB9IH1cbiAgLm5hdmJhci5pcy13YXJuaW5nIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZkZDU3O1xuICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNyk7IH1cbiAgICAubmF2YmFyLmlzLXdhcm5pbmcgLm5hdmJhci1icmFuZCA+IC5uYXZiYXItaXRlbSxcbiAgICAubmF2YmFyLmlzLXdhcm5pbmcgLm5hdmJhci1icmFuZCAubmF2YmFyLWxpbmsge1xuICAgICAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC43KTsgfVxuICAgIC5uYXZiYXIuaXMtd2FybmluZyAubmF2YmFyLWJyYW5kID4gYS5uYXZiYXItaXRlbTpmb2N1cywgLm5hdmJhci5pcy13YXJuaW5nIC5uYXZiYXItYnJhbmQgPiBhLm5hdmJhci1pdGVtOmhvdmVyLCAubmF2YmFyLmlzLXdhcm5pbmcgLm5hdmJhci1icmFuZCA+IGEubmF2YmFyLWl0ZW0uaXMtYWN0aXZlLFxuICAgIC5uYXZiYXIuaXMtd2FybmluZyAubmF2YmFyLWJyYW5kIC5uYXZiYXItbGluazpmb2N1cyxcbiAgICAubmF2YmFyLmlzLXdhcm5pbmcgLm5hdmJhci1icmFuZCAubmF2YmFyLWxpbms6aG92ZXIsXG4gICAgLm5hdmJhci5pcy13YXJuaW5nIC5uYXZiYXItYnJhbmQgLm5hdmJhci1saW5rLmlzLWFjdGl2ZSB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZkODNkO1xuICAgICAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC43KTsgfVxuICAgIC5uYXZiYXIuaXMtd2FybmluZyAubmF2YmFyLWJyYW5kIC5uYXZiYXItbGluazo6YWZ0ZXIge1xuICAgICAgYm9yZGVyLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNyk7IH1cbiAgICAubmF2YmFyLmlzLXdhcm5pbmcgLm5hdmJhci1idXJnZXIge1xuICAgICAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC43KTsgfVxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgICAgLm5hdmJhci5pcy13YXJuaW5nIC5uYXZiYXItc3RhcnQgPiAubmF2YmFyLWl0ZW0sXG4gICAgICAubmF2YmFyLmlzLXdhcm5pbmcgLm5hdmJhci1zdGFydCAubmF2YmFyLWxpbmssXG4gICAgICAubmF2YmFyLmlzLXdhcm5pbmcgLm5hdmJhci1lbmQgPiAubmF2YmFyLWl0ZW0sXG4gICAgICAubmF2YmFyLmlzLXdhcm5pbmcgLm5hdmJhci1lbmQgLm5hdmJhci1saW5rIHtcbiAgICAgICAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC43KTsgfVxuICAgICAgLm5hdmJhci5pcy13YXJuaW5nIC5uYXZiYXItc3RhcnQgPiBhLm5hdmJhci1pdGVtOmZvY3VzLCAubmF2YmFyLmlzLXdhcm5pbmcgLm5hdmJhci1zdGFydCA+IGEubmF2YmFyLWl0ZW06aG92ZXIsIC5uYXZiYXIuaXMtd2FybmluZyAubmF2YmFyLXN0YXJ0ID4gYS5uYXZiYXItaXRlbS5pcy1hY3RpdmUsXG4gICAgICAubmF2YmFyLmlzLXdhcm5pbmcgLm5hdmJhci1zdGFydCAubmF2YmFyLWxpbms6Zm9jdXMsXG4gICAgICAubmF2YmFyLmlzLXdhcm5pbmcgLm5hdmJhci1zdGFydCAubmF2YmFyLWxpbms6aG92ZXIsXG4gICAgICAubmF2YmFyLmlzLXdhcm5pbmcgLm5hdmJhci1zdGFydCAubmF2YmFyLWxpbmsuaXMtYWN0aXZlLFxuICAgICAgLm5hdmJhci5pcy13YXJuaW5nIC5uYXZiYXItZW5kID4gYS5uYXZiYXItaXRlbTpmb2N1cyxcbiAgICAgIC5uYXZiYXIuaXMtd2FybmluZyAubmF2YmFyLWVuZCA+IGEubmF2YmFyLWl0ZW06aG92ZXIsXG4gICAgICAubmF2YmFyLmlzLXdhcm5pbmcgLm5hdmJhci1lbmQgPiBhLm5hdmJhci1pdGVtLmlzLWFjdGl2ZSxcbiAgICAgIC5uYXZiYXIuaXMtd2FybmluZyAubmF2YmFyLWVuZCAubmF2YmFyLWxpbms6Zm9jdXMsXG4gICAgICAubmF2YmFyLmlzLXdhcm5pbmcgLm5hdmJhci1lbmQgLm5hdmJhci1saW5rOmhvdmVyLFxuICAgICAgLm5hdmJhci5pcy13YXJuaW5nIC5uYXZiYXItZW5kIC5uYXZiYXItbGluay5pcy1hY3RpdmUge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZkODNkO1xuICAgICAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjcpOyB9XG4gICAgICAubmF2YmFyLmlzLXdhcm5pbmcgLm5hdmJhci1zdGFydCAubmF2YmFyLWxpbms6OmFmdGVyLFxuICAgICAgLm5hdmJhci5pcy13YXJuaW5nIC5uYXZiYXItZW5kIC5uYXZiYXItbGluazo6YWZ0ZXIge1xuICAgICAgICBib3JkZXItY29sb3I6IHJnYmEoMCwgMCwgMCwgMC43KTsgfVxuICAgICAgLm5hdmJhci5pcy13YXJuaW5nIC5uYXZiYXItaXRlbS5oYXMtZHJvcGRvd246Zm9jdXMgLm5hdmJhci1saW5rLFxuICAgICAgLm5hdmJhci5pcy13YXJuaW5nIC5uYXZiYXItaXRlbS5oYXMtZHJvcGRvd246aG92ZXIgLm5hdmJhci1saW5rLFxuICAgICAgLm5hdmJhci5pcy13YXJuaW5nIC5uYXZiYXItaXRlbS5oYXMtZHJvcGRvd24uaXMtYWN0aXZlIC5uYXZiYXItbGluayB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmQ4M2Q7XG4gICAgICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNyk7IH1cbiAgICAgIC5uYXZiYXIuaXMtd2FybmluZyAubmF2YmFyLWRyb3Bkb3duIGEubmF2YmFyLWl0ZW0uaXMtYWN0aXZlIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZGQ1NztcbiAgICAgICAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC43KTsgfSB9XG4gIC5uYXZiYXIuaXMtZGFuZ2VyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmYzODYwO1xuICAgIGNvbG9yOiAjZmZmOyB9XG4gICAgLm5hdmJhci5pcy1kYW5nZXIgLm5hdmJhci1icmFuZCA+IC5uYXZiYXItaXRlbSxcbiAgICAubmF2YmFyLmlzLWRhbmdlciAubmF2YmFyLWJyYW5kIC5uYXZiYXItbGluayB7XG4gICAgICBjb2xvcjogI2ZmZjsgfVxuICAgIC5uYXZiYXIuaXMtZGFuZ2VyIC5uYXZiYXItYnJhbmQgPiBhLm5hdmJhci1pdGVtOmZvY3VzLCAubmF2YmFyLmlzLWRhbmdlciAubmF2YmFyLWJyYW5kID4gYS5uYXZiYXItaXRlbTpob3ZlciwgLm5hdmJhci5pcy1kYW5nZXIgLm5hdmJhci1icmFuZCA+IGEubmF2YmFyLWl0ZW0uaXMtYWN0aXZlLFxuICAgIC5uYXZiYXIuaXMtZGFuZ2VyIC5uYXZiYXItYnJhbmQgLm5hdmJhci1saW5rOmZvY3VzLFxuICAgIC5uYXZiYXIuaXMtZGFuZ2VyIC5uYXZiYXItYnJhbmQgLm5hdmJhci1saW5rOmhvdmVyLFxuICAgIC5uYXZiYXIuaXMtZGFuZ2VyIC5uYXZiYXItYnJhbmQgLm5hdmJhci1saW5rLmlzLWFjdGl2ZSB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmYxZjRiO1xuICAgICAgY29sb3I6ICNmZmY7IH1cbiAgICAubmF2YmFyLmlzLWRhbmdlciAubmF2YmFyLWJyYW5kIC5uYXZiYXItbGluazo6YWZ0ZXIge1xuICAgICAgYm9yZGVyLWNvbG9yOiAjZmZmOyB9XG4gICAgLm5hdmJhci5pcy1kYW5nZXIgLm5hdmJhci1idXJnZXIge1xuICAgICAgY29sb3I6ICNmZmY7IH1cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgIC5uYXZiYXIuaXMtZGFuZ2VyIC5uYXZiYXItc3RhcnQgPiAubmF2YmFyLWl0ZW0sXG4gICAgICAubmF2YmFyLmlzLWRhbmdlciAubmF2YmFyLXN0YXJ0IC5uYXZiYXItbGluayxcbiAgICAgIC5uYXZiYXIuaXMtZGFuZ2VyIC5uYXZiYXItZW5kID4gLm5hdmJhci1pdGVtLFxuICAgICAgLm5hdmJhci5pcy1kYW5nZXIgLm5hdmJhci1lbmQgLm5hdmJhci1saW5rIHtcbiAgICAgICAgY29sb3I6ICNmZmY7IH1cbiAgICAgIC5uYXZiYXIuaXMtZGFuZ2VyIC5uYXZiYXItc3RhcnQgPiBhLm5hdmJhci1pdGVtOmZvY3VzLCAubmF2YmFyLmlzLWRhbmdlciAubmF2YmFyLXN0YXJ0ID4gYS5uYXZiYXItaXRlbTpob3ZlciwgLm5hdmJhci5pcy1kYW5nZXIgLm5hdmJhci1zdGFydCA+IGEubmF2YmFyLWl0ZW0uaXMtYWN0aXZlLFxuICAgICAgLm5hdmJhci5pcy1kYW5nZXIgLm5hdmJhci1zdGFydCAubmF2YmFyLWxpbms6Zm9jdXMsXG4gICAgICAubmF2YmFyLmlzLWRhbmdlciAubmF2YmFyLXN0YXJ0IC5uYXZiYXItbGluazpob3ZlcixcbiAgICAgIC5uYXZiYXIuaXMtZGFuZ2VyIC5uYXZiYXItc3RhcnQgLm5hdmJhci1saW5rLmlzLWFjdGl2ZSxcbiAgICAgIC5uYXZiYXIuaXMtZGFuZ2VyIC5uYXZiYXItZW5kID4gYS5uYXZiYXItaXRlbTpmb2N1cyxcbiAgICAgIC5uYXZiYXIuaXMtZGFuZ2VyIC5uYXZiYXItZW5kID4gYS5uYXZiYXItaXRlbTpob3ZlcixcbiAgICAgIC5uYXZiYXIuaXMtZGFuZ2VyIC5uYXZiYXItZW5kID4gYS5uYXZiYXItaXRlbS5pcy1hY3RpdmUsXG4gICAgICAubmF2YmFyLmlzLWRhbmdlciAubmF2YmFyLWVuZCAubmF2YmFyLWxpbms6Zm9jdXMsXG4gICAgICAubmF2YmFyLmlzLWRhbmdlciAubmF2YmFyLWVuZCAubmF2YmFyLWxpbms6aG92ZXIsXG4gICAgICAubmF2YmFyLmlzLWRhbmdlciAubmF2YmFyLWVuZCAubmF2YmFyLWxpbmsuaXMtYWN0aXZlIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmMWY0YjtcbiAgICAgICAgY29sb3I6ICNmZmY7IH1cbiAgICAgIC5uYXZiYXIuaXMtZGFuZ2VyIC5uYXZiYXItc3RhcnQgLm5hdmJhci1saW5rOjphZnRlcixcbiAgICAgIC5uYXZiYXIuaXMtZGFuZ2VyIC5uYXZiYXItZW5kIC5uYXZiYXItbGluazo6YWZ0ZXIge1xuICAgICAgICBib3JkZXItY29sb3I6ICNmZmY7IH1cbiAgICAgIC5uYXZiYXIuaXMtZGFuZ2VyIC5uYXZiYXItaXRlbS5oYXMtZHJvcGRvd246Zm9jdXMgLm5hdmJhci1saW5rLFxuICAgICAgLm5hdmJhci5pcy1kYW5nZXIgLm5hdmJhci1pdGVtLmhhcy1kcm9wZG93bjpob3ZlciAubmF2YmFyLWxpbmssXG4gICAgICAubmF2YmFyLmlzLWRhbmdlciAubmF2YmFyLWl0ZW0uaGFzLWRyb3Bkb3duLmlzLWFjdGl2ZSAubmF2YmFyLWxpbmsge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmYxZjRiO1xuICAgICAgICBjb2xvcjogI2ZmZjsgfVxuICAgICAgLm5hdmJhci5pcy1kYW5nZXIgLm5hdmJhci1kcm9wZG93biBhLm5hdmJhci1pdGVtLmlzLWFjdGl2ZSB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZjM4NjA7XG4gICAgICAgIGNvbG9yOiAjZmZmOyB9IH1cbiAgLm5hdmJhciA+IC5jb250YWluZXIge1xuICAgIGFsaWduLWl0ZW1zOiBzdHJldGNoO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgbWluLWhlaWdodDogMy4yNXJlbTtcbiAgICB3aWR0aDogMTAwJTsgfVxuICAubmF2YmFyLmhhcy1zaGFkb3cge1xuICAgIGJveC1zaGFkb3c6IDAgMnB4IDAgMCB3aGl0ZXNtb2tlOyB9XG4gIC5uYXZiYXIuaXMtZml4ZWQtYm90dG9tLCAubmF2YmFyLmlzLWZpeGVkLXRvcCB7XG4gICAgbGVmdDogMDtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgcmlnaHQ6IDA7XG4gICAgei1pbmRleDogMzA7IH1cbiAgLm5hdmJhci5pcy1maXhlZC1ib3R0b20ge1xuICAgIGJvdHRvbTogMDsgfVxuICAgIC5uYXZiYXIuaXMtZml4ZWQtYm90dG9tLmhhcy1zaGFkb3cge1xuICAgICAgYm94LXNoYWRvdzogMCAtMnB4IDAgMCB3aGl0ZXNtb2tlOyB9XG4gIC5uYXZiYXIuaXMtZml4ZWQtdG9wIHtcbiAgICB0b3A6IDA7IH1cblxuaHRtbC5oYXMtbmF2YmFyLWZpeGVkLXRvcCxcbmJvZHkuaGFzLW5hdmJhci1maXhlZC10b3Age1xuICBwYWRkaW5nLXRvcDogMy4yNXJlbTsgfVxuXG5odG1sLmhhcy1uYXZiYXItZml4ZWQtYm90dG9tLFxuYm9keS5oYXMtbmF2YmFyLWZpeGVkLWJvdHRvbSB7XG4gIHBhZGRpbmctYm90dG9tOiAzLjI1cmVtOyB9XG5cbi5uYXZiYXItYnJhbmQsXG4ubmF2YmFyLXRhYnMge1xuICBhbGlnbi1pdGVtczogc3RyZXRjaDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1zaHJpbms6IDA7XG4gIG1pbi1oZWlnaHQ6IDMuMjVyZW07IH1cblxuLm5hdmJhci1icmFuZCBhLm5hdmJhci1pdGVtOmZvY3VzLCAubmF2YmFyLWJyYW5kIGEubmF2YmFyLWl0ZW06aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsgfVxuXG4ubmF2YmFyLXRhYnMge1xuICAtd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzogdG91Y2g7XG4gIG1heC13aWR0aDogMTAwdnc7XG4gIG92ZXJmbG93LXg6IGF1dG87XG4gIG92ZXJmbG93LXk6IGhpZGRlbjsgfVxuXG4ubmF2YmFyLWJ1cmdlciB7XG4gIGNvbG9yOiAjNGE0YTRhO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBoZWlnaHQ6IDMuMjVyZW07XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6IDMuMjVyZW07XG4gIG1hcmdpbi1sZWZ0OiBhdXRvOyB9XG4gIC5uYXZiYXItYnVyZ2VyIHNwYW4ge1xuICAgIGJhY2tncm91bmQtY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBoZWlnaHQ6IDFweDtcbiAgICBsZWZ0OiBjYWxjKDUwJSAtIDhweCk7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRyYW5zZm9ybS1vcmlnaW46IGNlbnRlcjtcbiAgICB0cmFuc2l0aW9uLWR1cmF0aW9uOiA4Nm1zO1xuICAgIHRyYW5zaXRpb24tcHJvcGVydHk6IGJhY2tncm91bmQtY29sb3IsIG9wYWNpdHksIHRyYW5zZm9ybTtcbiAgICB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZS1vdXQ7XG4gICAgd2lkdGg6IDE2cHg7IH1cbiAgICAubmF2YmFyLWJ1cmdlciBzcGFuOm50aC1jaGlsZCgxKSB7XG4gICAgICB0b3A6IGNhbGMoNTAlIC0gNnB4KTsgfVxuICAgIC5uYXZiYXItYnVyZ2VyIHNwYW46bnRoLWNoaWxkKDIpIHtcbiAgICAgIHRvcDogY2FsYyg1MCUgLSAxcHgpOyB9XG4gICAgLm5hdmJhci1idXJnZXIgc3BhbjpudGgtY2hpbGQoMykge1xuICAgICAgdG9wOiBjYWxjKDUwJSArIDRweCk7IH1cbiAgLm5hdmJhci1idXJnZXI6aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4wNSk7IH1cbiAgLm5hdmJhci1idXJnZXIuaXMtYWN0aXZlIHNwYW46bnRoLWNoaWxkKDEpIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoNXB4KSByb3RhdGUoNDVkZWcpOyB9XG4gIC5uYXZiYXItYnVyZ2VyLmlzLWFjdGl2ZSBzcGFuOm50aC1jaGlsZCgyKSB7XG4gICAgb3BhY2l0eTogMDsgfVxuICAubmF2YmFyLWJ1cmdlci5pcy1hY3RpdmUgc3BhbjpudGgtY2hpbGQoMykge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNXB4KSByb3RhdGUoLTQ1ZGVnKTsgfVxuXG4ubmF2YmFyLW1lbnUge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbi5uYXZiYXItaXRlbSxcbi5uYXZiYXItbGluayB7XG4gIGNvbG9yOiAjNGE0YTRhO1xuICBkaXNwbGF5OiBibG9jaztcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgcGFkZGluZzogMC41cmVtIDAuNzVyZW07XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAubmF2YmFyLWl0ZW0gLmljb246b25seS1jaGlsZCxcbiAgLm5hdmJhci1saW5rIC5pY29uOm9ubHktY2hpbGQge1xuICAgIG1hcmdpbi1sZWZ0OiAtMC4yNXJlbTtcbiAgICBtYXJnaW4tcmlnaHQ6IC0wLjI1cmVtOyB9XG5cbmEubmF2YmFyLWl0ZW0sXG4ubmF2YmFyLWxpbmsge1xuICBjdXJzb3I6IHBvaW50ZXI7IH1cbiAgYS5uYXZiYXItaXRlbTpmb2N1cywgYS5uYXZiYXItaXRlbTpmb2N1cy13aXRoaW4sIGEubmF2YmFyLWl0ZW06aG92ZXIsIGEubmF2YmFyLWl0ZW0uaXMtYWN0aXZlLFxuICAubmF2YmFyLWxpbms6Zm9jdXMsXG4gIC5uYXZiYXItbGluazpmb2N1cy13aXRoaW4sXG4gIC5uYXZiYXItbGluazpob3ZlcixcbiAgLm5hdmJhci1saW5rLmlzLWFjdGl2ZSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZhZmFmYTtcbiAgICBjb2xvcjogIzMyNzNkYzsgfVxuXG4ubmF2YmFyLWl0ZW0ge1xuICBkaXNwbGF5OiBibG9jaztcbiAgZmxleC1ncm93OiAwO1xuICBmbGV4LXNocmluazogMDsgfVxuICAubmF2YmFyLWl0ZW0gaW1nIHtcbiAgICBtYXgtaGVpZ2h0OiAxLjc1cmVtOyB9XG4gIC5uYXZiYXItaXRlbS5oYXMtZHJvcGRvd24ge1xuICAgIHBhZGRpbmc6IDA7IH1cbiAgLm5hdmJhci1pdGVtLmlzLWV4cGFuZGVkIHtcbiAgICBmbGV4LWdyb3c6IDE7XG4gICAgZmxleC1zaHJpbms6IDE7IH1cbiAgLm5hdmJhci1pdGVtLmlzLXRhYiB7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAgIG1pbi1oZWlnaHQ6IDMuMjVyZW07XG4gICAgcGFkZGluZy1ib3R0b206IGNhbGMoMC41cmVtIC0gMXB4KTsgfVxuICAgIC5uYXZiYXItaXRlbS5pcy10YWI6Zm9jdXMsIC5uYXZiYXItaXRlbS5pcy10YWI6aG92ZXIge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICBib3JkZXItYm90dG9tLWNvbG9yOiAjMzI3M2RjOyB9XG4gICAgLm5hdmJhci1pdGVtLmlzLXRhYi5pcy1hY3RpdmUge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICBib3JkZXItYm90dG9tLWNvbG9yOiAjMzI3M2RjO1xuICAgICAgYm9yZGVyLWJvdHRvbS1zdHlsZTogc29saWQ7XG4gICAgICBib3JkZXItYm90dG9tLXdpZHRoOiAzcHg7XG4gICAgICBjb2xvcjogIzMyNzNkYztcbiAgICAgIHBhZGRpbmctYm90dG9tOiBjYWxjKDAuNXJlbSAtIDNweCk7IH1cblxuLm5hdmJhci1jb250ZW50IHtcbiAgZmxleC1ncm93OiAxO1xuICBmbGV4LXNocmluazogMTsgfVxuXG4ubmF2YmFyLWxpbms6bm90KC5pcy1hcnJvd2xlc3MpIHtcbiAgcGFkZGluZy1yaWdodDogMi41ZW07IH1cbiAgLm5hdmJhci1saW5rOm5vdCguaXMtYXJyb3dsZXNzKTo6YWZ0ZXIge1xuICAgIGJvcmRlci1jb2xvcjogIzMyNzNkYztcbiAgICBtYXJnaW4tdG9wOiAtMC4zNzVlbTtcbiAgICByaWdodDogMS4xMjVlbTsgfVxuXG4ubmF2YmFyLWRyb3Bkb3duIHtcbiAgZm9udC1zaXplOiAwLjg3NXJlbTtcbiAgcGFkZGluZy1ib3R0b206IDAuNXJlbTtcbiAgcGFkZGluZy10b3A6IDAuNXJlbTsgfVxuICAubmF2YmFyLWRyb3Bkb3duIC5uYXZiYXItaXRlbSB7XG4gICAgcGFkZGluZy1sZWZ0OiAxLjVyZW07XG4gICAgcGFkZGluZy1yaWdodDogMS41cmVtOyB9XG5cbi5uYXZiYXItZGl2aWRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlc21va2U7XG4gIGJvcmRlcjogbm9uZTtcbiAgZGlzcGxheTogbm9uZTtcbiAgaGVpZ2h0OiAycHg7XG4gIG1hcmdpbjogMC41cmVtIDA7IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTAyM3B4KSB7XG4gIC5uYXZiYXIgPiAuY29udGFpbmVyIHtcbiAgICBkaXNwbGF5OiBibG9jazsgfVxuICAubmF2YmFyLWJyYW5kIC5uYXZiYXItaXRlbSxcbiAgLm5hdmJhci10YWJzIC5uYXZiYXItaXRlbSB7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBkaXNwbGF5OiBmbGV4OyB9XG4gIC5uYXZiYXItbGluazo6YWZ0ZXIge1xuICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgLm5hdmJhci1tZW51IHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICBib3gtc2hhZG93OiAwIDhweCAxNnB4IHJnYmEoMTAsIDEwLCAxMCwgMC4xKTtcbiAgICBwYWRkaW5nOiAwLjVyZW0gMDsgfVxuICAgIC5uYXZiYXItbWVudS5pcy1hY3RpdmUge1xuICAgICAgZGlzcGxheTogYmxvY2s7IH1cbiAgLm5hdmJhci5pcy1maXhlZC1ib3R0b20tdG91Y2gsIC5uYXZiYXIuaXMtZml4ZWQtdG9wLXRvdWNoIHtcbiAgICBsZWZ0OiAwO1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICByaWdodDogMDtcbiAgICB6LWluZGV4OiAzMDsgfVxuICAubmF2YmFyLmlzLWZpeGVkLWJvdHRvbS10b3VjaCB7XG4gICAgYm90dG9tOiAwOyB9XG4gICAgLm5hdmJhci5pcy1maXhlZC1ib3R0b20tdG91Y2guaGFzLXNoYWRvdyB7XG4gICAgICBib3gtc2hhZG93OiAwIC0ycHggM3B4IHJnYmEoMTAsIDEwLCAxMCwgMC4xKTsgfVxuICAubmF2YmFyLmlzLWZpeGVkLXRvcC10b3VjaCB7XG4gICAgdG9wOiAwOyB9XG4gIC5uYXZiYXIuaXMtZml4ZWQtdG9wIC5uYXZiYXItbWVudSwgLm5hdmJhci5pcy1maXhlZC10b3AtdG91Y2ggLm5hdmJhci1tZW51IHtcbiAgICAtd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzogdG91Y2g7XG4gICAgbWF4LWhlaWdodDogY2FsYygxMDB2aCAtIDMuMjVyZW0pO1xuICAgIG92ZXJmbG93OiBhdXRvOyB9XG4gIGh0bWwuaGFzLW5hdmJhci1maXhlZC10b3AtdG91Y2gsXG4gIGJvZHkuaGFzLW5hdmJhci1maXhlZC10b3AtdG91Y2gge1xuICAgIHBhZGRpbmctdG9wOiAzLjI1cmVtOyB9XG4gIGh0bWwuaGFzLW5hdmJhci1maXhlZC1ib3R0b20tdG91Y2gsXG4gIGJvZHkuaGFzLW5hdmJhci1maXhlZC1ib3R0b20tdG91Y2gge1xuICAgIHBhZGRpbmctYm90dG9tOiAzLjI1cmVtOyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC5uYXZiYXIsXG4gIC5uYXZiYXItbWVudSxcbiAgLm5hdmJhci1zdGFydCxcbiAgLm5hdmJhci1lbmQge1xuICAgIGFsaWduLWl0ZW1zOiBzdHJldGNoO1xuICAgIGRpc3BsYXk6IGZsZXg7IH1cbiAgLm5hdmJhciB7XG4gICAgbWluLWhlaWdodDogMy4yNXJlbTsgfVxuICAgIC5uYXZiYXIuaXMtc3BhY2VkIHtcbiAgICAgIHBhZGRpbmc6IDFyZW0gMnJlbTsgfVxuICAgICAgLm5hdmJhci5pcy1zcGFjZWQgLm5hdmJhci1zdGFydCxcbiAgICAgIC5uYXZiYXIuaXMtc3BhY2VkIC5uYXZiYXItZW5kIHtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxuICAgICAgLm5hdmJhci5pcy1zcGFjZWQgYS5uYXZiYXItaXRlbSxcbiAgICAgIC5uYXZiYXIuaXMtc3BhY2VkIC5uYXZiYXItbGluayB7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDRweDsgfVxuICAgIC5uYXZiYXIuaXMtdHJhbnNwYXJlbnQgYS5uYXZiYXItaXRlbTpmb2N1cywgLm5hdmJhci5pcy10cmFuc3BhcmVudCBhLm5hdmJhci1pdGVtOmhvdmVyLCAubmF2YmFyLmlzLXRyYW5zcGFyZW50IGEubmF2YmFyLWl0ZW0uaXMtYWN0aXZlLFxuICAgIC5uYXZiYXIuaXMtdHJhbnNwYXJlbnQgLm5hdmJhci1saW5rOmZvY3VzLFxuICAgIC5uYXZiYXIuaXMtdHJhbnNwYXJlbnQgLm5hdmJhci1saW5rOmhvdmVyLFxuICAgIC5uYXZiYXIuaXMtdHJhbnNwYXJlbnQgLm5hdmJhci1saW5rLmlzLWFjdGl2ZSB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50OyB9XG4gICAgLm5hdmJhci5pcy10cmFuc3BhcmVudCAubmF2YmFyLWl0ZW0uaGFzLWRyb3Bkb3duLmlzLWFjdGl2ZSAubmF2YmFyLWxpbmssIC5uYXZiYXIuaXMtdHJhbnNwYXJlbnQgLm5hdmJhci1pdGVtLmhhcy1kcm9wZG93bi5pcy1ob3ZlcmFibGU6Zm9jdXMgLm5hdmJhci1saW5rLCAubmF2YmFyLmlzLXRyYW5zcGFyZW50IC5uYXZiYXItaXRlbS5oYXMtZHJvcGRvd24uaXMtaG92ZXJhYmxlOmZvY3VzLXdpdGhpbiAubmF2YmFyLWxpbmssIC5uYXZiYXIuaXMtdHJhbnNwYXJlbnQgLm5hdmJhci1pdGVtLmhhcy1kcm9wZG93bi5pcy1ob3ZlcmFibGU6aG92ZXIgLm5hdmJhci1saW5rIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7IH1cbiAgICAubmF2YmFyLmlzLXRyYW5zcGFyZW50IC5uYXZiYXItZHJvcGRvd24gYS5uYXZiYXItaXRlbTpmb2N1cywgLm5hdmJhci5pcy10cmFuc3BhcmVudCAubmF2YmFyLWRyb3Bkb3duIGEubmF2YmFyLWl0ZW06aG92ZXIge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGVzbW9rZTtcbiAgICAgIGNvbG9yOiAjMGEwYTBhOyB9XG4gICAgLm5hdmJhci5pcy10cmFuc3BhcmVudCAubmF2YmFyLWRyb3Bkb3duIGEubmF2YmFyLWl0ZW0uaXMtYWN0aXZlIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlc21va2U7XG4gICAgICBjb2xvcjogIzMyNzNkYzsgfVxuICAubmF2YmFyLWJ1cmdlciB7XG4gICAgZGlzcGxheTogbm9uZTsgfVxuICAubmF2YmFyLWl0ZW0sXG4gIC5uYXZiYXItbGluayB7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBkaXNwbGF5OiBmbGV4OyB9XG4gIC5uYXZiYXItaXRlbSB7XG4gICAgZGlzcGxheTogZmxleDsgfVxuICAgIC5uYXZiYXItaXRlbS5oYXMtZHJvcGRvd24ge1xuICAgICAgYWxpZ24taXRlbXM6IHN0cmV0Y2g7IH1cbiAgICAubmF2YmFyLWl0ZW0uaGFzLWRyb3Bkb3duLXVwIC5uYXZiYXItbGluazo6YWZ0ZXIge1xuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMTM1ZGVnKSB0cmFuc2xhdGUoMC4yNWVtLCAtMC4yNWVtKTsgfVxuICAgIC5uYXZiYXItaXRlbS5oYXMtZHJvcGRvd24tdXAgLm5hdmJhci1kcm9wZG93biB7XG4gICAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgI2RiZGJkYjtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDZweCA2cHggMCAwO1xuICAgICAgYm9yZGVyLXRvcDogbm9uZTtcbiAgICAgIGJvdHRvbTogMTAwJTtcbiAgICAgIGJveC1zaGFkb3c6IDAgLThweCA4cHggcmdiYSgxMCwgMTAsIDEwLCAwLjEpO1xuICAgICAgdG9wOiBhdXRvOyB9XG4gICAgLm5hdmJhci1pdGVtLmlzLWFjdGl2ZSAubmF2YmFyLWRyb3Bkb3duLCAubmF2YmFyLWl0ZW0uaXMtaG92ZXJhYmxlOmZvY3VzIC5uYXZiYXItZHJvcGRvd24sIC5uYXZiYXItaXRlbS5pcy1ob3ZlcmFibGU6Zm9jdXMtd2l0aGluIC5uYXZiYXItZHJvcGRvd24sIC5uYXZiYXItaXRlbS5pcy1ob3ZlcmFibGU6aG92ZXIgLm5hdmJhci1kcm9wZG93biB7XG4gICAgICBkaXNwbGF5OiBibG9jazsgfVxuICAgICAgLm5hdmJhci5pcy1zcGFjZWQgLm5hdmJhci1pdGVtLmlzLWFjdGl2ZSAubmF2YmFyLWRyb3Bkb3duLCAubmF2YmFyLWl0ZW0uaXMtYWN0aXZlIC5uYXZiYXItZHJvcGRvd24uaXMtYm94ZWQsIC5uYXZiYXIuaXMtc3BhY2VkIC5uYXZiYXItaXRlbS5pcy1ob3ZlcmFibGU6Zm9jdXMgLm5hdmJhci1kcm9wZG93biwgLm5hdmJhci1pdGVtLmlzLWhvdmVyYWJsZTpmb2N1cyAubmF2YmFyLWRyb3Bkb3duLmlzLWJveGVkLCAubmF2YmFyLmlzLXNwYWNlZCAubmF2YmFyLWl0ZW0uaXMtaG92ZXJhYmxlOmZvY3VzLXdpdGhpbiAubmF2YmFyLWRyb3Bkb3duLCAubmF2YmFyLWl0ZW0uaXMtaG92ZXJhYmxlOmZvY3VzLXdpdGhpbiAubmF2YmFyLWRyb3Bkb3duLmlzLWJveGVkLCAubmF2YmFyLmlzLXNwYWNlZCAubmF2YmFyLWl0ZW0uaXMtaG92ZXJhYmxlOmhvdmVyIC5uYXZiYXItZHJvcGRvd24sIC5uYXZiYXItaXRlbS5pcy1ob3ZlcmFibGU6aG92ZXIgLm5hdmJhci1kcm9wZG93bi5pcy1ib3hlZCB7XG4gICAgICAgIG9wYWNpdHk6IDE7XG4gICAgICAgIHBvaW50ZXItZXZlbnRzOiBhdXRvO1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7IH1cbiAgLm5hdmJhci1tZW51IHtcbiAgICBmbGV4LWdyb3c6IDE7XG4gICAgZmxleC1zaHJpbms6IDA7IH1cbiAgLm5hdmJhci1zdGFydCB7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICAgIG1hcmdpbi1yaWdodDogYXV0bzsgfVxuICAubmF2YmFyLWVuZCB7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgICBtYXJnaW4tbGVmdDogYXV0bzsgfVxuICAubmF2YmFyLWRyb3Bkb3duIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiA2cHg7XG4gICAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDZweDtcbiAgICBib3JkZXItdG9wOiAycHggc29saWQgI2RiZGJkYjtcbiAgICBib3gtc2hhZG93OiAwIDhweCA4cHggcmdiYSgxMCwgMTAsIDEwLCAwLjEpO1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgZm9udC1zaXplOiAwLjg3NXJlbTtcbiAgICBsZWZ0OiAwO1xuICAgIG1pbi13aWR0aDogMTAwJTtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAxMDAlO1xuICAgIHotaW5kZXg6IDIwOyB9XG4gICAgLm5hdmJhci1kcm9wZG93biAubmF2YmFyLWl0ZW0ge1xuICAgICAgcGFkZGluZzogMC4zNzVyZW0gMXJlbTtcbiAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7IH1cbiAgICAubmF2YmFyLWRyb3Bkb3duIGEubmF2YmFyLWl0ZW0ge1xuICAgICAgcGFkZGluZy1yaWdodDogM3JlbTsgfVxuICAgICAgLm5hdmJhci1kcm9wZG93biBhLm5hdmJhci1pdGVtOmZvY3VzLCAubmF2YmFyLWRyb3Bkb3duIGEubmF2YmFyLWl0ZW06aG92ZXIge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZXNtb2tlO1xuICAgICAgICBjb2xvcjogIzBhMGEwYTsgfVxuICAgICAgLm5hdmJhci1kcm9wZG93biBhLm5hdmJhci1pdGVtLmlzLWFjdGl2ZSB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlc21va2U7XG4gICAgICAgIGNvbG9yOiAjMzI3M2RjOyB9XG4gICAgLm5hdmJhci5pcy1zcGFjZWQgLm5hdmJhci1kcm9wZG93biwgLm5hdmJhci1kcm9wZG93bi5pcy1ib3hlZCB7XG4gICAgICBib3JkZXItcmFkaXVzOiA2cHg7XG4gICAgICBib3JkZXItdG9wOiBub25lO1xuICAgICAgYm94LXNoYWRvdzogMCA4cHggOHB4IHJnYmEoMTAsIDEwLCAxMCwgMC4xKSwgMCAwIDAgMXB4IHJnYmEoMTAsIDEwLCAxMCwgMC4xKTtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgb3BhY2l0eTogMDtcbiAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICAgICAgdG9wOiBjYWxjKDEwMCUgKyAoLTRweCkpO1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01cHgpO1xuICAgICAgdHJhbnNpdGlvbi1kdXJhdGlvbjogODZtcztcbiAgICAgIHRyYW5zaXRpb24tcHJvcGVydHk6IG9wYWNpdHksIHRyYW5zZm9ybTsgfVxuICAgIC5uYXZiYXItZHJvcGRvd24uaXMtcmlnaHQge1xuICAgICAgbGVmdDogYXV0bztcbiAgICAgIHJpZ2h0OiAwOyB9XG4gIC5uYXZiYXItZGl2aWRlciB7XG4gICAgZGlzcGxheTogYmxvY2s7IH1cbiAgLm5hdmJhciA+IC5jb250YWluZXIgLm5hdmJhci1icmFuZCxcbiAgLmNvbnRhaW5lciA+IC5uYXZiYXIgLm5hdmJhci1icmFuZCB7XG4gICAgbWFyZ2luLWxlZnQ6IC0uNzVyZW07IH1cbiAgLm5hdmJhciA+IC5jb250YWluZXIgLm5hdmJhci1tZW51LFxuICAuY29udGFpbmVyID4gLm5hdmJhciAubmF2YmFyLW1lbnUge1xuICAgIG1hcmdpbi1yaWdodDogLS43NXJlbTsgfVxuICAubmF2YmFyLmlzLWZpeGVkLWJvdHRvbS1kZXNrdG9wLCAubmF2YmFyLmlzLWZpeGVkLXRvcC1kZXNrdG9wIHtcbiAgICBsZWZ0OiAwO1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICByaWdodDogMDtcbiAgICB6LWluZGV4OiAzMDsgfVxuICAubmF2YmFyLmlzLWZpeGVkLWJvdHRvbS1kZXNrdG9wIHtcbiAgICBib3R0b206IDA7IH1cbiAgICAubmF2YmFyLmlzLWZpeGVkLWJvdHRvbS1kZXNrdG9wLmhhcy1zaGFkb3cge1xuICAgICAgYm94LXNoYWRvdzogMCAtMnB4IDNweCByZ2JhKDEwLCAxMCwgMTAsIDAuMSk7IH1cbiAgLm5hdmJhci5pcy1maXhlZC10b3AtZGVza3RvcCB7XG4gICAgdG9wOiAwOyB9XG4gIGh0bWwuaGFzLW5hdmJhci1maXhlZC10b3AtZGVza3RvcCxcbiAgYm9keS5oYXMtbmF2YmFyLWZpeGVkLXRvcC1kZXNrdG9wIHtcbiAgICBwYWRkaW5nLXRvcDogMy4yNXJlbTsgfVxuICBodG1sLmhhcy1uYXZiYXItZml4ZWQtYm90dG9tLWRlc2t0b3AsXG4gIGJvZHkuaGFzLW5hdmJhci1maXhlZC1ib3R0b20tZGVza3RvcCB7XG4gICAgcGFkZGluZy1ib3R0b206IDMuMjVyZW07IH1cbiAgaHRtbC5oYXMtc3BhY2VkLW5hdmJhci1maXhlZC10b3AsXG4gIGJvZHkuaGFzLXNwYWNlZC1uYXZiYXItZml4ZWQtdG9wIHtcbiAgICBwYWRkaW5nLXRvcDogNS4yNXJlbTsgfVxuICBodG1sLmhhcy1zcGFjZWQtbmF2YmFyLWZpeGVkLWJvdHRvbSxcbiAgYm9keS5oYXMtc3BhY2VkLW5hdmJhci1maXhlZC1ib3R0b20ge1xuICAgIHBhZGRpbmctYm90dG9tOiA1LjI1cmVtOyB9XG4gIGEubmF2YmFyLWl0ZW0uaXMtYWN0aXZlLFxuICAubmF2YmFyLWxpbmsuaXMtYWN0aXZlIHtcbiAgICBjb2xvcjogIzBhMGEwYTsgfVxuICBhLm5hdmJhci1pdGVtLmlzLWFjdGl2ZTpub3QoOmZvY3VzKTpub3QoOmhvdmVyKSxcbiAgLm5hdmJhci1saW5rLmlzLWFjdGl2ZTpub3QoOmZvY3VzKTpub3QoOmhvdmVyKSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IH1cbiAgLm5hdmJhci1pdGVtLmhhcy1kcm9wZG93bjpmb2N1cyAubmF2YmFyLWxpbmssIC5uYXZiYXItaXRlbS5oYXMtZHJvcGRvd246aG92ZXIgLm5hdmJhci1saW5rLCAubmF2YmFyLWl0ZW0uaGFzLWRyb3Bkb3duLmlzLWFjdGl2ZSAubmF2YmFyLWxpbmsge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmYWZhZmE7IH0gfVxuXG4uaGVyby5pcy1mdWxsaGVpZ2h0LXdpdGgtbmF2YmFyIHtcbiAgbWluLWhlaWdodDogY2FsYygxMDB2aCAtIDMuMjVyZW0pOyB9XG5cbi5wYWdpbmF0aW9uIHtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBtYXJnaW46IC0wLjI1cmVtOyB9XG4gIC5wYWdpbmF0aW9uLmlzLXNtYWxsIHtcbiAgICBmb250LXNpemU6IDAuNzVyZW07IH1cbiAgLnBhZ2luYXRpb24uaXMtbWVkaXVtIHtcbiAgICBmb250LXNpemU6IDEuMjVyZW07IH1cbiAgLnBhZ2luYXRpb24uaXMtbGFyZ2Uge1xuICAgIGZvbnQtc2l6ZTogMS41cmVtOyB9XG4gIC5wYWdpbmF0aW9uLmlzLXJvdW5kZWQgLnBhZ2luYXRpb24tcHJldmlvdXMsXG4gIC5wYWdpbmF0aW9uLmlzLXJvdW5kZWQgLnBhZ2luYXRpb24tbmV4dCB7XG4gICAgcGFkZGluZy1sZWZ0OiAxZW07XG4gICAgcGFkZGluZy1yaWdodDogMWVtO1xuICAgIGJvcmRlci1yYWRpdXM6IDI5MDQ4NnB4OyB9XG4gIC5wYWdpbmF0aW9uLmlzLXJvdW5kZWQgLnBhZ2luYXRpb24tbGluayB7XG4gICAgYm9yZGVyLXJhZGl1czogMjkwNDg2cHg7IH1cblxuLnBhZ2luYXRpb24sXG4ucGFnaW5hdGlvbi1saXN0IHtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuXG4ucGFnaW5hdGlvbi1wcmV2aW91cyxcbi5wYWdpbmF0aW9uLW5leHQsXG4ucGFnaW5hdGlvbi1saW5rLFxuLnBhZ2luYXRpb24tZWxsaXBzaXMge1xuICBmb250LXNpemU6IDFlbTtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIG1hcmdpbjogMC4yNXJlbTtcbiAgcGFkZGluZy1sZWZ0OiAwLjVlbTtcbiAgcGFkZGluZy1yaWdodDogMC41ZW07XG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuXG4ucGFnaW5hdGlvbi1wcmV2aW91cyxcbi5wYWdpbmF0aW9uLW5leHQsXG4ucGFnaW5hdGlvbi1saW5rIHtcbiAgYm9yZGVyLWNvbG9yOiAjZGJkYmRiO1xuICBjb2xvcjogIzM2MzYzNjtcbiAgbWluLXdpZHRoOiAyLjI1ZW07IH1cbiAgLnBhZ2luYXRpb24tcHJldmlvdXM6aG92ZXIsXG4gIC5wYWdpbmF0aW9uLW5leHQ6aG92ZXIsXG4gIC5wYWdpbmF0aW9uLWxpbms6aG92ZXIge1xuICAgIGJvcmRlci1jb2xvcjogI2I1YjViNTtcbiAgICBjb2xvcjogIzM2MzYzNjsgfVxuICAucGFnaW5hdGlvbi1wcmV2aW91czpmb2N1cyxcbiAgLnBhZ2luYXRpb24tbmV4dDpmb2N1cyxcbiAgLnBhZ2luYXRpb24tbGluazpmb2N1cyB7XG4gICAgYm9yZGVyLWNvbG9yOiAjMzI3M2RjOyB9XG4gIC5wYWdpbmF0aW9uLXByZXZpb3VzOmFjdGl2ZSxcbiAgLnBhZ2luYXRpb24tbmV4dDphY3RpdmUsXG4gIC5wYWdpbmF0aW9uLWxpbms6YWN0aXZlIHtcbiAgICBib3gtc2hhZG93OiBpbnNldCAwIDFweCAycHggcmdiYSgxMCwgMTAsIDEwLCAwLjIpOyB9XG4gIC5wYWdpbmF0aW9uLXByZXZpb3VzW2Rpc2FibGVkXSxcbiAgLnBhZ2luYXRpb24tbmV4dFtkaXNhYmxlZF0sXG4gIC5wYWdpbmF0aW9uLWxpbmtbZGlzYWJsZWRdIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGJkYmRiO1xuICAgIGJvcmRlci1jb2xvcjogI2RiZGJkYjtcbiAgICBib3gtc2hhZG93OiBub25lO1xuICAgIGNvbG9yOiAjN2E3YTdhO1xuICAgIG9wYWNpdHk6IDAuNTsgfVxuXG4ucGFnaW5hdGlvbi1wcmV2aW91cyxcbi5wYWdpbmF0aW9uLW5leHQge1xuICBwYWRkaW5nLWxlZnQ6IDAuNzVlbTtcbiAgcGFkZGluZy1yaWdodDogMC43NWVtO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwOyB9XG5cbi5wYWdpbmF0aW9uLWxpbmsuaXMtY3VycmVudCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMjczZGM7XG4gIGJvcmRlci1jb2xvcjogIzMyNzNkYztcbiAgY29sb3I6ICNmZmY7IH1cblxuLnBhZ2luYXRpb24tZWxsaXBzaXMge1xuICBjb2xvcjogI2I1YjViNTtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7IH1cblxuLnBhZ2luYXRpb24tbGlzdCB7XG4gIGZsZXgtd3JhcDogd3JhcDsgfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAucGFnaW5hdGlvbiB7XG4gICAgZmxleC13cmFwOiB3cmFwOyB9XG4gIC5wYWdpbmF0aW9uLXByZXZpb3VzLFxuICAucGFnaW5hdGlvbi1uZXh0IHtcbiAgICBmbGV4LWdyb3c6IDE7XG4gICAgZmxleC1zaHJpbms6IDE7IH1cbiAgLnBhZ2luYXRpb24tbGlzdCBsaSB7XG4gICAgZmxleC1ncm93OiAxO1xuICAgIGZsZXgtc2hyaW5rOiAxOyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY5cHgpLCBwcmludCB7XG4gIC5wYWdpbmF0aW9uLWxpc3Qge1xuICAgIGZsZXgtZ3JvdzogMTtcbiAgICBmbGV4LXNocmluazogMTtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gICAgb3JkZXI6IDE7IH1cbiAgLnBhZ2luYXRpb24tcHJldmlvdXMge1xuICAgIG9yZGVyOiAyOyB9XG4gIC5wYWdpbmF0aW9uLW5leHQge1xuICAgIG9yZGVyOiAzOyB9XG4gIC5wYWdpbmF0aW9uIHtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47IH1cbiAgICAucGFnaW5hdGlvbi5pcy1jZW50ZXJlZCAucGFnaW5hdGlvbi1wcmV2aW91cyB7XG4gICAgICBvcmRlcjogMTsgfVxuICAgIC5wYWdpbmF0aW9uLmlzLWNlbnRlcmVkIC5wYWdpbmF0aW9uLWxpc3Qge1xuICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICBvcmRlcjogMjsgfVxuICAgIC5wYWdpbmF0aW9uLmlzLWNlbnRlcmVkIC5wYWdpbmF0aW9uLW5leHQge1xuICAgICAgb3JkZXI6IDM7IH1cbiAgICAucGFnaW5hdGlvbi5pcy1yaWdodCAucGFnaW5hdGlvbi1wcmV2aW91cyB7XG4gICAgICBvcmRlcjogMTsgfVxuICAgIC5wYWdpbmF0aW9uLmlzLXJpZ2h0IC5wYWdpbmF0aW9uLW5leHQge1xuICAgICAgb3JkZXI6IDI7IH1cbiAgICAucGFnaW5hdGlvbi5pcy1yaWdodCAucGFnaW5hdGlvbi1saXN0IHtcbiAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gICAgICBvcmRlcjogMzsgfSB9XG5cbi5wYW5lbCB7XG4gIGZvbnQtc2l6ZTogMXJlbTsgfVxuICAucGFuZWw6bm90KDpsYXN0LWNoaWxkKSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMS41cmVtOyB9XG5cbi5wYW5lbC1oZWFkaW5nLFxuLnBhbmVsLXRhYnMsXG4ucGFuZWwtYmxvY2sge1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2RiZGJkYjtcbiAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAjZGJkYmRiO1xuICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAjZGJkYmRiOyB9XG4gIC5wYW5lbC1oZWFkaW5nOmZpcnN0LWNoaWxkLFxuICAucGFuZWwtdGFiczpmaXJzdC1jaGlsZCxcbiAgLnBhbmVsLWJsb2NrOmZpcnN0LWNoaWxkIHtcbiAgICBib3JkZXItdG9wOiAxcHggc29saWQgI2RiZGJkYjsgfVxuXG4ucGFuZWwtaGVhZGluZyB7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlc21va2U7XG4gIGJvcmRlci1yYWRpdXM6IDRweCA0cHggMCAwO1xuICBjb2xvcjogIzM2MzYzNjtcbiAgZm9udC1zaXplOiAxLjI1ZW07XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjI1O1xuICBwYWRkaW5nOiAwLjVlbSAwLjc1ZW07IH1cblxuLnBhbmVsLXRhYnMge1xuICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZvbnQtc2l6ZTogMC44NzVlbTtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH1cbiAgLnBhbmVsLXRhYnMgYSB7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkYmRiZGI7XG4gICAgbWFyZ2luLWJvdHRvbTogLTFweDtcbiAgICBwYWRkaW5nOiAwLjVlbTsgfVxuICAgIC5wYW5lbC10YWJzIGEuaXMtYWN0aXZlIHtcbiAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6ICM0YTRhNGE7XG4gICAgICBjb2xvcjogIzM2MzYzNjsgfVxuXG4ucGFuZWwtbGlzdCBhIHtcbiAgY29sb3I6ICM0YTRhNGE7IH1cbiAgLnBhbmVsLWxpc3QgYTpob3ZlciB7XG4gICAgY29sb3I6ICMzMjczZGM7IH1cblxuLnBhbmVsLWJsb2NrIHtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgY29sb3I6ICMzNjM2MzY7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgcGFkZGluZzogMC41ZW0gMC43NWVtOyB9XG4gIC5wYW5lbC1ibG9jayBpbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0ge1xuICAgIG1hcmdpbi1yaWdodDogMC43NWVtOyB9XG4gIC5wYW5lbC1ibG9jayA+IC5jb250cm9sIHtcbiAgICBmbGV4LWdyb3c6IDE7XG4gICAgZmxleC1zaHJpbms6IDE7XG4gICAgd2lkdGg6IDEwMCU7IH1cbiAgLnBhbmVsLWJsb2NrLmlzLXdyYXBwZWQge1xuICAgIGZsZXgtd3JhcDogd3JhcDsgfVxuICAucGFuZWwtYmxvY2suaXMtYWN0aXZlIHtcbiAgICBib3JkZXItbGVmdC1jb2xvcjogIzMyNzNkYztcbiAgICBjb2xvcjogIzM2MzYzNjsgfVxuICAgIC5wYW5lbC1ibG9jay5pcy1hY3RpdmUgLnBhbmVsLWljb24ge1xuICAgICAgY29sb3I6ICMzMjczZGM7IH1cblxuYS5wYW5lbC1ibG9jayxcbmxhYmVsLnBhbmVsLWJsb2NrIHtcbiAgY3Vyc29yOiBwb2ludGVyOyB9XG4gIGEucGFuZWwtYmxvY2s6aG92ZXIsXG4gIGxhYmVsLnBhbmVsLWJsb2NrOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZXNtb2tlOyB9XG5cbi5wYW5lbC1pY29uIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBmb250LXNpemU6IDE0cHg7XG4gIGhlaWdodDogMWVtO1xuICBsaW5lLWhlaWdodDogMWVtO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XG4gIHdpZHRoOiAxZW07XG4gIGNvbG9yOiAjN2E3YTdhO1xuICBtYXJnaW4tcmlnaHQ6IDAuNzVlbTsgfVxuICAucGFuZWwtaWNvbiAuZmEge1xuICAgIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgICBsaW5lLWhlaWdodDogaW5oZXJpdDsgfVxuXG4udGFicyB7XG4gIC13ZWJraXQtb3ZlcmZsb3ctc2Nyb2xsaW5nOiB0b3VjaDtcbiAgYWxpZ24taXRlbXM6IHN0cmV0Y2g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBvdmVyZmxvdy14OiBhdXRvO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwOyB9XG4gIC50YWJzIGEge1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogI2RiZGJkYjtcbiAgICBib3JkZXItYm90dG9tLXN0eWxlOiBzb2xpZDtcbiAgICBib3JkZXItYm90dG9tLXdpZHRoOiAxcHg7XG4gICAgY29sb3I6ICM0YTRhNGE7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBtYXJnaW4tYm90dG9tOiAtMXB4O1xuICAgIHBhZGRpbmc6IDAuNWVtIDFlbTtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wOyB9XG4gICAgLnRhYnMgYTpob3ZlciB7XG4gICAgICBib3JkZXItYm90dG9tLWNvbG9yOiAjMzYzNjM2O1xuICAgICAgY29sb3I6ICMzNjM2MzY7IH1cbiAgLnRhYnMgbGkge1xuICAgIGRpc3BsYXk6IGJsb2NrOyB9XG4gICAgLnRhYnMgbGkuaXMtYWN0aXZlIGEge1xuICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogIzMyNzNkYztcbiAgICAgIGNvbG9yOiAjMzI3M2RjOyB9XG4gIC50YWJzIHVsIHtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGJvcmRlci1ib3R0b20tY29sb3I6ICNkYmRiZGI7XG4gICAgYm9yZGVyLWJvdHRvbS1zdHlsZTogc29saWQ7XG4gICAgYm9yZGVyLWJvdHRvbS13aWR0aDogMXB4O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1ncm93OiAxO1xuICAgIGZsZXgtc2hyaW5rOiAwO1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDsgfVxuICAgIC50YWJzIHVsLmlzLWxlZnQge1xuICAgICAgcGFkZGluZy1yaWdodDogMC43NWVtOyB9XG4gICAgLnRhYnMgdWwuaXMtY2VudGVyIHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgIHBhZGRpbmctbGVmdDogMC43NWVtO1xuICAgICAgcGFkZGluZy1yaWdodDogMC43NWVtOyB9XG4gICAgLnRhYnMgdWwuaXMtcmlnaHQge1xuICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgICAgIHBhZGRpbmctbGVmdDogMC43NWVtOyB9XG4gIC50YWJzIC5pY29uOmZpcnN0LWNoaWxkIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDAuNWVtOyB9XG4gIC50YWJzIC5pY29uOmxhc3QtY2hpbGQge1xuICAgIG1hcmdpbi1sZWZ0OiAwLjVlbTsgfVxuICAudGFicy5pcy1jZW50ZXJlZCB1bCB7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH1cbiAgLnRhYnMuaXMtcmlnaHQgdWwge1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7IH1cbiAgLnRhYnMuaXMtYm94ZWQgYSB7XG4gICAgYm9yZGVyOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgYm9yZGVyLXJhZGl1czogNHB4IDRweCAwIDA7IH1cbiAgICAudGFicy5pcy1ib3hlZCBhOmhvdmVyIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlc21va2U7XG4gICAgICBib3JkZXItYm90dG9tLWNvbG9yOiAjZGJkYmRiOyB9XG4gIC50YWJzLmlzLWJveGVkIGxpLmlzLWFjdGl2ZSBhIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICBib3JkZXItY29sb3I6ICNkYmRiZGI7XG4gICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogdHJhbnNwYXJlbnQgIWltcG9ydGFudDsgfVxuICAudGFicy5pcy1mdWxsd2lkdGggbGkge1xuICAgIGZsZXgtZ3JvdzogMTtcbiAgICBmbGV4LXNocmluazogMDsgfVxuICAudGFicy5pcy10b2dnbGUgYSB7XG4gICAgYm9yZGVyLWNvbG9yOiAjZGJkYmRiO1xuICAgIGJvcmRlci1zdHlsZTogc29saWQ7XG4gICAgYm9yZGVyLXdpZHRoOiAxcHg7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgICAudGFicy5pcy10b2dnbGUgYTpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZXNtb2tlO1xuICAgICAgYm9yZGVyLWNvbG9yOiAjYjViNWI1O1xuICAgICAgei1pbmRleDogMjsgfVxuICAudGFicy5pcy10b2dnbGUgbGkgKyBsaSB7XG4gICAgbWFyZ2luLWxlZnQ6IC0xcHg7IH1cbiAgLnRhYnMuaXMtdG9nZ2xlIGxpOmZpcnN0LWNoaWxkIGEge1xuICAgIGJvcmRlci1yYWRpdXM6IDRweCAwIDAgNHB4OyB9XG4gIC50YWJzLmlzLXRvZ2dsZSBsaTpsYXN0LWNoaWxkIGEge1xuICAgIGJvcmRlci1yYWRpdXM6IDAgNHB4IDRweCAwOyB9XG4gIC50YWJzLmlzLXRvZ2dsZSBsaS5pcy1hY3RpdmUgYSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzMyNzNkYztcbiAgICBib3JkZXItY29sb3I6ICMzMjczZGM7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgei1pbmRleDogMTsgfVxuICAudGFicy5pcy10b2dnbGUgdWwge1xuICAgIGJvcmRlci1ib3R0b206IG5vbmU7IH1cbiAgLnRhYnMuaXMtdG9nZ2xlLmlzLXRvZ2dsZS1yb3VuZGVkIGxpOmZpcnN0LWNoaWxkIGEge1xuICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDI5MDQ4NnB4O1xuICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDI5MDQ4NnB4O1xuICAgIHBhZGRpbmctbGVmdDogMS4yNWVtOyB9XG4gIC50YWJzLmlzLXRvZ2dsZS5pcy10b2dnbGUtcm91bmRlZCBsaTpsYXN0LWNoaWxkIGEge1xuICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAyOTA0ODZweDtcbiAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMjkwNDg2cHg7XG4gICAgcGFkZGluZy1yaWdodDogMS4yNWVtOyB9XG4gIC50YWJzLmlzLXNtYWxsIHtcbiAgICBmb250LXNpemU6IDAuNzVyZW07IH1cbiAgLnRhYnMuaXMtbWVkaXVtIHtcbiAgICBmb250LXNpemU6IDEuMjVyZW07IH1cbiAgLnRhYnMuaXMtbGFyZ2Uge1xuICAgIGZvbnQtc2l6ZTogMS41cmVtOyB9XG5cbi5jb2x1bW4ge1xuICBkaXNwbGF5OiBibG9jaztcbiAgZmxleC1iYXNpczogMDtcbiAgZmxleC1ncm93OiAxO1xuICBmbGV4LXNocmluazogMTtcbiAgcGFkZGluZzogMC43NXJlbTsgfVxuICAuY29sdW1ucy5pcy1tb2JpbGUgPiAuY29sdW1uLmlzLW5hcnJvdyB7XG4gICAgZmxleDogbm9uZTsgfVxuICAuY29sdW1ucy5pcy1tb2JpbGUgPiAuY29sdW1uLmlzLWZ1bGwge1xuICAgIGZsZXg6IG5vbmU7XG4gICAgd2lkdGg6IDEwMCU7IH1cbiAgLmNvbHVtbnMuaXMtbW9iaWxlID4gLmNvbHVtbi5pcy10aHJlZS1xdWFydGVycyB7XG4gICAgZmxleDogbm9uZTtcbiAgICB3aWR0aDogNzUlOyB9XG4gIC5jb2x1bW5zLmlzLW1vYmlsZSA+IC5jb2x1bW4uaXMtdHdvLXRoaXJkcyB7XG4gICAgZmxleDogbm9uZTtcbiAgICB3aWR0aDogNjYuNjY2NiU7IH1cbiAgLmNvbHVtbnMuaXMtbW9iaWxlID4gLmNvbHVtbi5pcy1oYWxmIHtcbiAgICBmbGV4OiBub25lO1xuICAgIHdpZHRoOiA1MCU7IH1cbiAgLmNvbHVtbnMuaXMtbW9iaWxlID4gLmNvbHVtbi5pcy1vbmUtdGhpcmQge1xuICAgIGZsZXg6IG5vbmU7XG4gICAgd2lkdGg6IDMzLjMzMzMlOyB9XG4gIC5jb2x1bW5zLmlzLW1vYmlsZSA+IC5jb2x1bW4uaXMtb25lLXF1YXJ0ZXIge1xuICAgIGZsZXg6IG5vbmU7XG4gICAgd2lkdGg6IDI1JTsgfVxuICAuY29sdW1ucy5pcy1tb2JpbGUgPiAuY29sdW1uLmlzLW9uZS1maWZ0aCB7XG4gICAgZmxleDogbm9uZTtcbiAgICB3aWR0aDogMjAlOyB9XG4gIC5jb2x1bW5zLmlzLW1vYmlsZSA+IC5jb2x1bW4uaXMtdHdvLWZpZnRocyB7XG4gICAgZmxleDogbm9uZTtcbiAgICB3aWR0aDogNDAlOyB9XG4gIC5jb2x1bW5zLmlzLW1vYmlsZSA+IC5jb2x1bW4uaXMtdGhyZWUtZmlmdGhzIHtcbiAgICBmbGV4OiBub25lO1xuICAgIHdpZHRoOiA2MCU7IH1cbiAgLmNvbHVtbnMuaXMtbW9iaWxlID4gLmNvbHVtbi5pcy1mb3VyLWZpZnRocyB7XG4gICAgZmxleDogbm9uZTtcbiAgICB3aWR0aDogODAlOyB9XG4gIC5jb2x1bW5zLmlzLW1vYmlsZSA+IC5jb2x1bW4uaXMtb2Zmc2V0LXRocmVlLXF1YXJ0ZXJzIHtcbiAgICBtYXJnaW4tbGVmdDogNzUlOyB9XG4gIC5jb2x1bW5zLmlzLW1vYmlsZSA+IC5jb2x1bW4uaXMtb2Zmc2V0LXR3by10aGlyZHMge1xuICAgIG1hcmdpbi1sZWZ0OiA2Ni42NjY2JTsgfVxuICAuY29sdW1ucy5pcy1tb2JpbGUgPiAuY29sdW1uLmlzLW9mZnNldC1oYWxmIHtcbiAgICBtYXJnaW4tbGVmdDogNTAlOyB9XG4gIC5jb2x1bW5zLmlzLW1vYmlsZSA+IC5jb2x1bW4uaXMtb2Zmc2V0LW9uZS10aGlyZCB7XG4gICAgbWFyZ2luLWxlZnQ6IDMzLjMzMzMlOyB9XG4gIC5jb2x1bW5zLmlzLW1vYmlsZSA+IC5jb2x1bW4uaXMtb2Zmc2V0LW9uZS1xdWFydGVyIHtcbiAgICBtYXJnaW4tbGVmdDogMjUlOyB9XG4gIC5jb2x1bW5zLmlzLW1vYmlsZSA+IC5jb2x1bW4uaXMtb2Zmc2V0LW9uZS1maWZ0aCB7XG4gICAgbWFyZ2luLWxlZnQ6IDIwJTsgfVxuICAuY29sdW1ucy5pcy1tb2JpbGUgPiAuY29sdW1uLmlzLW9mZnNldC10d28tZmlmdGhzIHtcbiAgICBtYXJnaW4tbGVmdDogNDAlOyB9XG4gIC5jb2x1bW5zLmlzLW1vYmlsZSA+IC5jb2x1bW4uaXMtb2Zmc2V0LXRocmVlLWZpZnRocyB7XG4gICAgbWFyZ2luLWxlZnQ6IDYwJTsgfVxuICAuY29sdW1ucy5pcy1tb2JpbGUgPiAuY29sdW1uLmlzLW9mZnNldC1mb3VyLWZpZnRocyB7XG4gICAgbWFyZ2luLWxlZnQ6IDgwJTsgfVxuICAuY29sdW1ucy5pcy1tb2JpbGUgPiAuY29sdW1uLmlzLTAge1xuICAgIGZsZXg6IG5vbmU7XG4gICAgd2lkdGg6IDAlOyB9XG4gIC5jb2x1bW5zLmlzLW1vYmlsZSA+IC5jb2x1bW4uaXMtb2Zmc2V0LTAge1xuICAgIG1hcmdpbi1sZWZ0OiAwJTsgfVxuICAuY29sdW1ucy5pcy1tb2JpbGUgPiAuY29sdW1uLmlzLTEge1xuICAgIGZsZXg6IG5vbmU7XG4gICAgd2lkdGg6IDguMzMzMzMlOyB9XG4gIC5jb2x1bW5zLmlzLW1vYmlsZSA+IC5jb2x1bW4uaXMtb2Zmc2V0LTEge1xuICAgIG1hcmdpbi1sZWZ0OiA4LjMzMzMzJTsgfVxuICAuY29sdW1ucy5pcy1tb2JpbGUgPiAuY29sdW1uLmlzLTIge1xuICAgIGZsZXg6IG5vbmU7XG4gICAgd2lkdGg6IDE2LjY2NjY3JTsgfVxuICAuY29sdW1ucy5pcy1tb2JpbGUgPiAuY29sdW1uLmlzLW9mZnNldC0yIHtcbiAgICBtYXJnaW4tbGVmdDogMTYuNjY2NjclOyB9XG4gIC5jb2x1bW5zLmlzLW1vYmlsZSA+IC5jb2x1bW4uaXMtMyB7XG4gICAgZmxleDogbm9uZTtcbiAgICB3aWR0aDogMjUlOyB9XG4gIC5jb2x1bW5zLmlzLW1vYmlsZSA+IC5jb2x1bW4uaXMtb2Zmc2V0LTMge1xuICAgIG1hcmdpbi1sZWZ0OiAyNSU7IH1cbiAgLmNvbHVtbnMuaXMtbW9iaWxlID4gLmNvbHVtbi5pcy00IHtcbiAgICBmbGV4OiBub25lO1xuICAgIHdpZHRoOiAzMy4zMzMzMyU7IH1cbiAgLmNvbHVtbnMuaXMtbW9iaWxlID4gLmNvbHVtbi5pcy1vZmZzZXQtNCB7XG4gICAgbWFyZ2luLWxlZnQ6IDMzLjMzMzMzJTsgfVxuICAuY29sdW1ucy5pcy1tb2JpbGUgPiAuY29sdW1uLmlzLTUge1xuICAgIGZsZXg6IG5vbmU7XG4gICAgd2lkdGg6IDQxLjY2NjY3JTsgfVxuICAuY29sdW1ucy5pcy1tb2JpbGUgPiAuY29sdW1uLmlzLW9mZnNldC01IHtcbiAgICBtYXJnaW4tbGVmdDogNDEuNjY2NjclOyB9XG4gIC5jb2x1bW5zLmlzLW1vYmlsZSA+IC5jb2x1bW4uaXMtNiB7XG4gICAgZmxleDogbm9uZTtcbiAgICB3aWR0aDogNTAlOyB9XG4gIC5jb2x1bW5zLmlzLW1vYmlsZSA+IC5jb2x1bW4uaXMtb2Zmc2V0LTYge1xuICAgIG1hcmdpbi1sZWZ0OiA1MCU7IH1cbiAgLmNvbHVtbnMuaXMtbW9iaWxlID4gLmNvbHVtbi5pcy03IHtcbiAgICBmbGV4OiBub25lO1xuICAgIHdpZHRoOiA1OC4zMzMzMyU7IH1cbiAgLmNvbHVtbnMuaXMtbW9iaWxlID4gLmNvbHVtbi5pcy1vZmZzZXQtNyB7XG4gICAgbWFyZ2luLWxlZnQ6IDU4LjMzMzMzJTsgfVxuICAuY29sdW1ucy5pcy1tb2JpbGUgPiAuY29sdW1uLmlzLTgge1xuICAgIGZsZXg6IG5vbmU7XG4gICAgd2lkdGg6IDY2LjY2NjY3JTsgfVxuICAuY29sdW1ucy5pcy1tb2JpbGUgPiAuY29sdW1uLmlzLW9mZnNldC04IHtcbiAgICBtYXJnaW4tbGVmdDogNjYuNjY2NjclOyB9XG4gIC5jb2x1bW5zLmlzLW1vYmlsZSA+IC5jb2x1bW4uaXMtOSB7XG4gICAgZmxleDogbm9uZTtcbiAgICB3aWR0aDogNzUlOyB9XG4gIC5jb2x1bW5zLmlzLW1vYmlsZSA+IC5jb2x1bW4uaXMtb2Zmc2V0LTkge1xuICAgIG1hcmdpbi1sZWZ0OiA3NSU7IH1cbiAgLmNvbHVtbnMuaXMtbW9iaWxlID4gLmNvbHVtbi5pcy0xMCB7XG4gICAgZmxleDogbm9uZTtcbiAgICB3aWR0aDogODMuMzMzMzMlOyB9XG4gIC5jb2x1bW5zLmlzLW1vYmlsZSA+IC5jb2x1bW4uaXMtb2Zmc2V0LTEwIHtcbiAgICBtYXJnaW4tbGVmdDogODMuMzMzMzMlOyB9XG4gIC5jb2x1bW5zLmlzLW1vYmlsZSA+IC5jb2x1bW4uaXMtMTEge1xuICAgIGZsZXg6IG5vbmU7XG4gICAgd2lkdGg6IDkxLjY2NjY3JTsgfVxuICAuY29sdW1ucy5pcy1tb2JpbGUgPiAuY29sdW1uLmlzLW9mZnNldC0xMSB7XG4gICAgbWFyZ2luLWxlZnQ6IDkxLjY2NjY3JTsgfVxuICAuY29sdW1ucy5pcy1tb2JpbGUgPiAuY29sdW1uLmlzLTEyIHtcbiAgICBmbGV4OiBub25lO1xuICAgIHdpZHRoOiAxMDAlOyB9XG4gIC5jb2x1bW5zLmlzLW1vYmlsZSA+IC5jb2x1bW4uaXMtb2Zmc2V0LTEyIHtcbiAgICBtYXJnaW4tbGVmdDogMTAwJTsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5jb2x1bW4uaXMtbmFycm93LW1vYmlsZSB7XG4gICAgICBmbGV4OiBub25lOyB9XG4gICAgLmNvbHVtbi5pcy1mdWxsLW1vYmlsZSB7XG4gICAgICBmbGV4OiBub25lO1xuICAgICAgd2lkdGg6IDEwMCU7IH1cbiAgICAuY29sdW1uLmlzLXRocmVlLXF1YXJ0ZXJzLW1vYmlsZSB7XG4gICAgICBmbGV4OiBub25lO1xuICAgICAgd2lkdGg6IDc1JTsgfVxuICAgIC5jb2x1bW4uaXMtdHdvLXRoaXJkcy1tb2JpbGUge1xuICAgICAgZmxleDogbm9uZTtcbiAgICAgIHdpZHRoOiA2Ni42NjY2JTsgfVxuICAgIC5jb2x1bW4uaXMtaGFsZi1tb2JpbGUge1xuICAgICAgZmxleDogbm9uZTtcbiAgICAgIHdpZHRoOiA1MCU7IH1cbiAgICAuY29sdW1uLmlzLW9uZS10aGlyZC1tb2JpbGUge1xuICAgICAgZmxleDogbm9uZTtcbiAgICAgIHdpZHRoOiAzMy4zMzMzJTsgfVxuICAgIC5jb2x1bW4uaXMtb25lLXF1YXJ0ZXItbW9iaWxlIHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogMjUlOyB9XG4gICAgLmNvbHVtbi5pcy1vbmUtZmlmdGgtbW9iaWxlIHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogMjAlOyB9XG4gICAgLmNvbHVtbi5pcy10d28tZmlmdGhzLW1vYmlsZSB7XG4gICAgICBmbGV4OiBub25lO1xuICAgICAgd2lkdGg6IDQwJTsgfVxuICAgIC5jb2x1bW4uaXMtdGhyZWUtZmlmdGhzLW1vYmlsZSB7XG4gICAgICBmbGV4OiBub25lO1xuICAgICAgd2lkdGg6IDYwJTsgfVxuICAgIC5jb2x1bW4uaXMtZm91ci1maWZ0aHMtbW9iaWxlIHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogODAlOyB9XG4gICAgLmNvbHVtbi5pcy1vZmZzZXQtdGhyZWUtcXVhcnRlcnMtbW9iaWxlIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiA3NSU7IH1cbiAgICAuY29sdW1uLmlzLW9mZnNldC10d28tdGhpcmRzLW1vYmlsZSB7XG4gICAgICBtYXJnaW4tbGVmdDogNjYuNjY2NiU7IH1cbiAgICAuY29sdW1uLmlzLW9mZnNldC1oYWxmLW1vYmlsZSB7XG4gICAgICBtYXJnaW4tbGVmdDogNTAlOyB9XG4gICAgLmNvbHVtbi5pcy1vZmZzZXQtb25lLXRoaXJkLW1vYmlsZSB7XG4gICAgICBtYXJnaW4tbGVmdDogMzMuMzMzMyU7IH1cbiAgICAuY29sdW1uLmlzLW9mZnNldC1vbmUtcXVhcnRlci1tb2JpbGUge1xuICAgICAgbWFyZ2luLWxlZnQ6IDI1JTsgfVxuICAgIC5jb2x1bW4uaXMtb2Zmc2V0LW9uZS1maWZ0aC1tb2JpbGUge1xuICAgICAgbWFyZ2luLWxlZnQ6IDIwJTsgfVxuICAgIC5jb2x1bW4uaXMtb2Zmc2V0LXR3by1maWZ0aHMtbW9iaWxlIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiA0MCU7IH1cbiAgICAuY29sdW1uLmlzLW9mZnNldC10aHJlZS1maWZ0aHMtbW9iaWxlIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiA2MCU7IH1cbiAgICAuY29sdW1uLmlzLW9mZnNldC1mb3VyLWZpZnRocy1tb2JpbGUge1xuICAgICAgbWFyZ2luLWxlZnQ6IDgwJTsgfVxuICAgIC5jb2x1bW4uaXMtMC1tb2JpbGUge1xuICAgICAgZmxleDogbm9uZTtcbiAgICAgIHdpZHRoOiAwJTsgfVxuICAgIC5jb2x1bW4uaXMtb2Zmc2V0LTAtbW9iaWxlIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAwJTsgfVxuICAgIC5jb2x1bW4uaXMtMS1tb2JpbGUge1xuICAgICAgZmxleDogbm9uZTtcbiAgICAgIHdpZHRoOiA4LjMzMzMzJTsgfVxuICAgIC5jb2x1bW4uaXMtb2Zmc2V0LTEtbW9iaWxlIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiA4LjMzMzMzJTsgfVxuICAgIC5jb2x1bW4uaXMtMi1tb2JpbGUge1xuICAgICAgZmxleDogbm9uZTtcbiAgICAgIHdpZHRoOiAxNi42NjY2NyU7IH1cbiAgICAuY29sdW1uLmlzLW9mZnNldC0yLW1vYmlsZSB7XG4gICAgICBtYXJnaW4tbGVmdDogMTYuNjY2NjclOyB9XG4gICAgLmNvbHVtbi5pcy0zLW1vYmlsZSB7XG4gICAgICBmbGV4OiBub25lO1xuICAgICAgd2lkdGg6IDI1JTsgfVxuICAgIC5jb2x1bW4uaXMtb2Zmc2V0LTMtbW9iaWxlIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAyNSU7IH1cbiAgICAuY29sdW1uLmlzLTQtbW9iaWxlIHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogMzMuMzMzMzMlOyB9XG4gICAgLmNvbHVtbi5pcy1vZmZzZXQtNC1tb2JpbGUge1xuICAgICAgbWFyZ2luLWxlZnQ6IDMzLjMzMzMzJTsgfVxuICAgIC5jb2x1bW4uaXMtNS1tb2JpbGUge1xuICAgICAgZmxleDogbm9uZTtcbiAgICAgIHdpZHRoOiA0MS42NjY2NyU7IH1cbiAgICAuY29sdW1uLmlzLW9mZnNldC01LW1vYmlsZSB7XG4gICAgICBtYXJnaW4tbGVmdDogNDEuNjY2NjclOyB9XG4gICAgLmNvbHVtbi5pcy02LW1vYmlsZSB7XG4gICAgICBmbGV4OiBub25lO1xuICAgICAgd2lkdGg6IDUwJTsgfVxuICAgIC5jb2x1bW4uaXMtb2Zmc2V0LTYtbW9iaWxlIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiA1MCU7IH1cbiAgICAuY29sdW1uLmlzLTctbW9iaWxlIHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogNTguMzMzMzMlOyB9XG4gICAgLmNvbHVtbi5pcy1vZmZzZXQtNy1tb2JpbGUge1xuICAgICAgbWFyZ2luLWxlZnQ6IDU4LjMzMzMzJTsgfVxuICAgIC5jb2x1bW4uaXMtOC1tb2JpbGUge1xuICAgICAgZmxleDogbm9uZTtcbiAgICAgIHdpZHRoOiA2Ni42NjY2NyU7IH1cbiAgICAuY29sdW1uLmlzLW9mZnNldC04LW1vYmlsZSB7XG4gICAgICBtYXJnaW4tbGVmdDogNjYuNjY2NjclOyB9XG4gICAgLmNvbHVtbi5pcy05LW1vYmlsZSB7XG4gICAgICBmbGV4OiBub25lO1xuICAgICAgd2lkdGg6IDc1JTsgfVxuICAgIC5jb2x1bW4uaXMtb2Zmc2V0LTktbW9iaWxlIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiA3NSU7IH1cbiAgICAuY29sdW1uLmlzLTEwLW1vYmlsZSB7XG4gICAgICBmbGV4OiBub25lO1xuICAgICAgd2lkdGg6IDgzLjMzMzMzJTsgfVxuICAgIC5jb2x1bW4uaXMtb2Zmc2V0LTEwLW1vYmlsZSB7XG4gICAgICBtYXJnaW4tbGVmdDogODMuMzMzMzMlOyB9XG4gICAgLmNvbHVtbi5pcy0xMS1tb2JpbGUge1xuICAgICAgZmxleDogbm9uZTtcbiAgICAgIHdpZHRoOiA5MS42NjY2NyU7IH1cbiAgICAuY29sdW1uLmlzLW9mZnNldC0xMS1tb2JpbGUge1xuICAgICAgbWFyZ2luLWxlZnQ6IDkxLjY2NjY3JTsgfVxuICAgIC5jb2x1bW4uaXMtMTItbW9iaWxlIHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogMTAwJTsgfVxuICAgIC5jb2x1bW4uaXMtb2Zmc2V0LTEyLW1vYmlsZSB7XG4gICAgICBtYXJnaW4tbGVmdDogMTAwJTsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OXB4KSwgcHJpbnQge1xuICAgIC5jb2x1bW4uaXMtbmFycm93LCAuY29sdW1uLmlzLW5hcnJvdy10YWJsZXQge1xuICAgICAgZmxleDogbm9uZTsgfVxuICAgIC5jb2x1bW4uaXMtZnVsbCwgLmNvbHVtbi5pcy1mdWxsLXRhYmxldCB7XG4gICAgICBmbGV4OiBub25lO1xuICAgICAgd2lkdGg6IDEwMCU7IH1cbiAgICAuY29sdW1uLmlzLXRocmVlLXF1YXJ0ZXJzLCAuY29sdW1uLmlzLXRocmVlLXF1YXJ0ZXJzLXRhYmxldCB7XG4gICAgICBmbGV4OiBub25lO1xuICAgICAgd2lkdGg6IDc1JTsgfVxuICAgIC5jb2x1bW4uaXMtdHdvLXRoaXJkcywgLmNvbHVtbi5pcy10d28tdGhpcmRzLXRhYmxldCB7XG4gICAgICBmbGV4OiBub25lO1xuICAgICAgd2lkdGg6IDY2LjY2NjYlOyB9XG4gICAgLmNvbHVtbi5pcy1oYWxmLCAuY29sdW1uLmlzLWhhbGYtdGFibGV0IHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogNTAlOyB9XG4gICAgLmNvbHVtbi5pcy1vbmUtdGhpcmQsIC5jb2x1bW4uaXMtb25lLXRoaXJkLXRhYmxldCB7XG4gICAgICBmbGV4OiBub25lO1xuICAgICAgd2lkdGg6IDMzLjMzMzMlOyB9XG4gICAgLmNvbHVtbi5pcy1vbmUtcXVhcnRlciwgLmNvbHVtbi5pcy1vbmUtcXVhcnRlci10YWJsZXQge1xuICAgICAgZmxleDogbm9uZTtcbiAgICAgIHdpZHRoOiAyNSU7IH1cbiAgICAuY29sdW1uLmlzLW9uZS1maWZ0aCwgLmNvbHVtbi5pcy1vbmUtZmlmdGgtdGFibGV0IHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogMjAlOyB9XG4gICAgLmNvbHVtbi5pcy10d28tZmlmdGhzLCAuY29sdW1uLmlzLXR3by1maWZ0aHMtdGFibGV0IHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogNDAlOyB9XG4gICAgLmNvbHVtbi5pcy10aHJlZS1maWZ0aHMsIC5jb2x1bW4uaXMtdGhyZWUtZmlmdGhzLXRhYmxldCB7XG4gICAgICBmbGV4OiBub25lO1xuICAgICAgd2lkdGg6IDYwJTsgfVxuICAgIC5jb2x1bW4uaXMtZm91ci1maWZ0aHMsIC5jb2x1bW4uaXMtZm91ci1maWZ0aHMtdGFibGV0IHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogODAlOyB9XG4gICAgLmNvbHVtbi5pcy1vZmZzZXQtdGhyZWUtcXVhcnRlcnMsIC5jb2x1bW4uaXMtb2Zmc2V0LXRocmVlLXF1YXJ0ZXJzLXRhYmxldCB7XG4gICAgICBtYXJnaW4tbGVmdDogNzUlOyB9XG4gICAgLmNvbHVtbi5pcy1vZmZzZXQtdHdvLXRoaXJkcywgLmNvbHVtbi5pcy1vZmZzZXQtdHdvLXRoaXJkcy10YWJsZXQge1xuICAgICAgbWFyZ2luLWxlZnQ6IDY2LjY2NjYlOyB9XG4gICAgLmNvbHVtbi5pcy1vZmZzZXQtaGFsZiwgLmNvbHVtbi5pcy1vZmZzZXQtaGFsZi10YWJsZXQge1xuICAgICAgbWFyZ2luLWxlZnQ6IDUwJTsgfVxuICAgIC5jb2x1bW4uaXMtb2Zmc2V0LW9uZS10aGlyZCwgLmNvbHVtbi5pcy1vZmZzZXQtb25lLXRoaXJkLXRhYmxldCB7XG4gICAgICBtYXJnaW4tbGVmdDogMzMuMzMzMyU7IH1cbiAgICAuY29sdW1uLmlzLW9mZnNldC1vbmUtcXVhcnRlciwgLmNvbHVtbi5pcy1vZmZzZXQtb25lLXF1YXJ0ZXItdGFibGV0IHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAyNSU7IH1cbiAgICAuY29sdW1uLmlzLW9mZnNldC1vbmUtZmlmdGgsIC5jb2x1bW4uaXMtb2Zmc2V0LW9uZS1maWZ0aC10YWJsZXQge1xuICAgICAgbWFyZ2luLWxlZnQ6IDIwJTsgfVxuICAgIC5jb2x1bW4uaXMtb2Zmc2V0LXR3by1maWZ0aHMsIC5jb2x1bW4uaXMtb2Zmc2V0LXR3by1maWZ0aHMtdGFibGV0IHtcbiAgICAgIG1hcmdpbi1sZWZ0OiA0MCU7IH1cbiAgICAuY29sdW1uLmlzLW9mZnNldC10aHJlZS1maWZ0aHMsIC5jb2x1bW4uaXMtb2Zmc2V0LXRocmVlLWZpZnRocy10YWJsZXQge1xuICAgICAgbWFyZ2luLWxlZnQ6IDYwJTsgfVxuICAgIC5jb2x1bW4uaXMtb2Zmc2V0LWZvdXItZmlmdGhzLCAuY29sdW1uLmlzLW9mZnNldC1mb3VyLWZpZnRocy10YWJsZXQge1xuICAgICAgbWFyZ2luLWxlZnQ6IDgwJTsgfVxuICAgIC5jb2x1bW4uaXMtMCwgLmNvbHVtbi5pcy0wLXRhYmxldCB7XG4gICAgICBmbGV4OiBub25lO1xuICAgICAgd2lkdGg6IDAlOyB9XG4gICAgLmNvbHVtbi5pcy1vZmZzZXQtMCwgLmNvbHVtbi5pcy1vZmZzZXQtMC10YWJsZXQge1xuICAgICAgbWFyZ2luLWxlZnQ6IDAlOyB9XG4gICAgLmNvbHVtbi5pcy0xLCAuY29sdW1uLmlzLTEtdGFibGV0IHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogOC4zMzMzMyU7IH1cbiAgICAuY29sdW1uLmlzLW9mZnNldC0xLCAuY29sdW1uLmlzLW9mZnNldC0xLXRhYmxldCB7XG4gICAgICBtYXJnaW4tbGVmdDogOC4zMzMzMyU7IH1cbiAgICAuY29sdW1uLmlzLTIsIC5jb2x1bW4uaXMtMi10YWJsZXQge1xuICAgICAgZmxleDogbm9uZTtcbiAgICAgIHdpZHRoOiAxNi42NjY2NyU7IH1cbiAgICAuY29sdW1uLmlzLW9mZnNldC0yLCAuY29sdW1uLmlzLW9mZnNldC0yLXRhYmxldCB7XG4gICAgICBtYXJnaW4tbGVmdDogMTYuNjY2NjclOyB9XG4gICAgLmNvbHVtbi5pcy0zLCAuY29sdW1uLmlzLTMtdGFibGV0IHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogMjUlOyB9XG4gICAgLmNvbHVtbi5pcy1vZmZzZXQtMywgLmNvbHVtbi5pcy1vZmZzZXQtMy10YWJsZXQge1xuICAgICAgbWFyZ2luLWxlZnQ6IDI1JTsgfVxuICAgIC5jb2x1bW4uaXMtNCwgLmNvbHVtbi5pcy00LXRhYmxldCB7XG4gICAgICBmbGV4OiBub25lO1xuICAgICAgd2lkdGg6IDMzLjMzMzMzJTsgfVxuICAgIC5jb2x1bW4uaXMtb2Zmc2V0LTQsIC5jb2x1bW4uaXMtb2Zmc2V0LTQtdGFibGV0IHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAzMy4zMzMzMyU7IH1cbiAgICAuY29sdW1uLmlzLTUsIC5jb2x1bW4uaXMtNS10YWJsZXQge1xuICAgICAgZmxleDogbm9uZTtcbiAgICAgIHdpZHRoOiA0MS42NjY2NyU7IH1cbiAgICAuY29sdW1uLmlzLW9mZnNldC01LCAuY29sdW1uLmlzLW9mZnNldC01LXRhYmxldCB7XG4gICAgICBtYXJnaW4tbGVmdDogNDEuNjY2NjclOyB9XG4gICAgLmNvbHVtbi5pcy02LCAuY29sdW1uLmlzLTYtdGFibGV0IHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogNTAlOyB9XG4gICAgLmNvbHVtbi5pcy1vZmZzZXQtNiwgLmNvbHVtbi5pcy1vZmZzZXQtNi10YWJsZXQge1xuICAgICAgbWFyZ2luLWxlZnQ6IDUwJTsgfVxuICAgIC5jb2x1bW4uaXMtNywgLmNvbHVtbi5pcy03LXRhYmxldCB7XG4gICAgICBmbGV4OiBub25lO1xuICAgICAgd2lkdGg6IDU4LjMzMzMzJTsgfVxuICAgIC5jb2x1bW4uaXMtb2Zmc2V0LTcsIC5jb2x1bW4uaXMtb2Zmc2V0LTctdGFibGV0IHtcbiAgICAgIG1hcmdpbi1sZWZ0OiA1OC4zMzMzMyU7IH1cbiAgICAuY29sdW1uLmlzLTgsIC5jb2x1bW4uaXMtOC10YWJsZXQge1xuICAgICAgZmxleDogbm9uZTtcbiAgICAgIHdpZHRoOiA2Ni42NjY2NyU7IH1cbiAgICAuY29sdW1uLmlzLW9mZnNldC04LCAuY29sdW1uLmlzLW9mZnNldC04LXRhYmxldCB7XG4gICAgICBtYXJnaW4tbGVmdDogNjYuNjY2NjclOyB9XG4gICAgLmNvbHVtbi5pcy05LCAuY29sdW1uLmlzLTktdGFibGV0IHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogNzUlOyB9XG4gICAgLmNvbHVtbi5pcy1vZmZzZXQtOSwgLmNvbHVtbi5pcy1vZmZzZXQtOS10YWJsZXQge1xuICAgICAgbWFyZ2luLWxlZnQ6IDc1JTsgfVxuICAgIC5jb2x1bW4uaXMtMTAsIC5jb2x1bW4uaXMtMTAtdGFibGV0IHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogODMuMzMzMzMlOyB9XG4gICAgLmNvbHVtbi5pcy1vZmZzZXQtMTAsIC5jb2x1bW4uaXMtb2Zmc2V0LTEwLXRhYmxldCB7XG4gICAgICBtYXJnaW4tbGVmdDogODMuMzMzMzMlOyB9XG4gICAgLmNvbHVtbi5pcy0xMSwgLmNvbHVtbi5pcy0xMS10YWJsZXQge1xuICAgICAgZmxleDogbm9uZTtcbiAgICAgIHdpZHRoOiA5MS42NjY2NyU7IH1cbiAgICAuY29sdW1uLmlzLW9mZnNldC0xMSwgLmNvbHVtbi5pcy1vZmZzZXQtMTEtdGFibGV0IHtcbiAgICAgIG1hcmdpbi1sZWZ0OiA5MS42NjY2NyU7IH1cbiAgICAuY29sdW1uLmlzLTEyLCAuY29sdW1uLmlzLTEyLXRhYmxldCB7XG4gICAgICBmbGV4OiBub25lO1xuICAgICAgd2lkdGg6IDEwMCU7IH1cbiAgICAuY29sdW1uLmlzLW9mZnNldC0xMiwgLmNvbHVtbi5pcy1vZmZzZXQtMTItdGFibGV0IHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAxMDAlOyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTAyM3B4KSB7XG4gICAgLmNvbHVtbi5pcy1uYXJyb3ctdG91Y2gge1xuICAgICAgZmxleDogbm9uZTsgfVxuICAgIC5jb2x1bW4uaXMtZnVsbC10b3VjaCB7XG4gICAgICBmbGV4OiBub25lO1xuICAgICAgd2lkdGg6IDEwMCU7IH1cbiAgICAuY29sdW1uLmlzLXRocmVlLXF1YXJ0ZXJzLXRvdWNoIHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogNzUlOyB9XG4gICAgLmNvbHVtbi5pcy10d28tdGhpcmRzLXRvdWNoIHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogNjYuNjY2NiU7IH1cbiAgICAuY29sdW1uLmlzLWhhbGYtdG91Y2gge1xuICAgICAgZmxleDogbm9uZTtcbiAgICAgIHdpZHRoOiA1MCU7IH1cbiAgICAuY29sdW1uLmlzLW9uZS10aGlyZC10b3VjaCB7XG4gICAgICBmbGV4OiBub25lO1xuICAgICAgd2lkdGg6IDMzLjMzMzMlOyB9XG4gICAgLmNvbHVtbi5pcy1vbmUtcXVhcnRlci10b3VjaCB7XG4gICAgICBmbGV4OiBub25lO1xuICAgICAgd2lkdGg6IDI1JTsgfVxuICAgIC5jb2x1bW4uaXMtb25lLWZpZnRoLXRvdWNoIHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogMjAlOyB9XG4gICAgLmNvbHVtbi5pcy10d28tZmlmdGhzLXRvdWNoIHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogNDAlOyB9XG4gICAgLmNvbHVtbi5pcy10aHJlZS1maWZ0aHMtdG91Y2gge1xuICAgICAgZmxleDogbm9uZTtcbiAgICAgIHdpZHRoOiA2MCU7IH1cbiAgICAuY29sdW1uLmlzLWZvdXItZmlmdGhzLXRvdWNoIHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogODAlOyB9XG4gICAgLmNvbHVtbi5pcy1vZmZzZXQtdGhyZWUtcXVhcnRlcnMtdG91Y2gge1xuICAgICAgbWFyZ2luLWxlZnQ6IDc1JTsgfVxuICAgIC5jb2x1bW4uaXMtb2Zmc2V0LXR3by10aGlyZHMtdG91Y2gge1xuICAgICAgbWFyZ2luLWxlZnQ6IDY2LjY2NjYlOyB9XG4gICAgLmNvbHVtbi5pcy1vZmZzZXQtaGFsZi10b3VjaCB7XG4gICAgICBtYXJnaW4tbGVmdDogNTAlOyB9XG4gICAgLmNvbHVtbi5pcy1vZmZzZXQtb25lLXRoaXJkLXRvdWNoIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAzMy4zMzMzJTsgfVxuICAgIC5jb2x1bW4uaXMtb2Zmc2V0LW9uZS1xdWFydGVyLXRvdWNoIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAyNSU7IH1cbiAgICAuY29sdW1uLmlzLW9mZnNldC1vbmUtZmlmdGgtdG91Y2gge1xuICAgICAgbWFyZ2luLWxlZnQ6IDIwJTsgfVxuICAgIC5jb2x1bW4uaXMtb2Zmc2V0LXR3by1maWZ0aHMtdG91Y2gge1xuICAgICAgbWFyZ2luLWxlZnQ6IDQwJTsgfVxuICAgIC5jb2x1bW4uaXMtb2Zmc2V0LXRocmVlLWZpZnRocy10b3VjaCB7XG4gICAgICBtYXJnaW4tbGVmdDogNjAlOyB9XG4gICAgLmNvbHVtbi5pcy1vZmZzZXQtZm91ci1maWZ0aHMtdG91Y2gge1xuICAgICAgbWFyZ2luLWxlZnQ6IDgwJTsgfVxuICAgIC5jb2x1bW4uaXMtMC10b3VjaCB7XG4gICAgICBmbGV4OiBub25lO1xuICAgICAgd2lkdGg6IDAlOyB9XG4gICAgLmNvbHVtbi5pcy1vZmZzZXQtMC10b3VjaCB7XG4gICAgICBtYXJnaW4tbGVmdDogMCU7IH1cbiAgICAuY29sdW1uLmlzLTEtdG91Y2gge1xuICAgICAgZmxleDogbm9uZTtcbiAgICAgIHdpZHRoOiA4LjMzMzMzJTsgfVxuICAgIC5jb2x1bW4uaXMtb2Zmc2V0LTEtdG91Y2gge1xuICAgICAgbWFyZ2luLWxlZnQ6IDguMzMzMzMlOyB9XG4gICAgLmNvbHVtbi5pcy0yLXRvdWNoIHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogMTYuNjY2NjclOyB9XG4gICAgLmNvbHVtbi5pcy1vZmZzZXQtMi10b3VjaCB7XG4gICAgICBtYXJnaW4tbGVmdDogMTYuNjY2NjclOyB9XG4gICAgLmNvbHVtbi5pcy0zLXRvdWNoIHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogMjUlOyB9XG4gICAgLmNvbHVtbi5pcy1vZmZzZXQtMy10b3VjaCB7XG4gICAgICBtYXJnaW4tbGVmdDogMjUlOyB9XG4gICAgLmNvbHVtbi5pcy00LXRvdWNoIHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogMzMuMzMzMzMlOyB9XG4gICAgLmNvbHVtbi5pcy1vZmZzZXQtNC10b3VjaCB7XG4gICAgICBtYXJnaW4tbGVmdDogMzMuMzMzMzMlOyB9XG4gICAgLmNvbHVtbi5pcy01LXRvdWNoIHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogNDEuNjY2NjclOyB9XG4gICAgLmNvbHVtbi5pcy1vZmZzZXQtNS10b3VjaCB7XG4gICAgICBtYXJnaW4tbGVmdDogNDEuNjY2NjclOyB9XG4gICAgLmNvbHVtbi5pcy02LXRvdWNoIHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogNTAlOyB9XG4gICAgLmNvbHVtbi5pcy1vZmZzZXQtNi10b3VjaCB7XG4gICAgICBtYXJnaW4tbGVmdDogNTAlOyB9XG4gICAgLmNvbHVtbi5pcy03LXRvdWNoIHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogNTguMzMzMzMlOyB9XG4gICAgLmNvbHVtbi5pcy1vZmZzZXQtNy10b3VjaCB7XG4gICAgICBtYXJnaW4tbGVmdDogNTguMzMzMzMlOyB9XG4gICAgLmNvbHVtbi5pcy04LXRvdWNoIHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogNjYuNjY2NjclOyB9XG4gICAgLmNvbHVtbi5pcy1vZmZzZXQtOC10b3VjaCB7XG4gICAgICBtYXJnaW4tbGVmdDogNjYuNjY2NjclOyB9XG4gICAgLmNvbHVtbi5pcy05LXRvdWNoIHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogNzUlOyB9XG4gICAgLmNvbHVtbi5pcy1vZmZzZXQtOS10b3VjaCB7XG4gICAgICBtYXJnaW4tbGVmdDogNzUlOyB9XG4gICAgLmNvbHVtbi5pcy0xMC10b3VjaCB7XG4gICAgICBmbGV4OiBub25lO1xuICAgICAgd2lkdGg6IDgzLjMzMzMzJTsgfVxuICAgIC5jb2x1bW4uaXMtb2Zmc2V0LTEwLXRvdWNoIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiA4My4zMzMzMyU7IH1cbiAgICAuY29sdW1uLmlzLTExLXRvdWNoIHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogOTEuNjY2NjclOyB9XG4gICAgLmNvbHVtbi5pcy1vZmZzZXQtMTEtdG91Y2gge1xuICAgICAgbWFyZ2luLWxlZnQ6IDkxLjY2NjY3JTsgfVxuICAgIC5jb2x1bW4uaXMtMTItdG91Y2gge1xuICAgICAgZmxleDogbm9uZTtcbiAgICAgIHdpZHRoOiAxMDAlOyB9XG4gICAgLmNvbHVtbi5pcy1vZmZzZXQtMTItdG91Y2gge1xuICAgICAgbWFyZ2luLWxlZnQ6IDEwMCU7IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAuY29sdW1uLmlzLW5hcnJvdy1kZXNrdG9wIHtcbiAgICAgIGZsZXg6IG5vbmU7IH1cbiAgICAuY29sdW1uLmlzLWZ1bGwtZGVza3RvcCB7XG4gICAgICBmbGV4OiBub25lO1xuICAgICAgd2lkdGg6IDEwMCU7IH1cbiAgICAuY29sdW1uLmlzLXRocmVlLXF1YXJ0ZXJzLWRlc2t0b3Age1xuICAgICAgZmxleDogbm9uZTtcbiAgICAgIHdpZHRoOiA3NSU7IH1cbiAgICAuY29sdW1uLmlzLXR3by10aGlyZHMtZGVza3RvcCB7XG4gICAgICBmbGV4OiBub25lO1xuICAgICAgd2lkdGg6IDY2LjY2NjYlOyB9XG4gICAgLmNvbHVtbi5pcy1oYWxmLWRlc2t0b3Age1xuICAgICAgZmxleDogbm9uZTtcbiAgICAgIHdpZHRoOiA1MCU7IH1cbiAgICAuY29sdW1uLmlzLW9uZS10aGlyZC1kZXNrdG9wIHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogMzMuMzMzMyU7IH1cbiAgICAuY29sdW1uLmlzLW9uZS1xdWFydGVyLWRlc2t0b3Age1xuICAgICAgZmxleDogbm9uZTtcbiAgICAgIHdpZHRoOiAyNSU7IH1cbiAgICAuY29sdW1uLmlzLW9uZS1maWZ0aC1kZXNrdG9wIHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogMjAlOyB9XG4gICAgLmNvbHVtbi5pcy10d28tZmlmdGhzLWRlc2t0b3Age1xuICAgICAgZmxleDogbm9uZTtcbiAgICAgIHdpZHRoOiA0MCU7IH1cbiAgICAuY29sdW1uLmlzLXRocmVlLWZpZnRocy1kZXNrdG9wIHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogNjAlOyB9XG4gICAgLmNvbHVtbi5pcy1mb3VyLWZpZnRocy1kZXNrdG9wIHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogODAlOyB9XG4gICAgLmNvbHVtbi5pcy1vZmZzZXQtdGhyZWUtcXVhcnRlcnMtZGVza3RvcCB7XG4gICAgICBtYXJnaW4tbGVmdDogNzUlOyB9XG4gICAgLmNvbHVtbi5pcy1vZmZzZXQtdHdvLXRoaXJkcy1kZXNrdG9wIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiA2Ni42NjY2JTsgfVxuICAgIC5jb2x1bW4uaXMtb2Zmc2V0LWhhbGYtZGVza3RvcCB7XG4gICAgICBtYXJnaW4tbGVmdDogNTAlOyB9XG4gICAgLmNvbHVtbi5pcy1vZmZzZXQtb25lLXRoaXJkLWRlc2t0b3Age1xuICAgICAgbWFyZ2luLWxlZnQ6IDMzLjMzMzMlOyB9XG4gICAgLmNvbHVtbi5pcy1vZmZzZXQtb25lLXF1YXJ0ZXItZGVza3RvcCB7XG4gICAgICBtYXJnaW4tbGVmdDogMjUlOyB9XG4gICAgLmNvbHVtbi5pcy1vZmZzZXQtb25lLWZpZnRoLWRlc2t0b3Age1xuICAgICAgbWFyZ2luLWxlZnQ6IDIwJTsgfVxuICAgIC5jb2x1bW4uaXMtb2Zmc2V0LXR3by1maWZ0aHMtZGVza3RvcCB7XG4gICAgICBtYXJnaW4tbGVmdDogNDAlOyB9XG4gICAgLmNvbHVtbi5pcy1vZmZzZXQtdGhyZWUtZmlmdGhzLWRlc2t0b3Age1xuICAgICAgbWFyZ2luLWxlZnQ6IDYwJTsgfVxuICAgIC5jb2x1bW4uaXMtb2Zmc2V0LWZvdXItZmlmdGhzLWRlc2t0b3Age1xuICAgICAgbWFyZ2luLWxlZnQ6IDgwJTsgfVxuICAgIC5jb2x1bW4uaXMtMC1kZXNrdG9wIHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogMCU7IH1cbiAgICAuY29sdW1uLmlzLW9mZnNldC0wLWRlc2t0b3Age1xuICAgICAgbWFyZ2luLWxlZnQ6IDAlOyB9XG4gICAgLmNvbHVtbi5pcy0xLWRlc2t0b3Age1xuICAgICAgZmxleDogbm9uZTtcbiAgICAgIHdpZHRoOiA4LjMzMzMzJTsgfVxuICAgIC5jb2x1bW4uaXMtb2Zmc2V0LTEtZGVza3RvcCB7XG4gICAgICBtYXJnaW4tbGVmdDogOC4zMzMzMyU7IH1cbiAgICAuY29sdW1uLmlzLTItZGVza3RvcCB7XG4gICAgICBmbGV4OiBub25lO1xuICAgICAgd2lkdGg6IDE2LjY2NjY3JTsgfVxuICAgIC5jb2x1bW4uaXMtb2Zmc2V0LTItZGVza3RvcCB7XG4gICAgICBtYXJnaW4tbGVmdDogMTYuNjY2NjclOyB9XG4gICAgLmNvbHVtbi5pcy0zLWRlc2t0b3Age1xuICAgICAgZmxleDogbm9uZTtcbiAgICAgIHdpZHRoOiAyNSU7IH1cbiAgICAuY29sdW1uLmlzLW9mZnNldC0zLWRlc2t0b3Age1xuICAgICAgbWFyZ2luLWxlZnQ6IDI1JTsgfVxuICAgIC5jb2x1bW4uaXMtNC1kZXNrdG9wIHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogMzMuMzMzMzMlOyB9XG4gICAgLmNvbHVtbi5pcy1vZmZzZXQtNC1kZXNrdG9wIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAzMy4zMzMzMyU7IH1cbiAgICAuY29sdW1uLmlzLTUtZGVza3RvcCB7XG4gICAgICBmbGV4OiBub25lO1xuICAgICAgd2lkdGg6IDQxLjY2NjY3JTsgfVxuICAgIC5jb2x1bW4uaXMtb2Zmc2V0LTUtZGVza3RvcCB7XG4gICAgICBtYXJnaW4tbGVmdDogNDEuNjY2NjclOyB9XG4gICAgLmNvbHVtbi5pcy02LWRlc2t0b3Age1xuICAgICAgZmxleDogbm9uZTtcbiAgICAgIHdpZHRoOiA1MCU7IH1cbiAgICAuY29sdW1uLmlzLW9mZnNldC02LWRlc2t0b3Age1xuICAgICAgbWFyZ2luLWxlZnQ6IDUwJTsgfVxuICAgIC5jb2x1bW4uaXMtNy1kZXNrdG9wIHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogNTguMzMzMzMlOyB9XG4gICAgLmNvbHVtbi5pcy1vZmZzZXQtNy1kZXNrdG9wIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiA1OC4zMzMzMyU7IH1cbiAgICAuY29sdW1uLmlzLTgtZGVza3RvcCB7XG4gICAgICBmbGV4OiBub25lO1xuICAgICAgd2lkdGg6IDY2LjY2NjY3JTsgfVxuICAgIC5jb2x1bW4uaXMtb2Zmc2V0LTgtZGVza3RvcCB7XG4gICAgICBtYXJnaW4tbGVmdDogNjYuNjY2NjclOyB9XG4gICAgLmNvbHVtbi5pcy05LWRlc2t0b3Age1xuICAgICAgZmxleDogbm9uZTtcbiAgICAgIHdpZHRoOiA3NSU7IH1cbiAgICAuY29sdW1uLmlzLW9mZnNldC05LWRlc2t0b3Age1xuICAgICAgbWFyZ2luLWxlZnQ6IDc1JTsgfVxuICAgIC5jb2x1bW4uaXMtMTAtZGVza3RvcCB7XG4gICAgICBmbGV4OiBub25lO1xuICAgICAgd2lkdGg6IDgzLjMzMzMzJTsgfVxuICAgIC5jb2x1bW4uaXMtb2Zmc2V0LTEwLWRlc2t0b3Age1xuICAgICAgbWFyZ2luLWxlZnQ6IDgzLjMzMzMzJTsgfVxuICAgIC5jb2x1bW4uaXMtMTEtZGVza3RvcCB7XG4gICAgICBmbGV4OiBub25lO1xuICAgICAgd2lkdGg6IDkxLjY2NjY3JTsgfVxuICAgIC5jb2x1bW4uaXMtb2Zmc2V0LTExLWRlc2t0b3Age1xuICAgICAgbWFyZ2luLWxlZnQ6IDkxLjY2NjY3JTsgfVxuICAgIC5jb2x1bW4uaXMtMTItZGVza3RvcCB7XG4gICAgICBmbGV4OiBub25lO1xuICAgICAgd2lkdGg6IDEwMCU7IH1cbiAgICAuY29sdW1uLmlzLW9mZnNldC0xMi1kZXNrdG9wIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAxMDAlOyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTIxNnB4KSB7XG4gICAgLmNvbHVtbi5pcy1uYXJyb3ctd2lkZXNjcmVlbiB7XG4gICAgICBmbGV4OiBub25lOyB9XG4gICAgLmNvbHVtbi5pcy1mdWxsLXdpZGVzY3JlZW4ge1xuICAgICAgZmxleDogbm9uZTtcbiAgICAgIHdpZHRoOiAxMDAlOyB9XG4gICAgLmNvbHVtbi5pcy10aHJlZS1xdWFydGVycy13aWRlc2NyZWVuIHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogNzUlOyB9XG4gICAgLmNvbHVtbi5pcy10d28tdGhpcmRzLXdpZGVzY3JlZW4ge1xuICAgICAgZmxleDogbm9uZTtcbiAgICAgIHdpZHRoOiA2Ni42NjY2JTsgfVxuICAgIC5jb2x1bW4uaXMtaGFsZi13aWRlc2NyZWVuIHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogNTAlOyB9XG4gICAgLmNvbHVtbi5pcy1vbmUtdGhpcmQtd2lkZXNjcmVlbiB7XG4gICAgICBmbGV4OiBub25lO1xuICAgICAgd2lkdGg6IDMzLjMzMzMlOyB9XG4gICAgLmNvbHVtbi5pcy1vbmUtcXVhcnRlci13aWRlc2NyZWVuIHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogMjUlOyB9XG4gICAgLmNvbHVtbi5pcy1vbmUtZmlmdGgtd2lkZXNjcmVlbiB7XG4gICAgICBmbGV4OiBub25lO1xuICAgICAgd2lkdGg6IDIwJTsgfVxuICAgIC5jb2x1bW4uaXMtdHdvLWZpZnRocy13aWRlc2NyZWVuIHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogNDAlOyB9XG4gICAgLmNvbHVtbi5pcy10aHJlZS1maWZ0aHMtd2lkZXNjcmVlbiB7XG4gICAgICBmbGV4OiBub25lO1xuICAgICAgd2lkdGg6IDYwJTsgfVxuICAgIC5jb2x1bW4uaXMtZm91ci1maWZ0aHMtd2lkZXNjcmVlbiB7XG4gICAgICBmbGV4OiBub25lO1xuICAgICAgd2lkdGg6IDgwJTsgfVxuICAgIC5jb2x1bW4uaXMtb2Zmc2V0LXRocmVlLXF1YXJ0ZXJzLXdpZGVzY3JlZW4ge1xuICAgICAgbWFyZ2luLWxlZnQ6IDc1JTsgfVxuICAgIC5jb2x1bW4uaXMtb2Zmc2V0LXR3by10aGlyZHMtd2lkZXNjcmVlbiB7XG4gICAgICBtYXJnaW4tbGVmdDogNjYuNjY2NiU7IH1cbiAgICAuY29sdW1uLmlzLW9mZnNldC1oYWxmLXdpZGVzY3JlZW4ge1xuICAgICAgbWFyZ2luLWxlZnQ6IDUwJTsgfVxuICAgIC5jb2x1bW4uaXMtb2Zmc2V0LW9uZS10aGlyZC13aWRlc2NyZWVuIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAzMy4zMzMzJTsgfVxuICAgIC5jb2x1bW4uaXMtb2Zmc2V0LW9uZS1xdWFydGVyLXdpZGVzY3JlZW4ge1xuICAgICAgbWFyZ2luLWxlZnQ6IDI1JTsgfVxuICAgIC5jb2x1bW4uaXMtb2Zmc2V0LW9uZS1maWZ0aC13aWRlc2NyZWVuIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAyMCU7IH1cbiAgICAuY29sdW1uLmlzLW9mZnNldC10d28tZmlmdGhzLXdpZGVzY3JlZW4ge1xuICAgICAgbWFyZ2luLWxlZnQ6IDQwJTsgfVxuICAgIC5jb2x1bW4uaXMtb2Zmc2V0LXRocmVlLWZpZnRocy13aWRlc2NyZWVuIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiA2MCU7IH1cbiAgICAuY29sdW1uLmlzLW9mZnNldC1mb3VyLWZpZnRocy13aWRlc2NyZWVuIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiA4MCU7IH1cbiAgICAuY29sdW1uLmlzLTAtd2lkZXNjcmVlbiB7XG4gICAgICBmbGV4OiBub25lO1xuICAgICAgd2lkdGg6IDAlOyB9XG4gICAgLmNvbHVtbi5pcy1vZmZzZXQtMC13aWRlc2NyZWVuIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAwJTsgfVxuICAgIC5jb2x1bW4uaXMtMS13aWRlc2NyZWVuIHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogOC4zMzMzMyU7IH1cbiAgICAuY29sdW1uLmlzLW9mZnNldC0xLXdpZGVzY3JlZW4ge1xuICAgICAgbWFyZ2luLWxlZnQ6IDguMzMzMzMlOyB9XG4gICAgLmNvbHVtbi5pcy0yLXdpZGVzY3JlZW4ge1xuICAgICAgZmxleDogbm9uZTtcbiAgICAgIHdpZHRoOiAxNi42NjY2NyU7IH1cbiAgICAuY29sdW1uLmlzLW9mZnNldC0yLXdpZGVzY3JlZW4ge1xuICAgICAgbWFyZ2luLWxlZnQ6IDE2LjY2NjY3JTsgfVxuICAgIC5jb2x1bW4uaXMtMy13aWRlc2NyZWVuIHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogMjUlOyB9XG4gICAgLmNvbHVtbi5pcy1vZmZzZXQtMy13aWRlc2NyZWVuIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAyNSU7IH1cbiAgICAuY29sdW1uLmlzLTQtd2lkZXNjcmVlbiB7XG4gICAgICBmbGV4OiBub25lO1xuICAgICAgd2lkdGg6IDMzLjMzMzMzJTsgfVxuICAgIC5jb2x1bW4uaXMtb2Zmc2V0LTQtd2lkZXNjcmVlbiB7XG4gICAgICBtYXJnaW4tbGVmdDogMzMuMzMzMzMlOyB9XG4gICAgLmNvbHVtbi5pcy01LXdpZGVzY3JlZW4ge1xuICAgICAgZmxleDogbm9uZTtcbiAgICAgIHdpZHRoOiA0MS42NjY2NyU7IH1cbiAgICAuY29sdW1uLmlzLW9mZnNldC01LXdpZGVzY3JlZW4ge1xuICAgICAgbWFyZ2luLWxlZnQ6IDQxLjY2NjY3JTsgfVxuICAgIC5jb2x1bW4uaXMtNi13aWRlc2NyZWVuIHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogNTAlOyB9XG4gICAgLmNvbHVtbi5pcy1vZmZzZXQtNi13aWRlc2NyZWVuIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiA1MCU7IH1cbiAgICAuY29sdW1uLmlzLTctd2lkZXNjcmVlbiB7XG4gICAgICBmbGV4OiBub25lO1xuICAgICAgd2lkdGg6IDU4LjMzMzMzJTsgfVxuICAgIC5jb2x1bW4uaXMtb2Zmc2V0LTctd2lkZXNjcmVlbiB7XG4gICAgICBtYXJnaW4tbGVmdDogNTguMzMzMzMlOyB9XG4gICAgLmNvbHVtbi5pcy04LXdpZGVzY3JlZW4ge1xuICAgICAgZmxleDogbm9uZTtcbiAgICAgIHdpZHRoOiA2Ni42NjY2NyU7IH1cbiAgICAuY29sdW1uLmlzLW9mZnNldC04LXdpZGVzY3JlZW4ge1xuICAgICAgbWFyZ2luLWxlZnQ6IDY2LjY2NjY3JTsgfVxuICAgIC5jb2x1bW4uaXMtOS13aWRlc2NyZWVuIHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogNzUlOyB9XG4gICAgLmNvbHVtbi5pcy1vZmZzZXQtOS13aWRlc2NyZWVuIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiA3NSU7IH1cbiAgICAuY29sdW1uLmlzLTEwLXdpZGVzY3JlZW4ge1xuICAgICAgZmxleDogbm9uZTtcbiAgICAgIHdpZHRoOiA4My4zMzMzMyU7IH1cbiAgICAuY29sdW1uLmlzLW9mZnNldC0xMC13aWRlc2NyZWVuIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiA4My4zMzMzMyU7IH1cbiAgICAuY29sdW1uLmlzLTExLXdpZGVzY3JlZW4ge1xuICAgICAgZmxleDogbm9uZTtcbiAgICAgIHdpZHRoOiA5MS42NjY2NyU7IH1cbiAgICAuY29sdW1uLmlzLW9mZnNldC0xMS13aWRlc2NyZWVuIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiA5MS42NjY2NyU7IH1cbiAgICAuY29sdW1uLmlzLTEyLXdpZGVzY3JlZW4ge1xuICAgICAgZmxleDogbm9uZTtcbiAgICAgIHdpZHRoOiAxMDAlOyB9XG4gICAgLmNvbHVtbi5pcy1vZmZzZXQtMTItd2lkZXNjcmVlbiB7XG4gICAgICBtYXJnaW4tbGVmdDogMTAwJTsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDE0MDhweCkge1xuICAgIC5jb2x1bW4uaXMtbmFycm93LWZ1bGxoZCB7XG4gICAgICBmbGV4OiBub25lOyB9XG4gICAgLmNvbHVtbi5pcy1mdWxsLWZ1bGxoZCB7XG4gICAgICBmbGV4OiBub25lO1xuICAgICAgd2lkdGg6IDEwMCU7IH1cbiAgICAuY29sdW1uLmlzLXRocmVlLXF1YXJ0ZXJzLWZ1bGxoZCB7XG4gICAgICBmbGV4OiBub25lO1xuICAgICAgd2lkdGg6IDc1JTsgfVxuICAgIC5jb2x1bW4uaXMtdHdvLXRoaXJkcy1mdWxsaGQge1xuICAgICAgZmxleDogbm9uZTtcbiAgICAgIHdpZHRoOiA2Ni42NjY2JTsgfVxuICAgIC5jb2x1bW4uaXMtaGFsZi1mdWxsaGQge1xuICAgICAgZmxleDogbm9uZTtcbiAgICAgIHdpZHRoOiA1MCU7IH1cbiAgICAuY29sdW1uLmlzLW9uZS10aGlyZC1mdWxsaGQge1xuICAgICAgZmxleDogbm9uZTtcbiAgICAgIHdpZHRoOiAzMy4zMzMzJTsgfVxuICAgIC5jb2x1bW4uaXMtb25lLXF1YXJ0ZXItZnVsbGhkIHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogMjUlOyB9XG4gICAgLmNvbHVtbi5pcy1vbmUtZmlmdGgtZnVsbGhkIHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogMjAlOyB9XG4gICAgLmNvbHVtbi5pcy10d28tZmlmdGhzLWZ1bGxoZCB7XG4gICAgICBmbGV4OiBub25lO1xuICAgICAgd2lkdGg6IDQwJTsgfVxuICAgIC5jb2x1bW4uaXMtdGhyZWUtZmlmdGhzLWZ1bGxoZCB7XG4gICAgICBmbGV4OiBub25lO1xuICAgICAgd2lkdGg6IDYwJTsgfVxuICAgIC5jb2x1bW4uaXMtZm91ci1maWZ0aHMtZnVsbGhkIHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogODAlOyB9XG4gICAgLmNvbHVtbi5pcy1vZmZzZXQtdGhyZWUtcXVhcnRlcnMtZnVsbGhkIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiA3NSU7IH1cbiAgICAuY29sdW1uLmlzLW9mZnNldC10d28tdGhpcmRzLWZ1bGxoZCB7XG4gICAgICBtYXJnaW4tbGVmdDogNjYuNjY2NiU7IH1cbiAgICAuY29sdW1uLmlzLW9mZnNldC1oYWxmLWZ1bGxoZCB7XG4gICAgICBtYXJnaW4tbGVmdDogNTAlOyB9XG4gICAgLmNvbHVtbi5pcy1vZmZzZXQtb25lLXRoaXJkLWZ1bGxoZCB7XG4gICAgICBtYXJnaW4tbGVmdDogMzMuMzMzMyU7IH1cbiAgICAuY29sdW1uLmlzLW9mZnNldC1vbmUtcXVhcnRlci1mdWxsaGQge1xuICAgICAgbWFyZ2luLWxlZnQ6IDI1JTsgfVxuICAgIC5jb2x1bW4uaXMtb2Zmc2V0LW9uZS1maWZ0aC1mdWxsaGQge1xuICAgICAgbWFyZ2luLWxlZnQ6IDIwJTsgfVxuICAgIC5jb2x1bW4uaXMtb2Zmc2V0LXR3by1maWZ0aHMtZnVsbGhkIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiA0MCU7IH1cbiAgICAuY29sdW1uLmlzLW9mZnNldC10aHJlZS1maWZ0aHMtZnVsbGhkIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiA2MCU7IH1cbiAgICAuY29sdW1uLmlzLW9mZnNldC1mb3VyLWZpZnRocy1mdWxsaGQge1xuICAgICAgbWFyZ2luLWxlZnQ6IDgwJTsgfVxuICAgIC5jb2x1bW4uaXMtMC1mdWxsaGQge1xuICAgICAgZmxleDogbm9uZTtcbiAgICAgIHdpZHRoOiAwJTsgfVxuICAgIC5jb2x1bW4uaXMtb2Zmc2V0LTAtZnVsbGhkIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAwJTsgfVxuICAgIC5jb2x1bW4uaXMtMS1mdWxsaGQge1xuICAgICAgZmxleDogbm9uZTtcbiAgICAgIHdpZHRoOiA4LjMzMzMzJTsgfVxuICAgIC5jb2x1bW4uaXMtb2Zmc2V0LTEtZnVsbGhkIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiA4LjMzMzMzJTsgfVxuICAgIC5jb2x1bW4uaXMtMi1mdWxsaGQge1xuICAgICAgZmxleDogbm9uZTtcbiAgICAgIHdpZHRoOiAxNi42NjY2NyU7IH1cbiAgICAuY29sdW1uLmlzLW9mZnNldC0yLWZ1bGxoZCB7XG4gICAgICBtYXJnaW4tbGVmdDogMTYuNjY2NjclOyB9XG4gICAgLmNvbHVtbi5pcy0zLWZ1bGxoZCB7XG4gICAgICBmbGV4OiBub25lO1xuICAgICAgd2lkdGg6IDI1JTsgfVxuICAgIC5jb2x1bW4uaXMtb2Zmc2V0LTMtZnVsbGhkIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAyNSU7IH1cbiAgICAuY29sdW1uLmlzLTQtZnVsbGhkIHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogMzMuMzMzMzMlOyB9XG4gICAgLmNvbHVtbi5pcy1vZmZzZXQtNC1mdWxsaGQge1xuICAgICAgbWFyZ2luLWxlZnQ6IDMzLjMzMzMzJTsgfVxuICAgIC5jb2x1bW4uaXMtNS1mdWxsaGQge1xuICAgICAgZmxleDogbm9uZTtcbiAgICAgIHdpZHRoOiA0MS42NjY2NyU7IH1cbiAgICAuY29sdW1uLmlzLW9mZnNldC01LWZ1bGxoZCB7XG4gICAgICBtYXJnaW4tbGVmdDogNDEuNjY2NjclOyB9XG4gICAgLmNvbHVtbi5pcy02LWZ1bGxoZCB7XG4gICAgICBmbGV4OiBub25lO1xuICAgICAgd2lkdGg6IDUwJTsgfVxuICAgIC5jb2x1bW4uaXMtb2Zmc2V0LTYtZnVsbGhkIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiA1MCU7IH1cbiAgICAuY29sdW1uLmlzLTctZnVsbGhkIHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogNTguMzMzMzMlOyB9XG4gICAgLmNvbHVtbi5pcy1vZmZzZXQtNy1mdWxsaGQge1xuICAgICAgbWFyZ2luLWxlZnQ6IDU4LjMzMzMzJTsgfVxuICAgIC5jb2x1bW4uaXMtOC1mdWxsaGQge1xuICAgICAgZmxleDogbm9uZTtcbiAgICAgIHdpZHRoOiA2Ni42NjY2NyU7IH1cbiAgICAuY29sdW1uLmlzLW9mZnNldC04LWZ1bGxoZCB7XG4gICAgICBtYXJnaW4tbGVmdDogNjYuNjY2NjclOyB9XG4gICAgLmNvbHVtbi5pcy05LWZ1bGxoZCB7XG4gICAgICBmbGV4OiBub25lO1xuICAgICAgd2lkdGg6IDc1JTsgfVxuICAgIC5jb2x1bW4uaXMtb2Zmc2V0LTktZnVsbGhkIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiA3NSU7IH1cbiAgICAuY29sdW1uLmlzLTEwLWZ1bGxoZCB7XG4gICAgICBmbGV4OiBub25lO1xuICAgICAgd2lkdGg6IDgzLjMzMzMzJTsgfVxuICAgIC5jb2x1bW4uaXMtb2Zmc2V0LTEwLWZ1bGxoZCB7XG4gICAgICBtYXJnaW4tbGVmdDogODMuMzMzMzMlOyB9XG4gICAgLmNvbHVtbi5pcy0xMS1mdWxsaGQge1xuICAgICAgZmxleDogbm9uZTtcbiAgICAgIHdpZHRoOiA5MS42NjY2NyU7IH1cbiAgICAuY29sdW1uLmlzLW9mZnNldC0xMS1mdWxsaGQge1xuICAgICAgbWFyZ2luLWxlZnQ6IDkxLjY2NjY3JTsgfVxuICAgIC5jb2x1bW4uaXMtMTItZnVsbGhkIHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogMTAwJTsgfVxuICAgIC5jb2x1bW4uaXMtb2Zmc2V0LTEyLWZ1bGxoZCB7XG4gICAgICBtYXJnaW4tbGVmdDogMTAwJTsgfSB9XG5cbi5jb2x1bW5zIHtcbiAgbWFyZ2luLWxlZnQ6IC0wLjc1cmVtO1xuICBtYXJnaW4tcmlnaHQ6IC0wLjc1cmVtO1xuICBtYXJnaW4tdG9wOiAtMC43NXJlbTsgfVxuICAuY29sdW1uczpsYXN0LWNoaWxkIHtcbiAgICBtYXJnaW4tYm90dG9tOiAtMC43NXJlbTsgfVxuICAuY29sdW1uczpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICBtYXJnaW4tYm90dG9tOiBjYWxjKDEuNXJlbSAtIDAuNzVyZW0pOyB9XG4gIC5jb2x1bW5zLmlzLWNlbnRlcmVkIHtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgfVxuICAuY29sdW1ucy5pcy1nYXBsZXNzIHtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgbWFyZ2luLXRvcDogMDsgfVxuICAgIC5jb2x1bW5zLmlzLWdhcGxlc3MgPiAuY29sdW1uIHtcbiAgICAgIG1hcmdpbjogMDtcbiAgICAgIHBhZGRpbmc6IDAgIWltcG9ydGFudDsgfVxuICAgIC5jb2x1bW5zLmlzLWdhcGxlc3M6bm90KDpsYXN0LWNoaWxkKSB7XG4gICAgICBtYXJnaW4tYm90dG9tOiAxLjVyZW07IH1cbiAgICAuY29sdW1ucy5pcy1nYXBsZXNzOmxhc3QtY2hpbGQge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMDsgfVxuICAuY29sdW1ucy5pcy1tb2JpbGUge1xuICAgIGRpc3BsYXk6IGZsZXg7IH1cbiAgLmNvbHVtbnMuaXMtbXVsdGlsaW5lIHtcbiAgICBmbGV4LXdyYXA6IHdyYXA7IH1cbiAgLmNvbHVtbnMuaXMtdmNlbnRlcmVkIHtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OXB4KSwgcHJpbnQge1xuICAgIC5jb2x1bW5zOm5vdCguaXMtZGVza3RvcCkge1xuICAgICAgZGlzcGxheTogZmxleDsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgIC5jb2x1bW5zLmlzLWRlc2t0b3Age1xuICAgICAgZGlzcGxheTogZmxleDsgfSB9XG5cbi5jb2x1bW5zLmlzLXZhcmlhYmxlIHtcbiAgLS1jb2x1bW5HYXA6IDAuNzVyZW07XG4gIG1hcmdpbi1sZWZ0OiBjYWxjKC0xICogdmFyKC0tY29sdW1uR2FwKSk7XG4gIG1hcmdpbi1yaWdodDogY2FsYygtMSAqIHZhcigtLWNvbHVtbkdhcCkpOyB9XG4gIC5jb2x1bW5zLmlzLXZhcmlhYmxlIC5jb2x1bW4ge1xuICAgIHBhZGRpbmctbGVmdDogdmFyKC0tY29sdW1uR2FwKTtcbiAgICBwYWRkaW5nLXJpZ2h0OiB2YXIoLS1jb2x1bW5HYXApOyB9XG4gIC5jb2x1bW5zLmlzLXZhcmlhYmxlLmlzLTAge1xuICAgIC0tY29sdW1uR2FwOiAwcmVtOyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLmNvbHVtbnMuaXMtdmFyaWFibGUuaXMtMC1tb2JpbGUge1xuICAgICAgLS1jb2x1bW5HYXA6IDByZW07IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjlweCksIHByaW50IHtcbiAgICAuY29sdW1ucy5pcy12YXJpYWJsZS5pcy0wLXRhYmxldCB7XG4gICAgICAtLWNvbHVtbkdhcDogMHJlbTsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OXB4KSBhbmQgKG1heC13aWR0aDogMTAyM3B4KSB7XG4gICAgLmNvbHVtbnMuaXMtdmFyaWFibGUuaXMtMC10YWJsZXQtb25seSB7XG4gICAgICAtLWNvbHVtbkdhcDogMHJlbTsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEwMjNweCkge1xuICAgIC5jb2x1bW5zLmlzLXZhcmlhYmxlLmlzLTAtdG91Y2gge1xuICAgICAgLS1jb2x1bW5HYXA6IDByZW07IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAuY29sdW1ucy5pcy12YXJpYWJsZS5pcy0wLWRlc2t0b3Age1xuICAgICAgLS1jb2x1bW5HYXA6IDByZW07IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI0cHgpIGFuZCAobWF4LXdpZHRoOiAxMjE1cHgpIHtcbiAgICAuY29sdW1ucy5pcy12YXJpYWJsZS5pcy0wLWRlc2t0b3Atb25seSB7XG4gICAgICAtLWNvbHVtbkdhcDogMHJlbTsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEyMTZweCkge1xuICAgIC5jb2x1bW5zLmlzLXZhcmlhYmxlLmlzLTAtd2lkZXNjcmVlbiB7XG4gICAgICAtLWNvbHVtbkdhcDogMHJlbTsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEyMTZweCkgYW5kIChtYXgtd2lkdGg6IDE0MDdweCkge1xuICAgIC5jb2x1bW5zLmlzLXZhcmlhYmxlLmlzLTAtd2lkZXNjcmVlbi1vbmx5IHtcbiAgICAgIC0tY29sdW1uR2FwOiAwcmVtOyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTQwOHB4KSB7XG4gICAgLmNvbHVtbnMuaXMtdmFyaWFibGUuaXMtMC1mdWxsaGQge1xuICAgICAgLS1jb2x1bW5HYXA6IDByZW07IH0gfVxuICAuY29sdW1ucy5pcy12YXJpYWJsZS5pcy0xIHtcbiAgICAtLWNvbHVtbkdhcDogMC4yNXJlbTsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5jb2x1bW5zLmlzLXZhcmlhYmxlLmlzLTEtbW9iaWxlIHtcbiAgICAgIC0tY29sdW1uR2FwOiAwLjI1cmVtOyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY5cHgpLCBwcmludCB7XG4gICAgLmNvbHVtbnMuaXMtdmFyaWFibGUuaXMtMS10YWJsZXQge1xuICAgICAgLS1jb2x1bW5HYXA6IDAuMjVyZW07IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjlweCkgYW5kIChtYXgtd2lkdGg6IDEwMjNweCkge1xuICAgIC5jb2x1bW5zLmlzLXZhcmlhYmxlLmlzLTEtdGFibGV0LW9ubHkge1xuICAgICAgLS1jb2x1bW5HYXA6IDAuMjVyZW07IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMDIzcHgpIHtcbiAgICAuY29sdW1ucy5pcy12YXJpYWJsZS5pcy0xLXRvdWNoIHtcbiAgICAgIC0tY29sdW1uR2FwOiAwLjI1cmVtOyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgLmNvbHVtbnMuaXMtdmFyaWFibGUuaXMtMS1kZXNrdG9wIHtcbiAgICAgIC0tY29sdW1uR2FwOiAwLjI1cmVtOyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNHB4KSBhbmQgKG1heC13aWR0aDogMTIxNXB4KSB7XG4gICAgLmNvbHVtbnMuaXMtdmFyaWFibGUuaXMtMS1kZXNrdG9wLW9ubHkge1xuICAgICAgLS1jb2x1bW5HYXA6IDAuMjVyZW07IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMjE2cHgpIHtcbiAgICAuY29sdW1ucy5pcy12YXJpYWJsZS5pcy0xLXdpZGVzY3JlZW4ge1xuICAgICAgLS1jb2x1bW5HYXA6IDAuMjVyZW07IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMjE2cHgpIGFuZCAobWF4LXdpZHRoOiAxNDA3cHgpIHtcbiAgICAuY29sdW1ucy5pcy12YXJpYWJsZS5pcy0xLXdpZGVzY3JlZW4tb25seSB7XG4gICAgICAtLWNvbHVtbkdhcDogMC4yNXJlbTsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDE0MDhweCkge1xuICAgIC5jb2x1bW5zLmlzLXZhcmlhYmxlLmlzLTEtZnVsbGhkIHtcbiAgICAgIC0tY29sdW1uR2FwOiAwLjI1cmVtOyB9IH1cbiAgLmNvbHVtbnMuaXMtdmFyaWFibGUuaXMtMiB7XG4gICAgLS1jb2x1bW5HYXA6IDAuNXJlbTsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5jb2x1bW5zLmlzLXZhcmlhYmxlLmlzLTItbW9iaWxlIHtcbiAgICAgIC0tY29sdW1uR2FwOiAwLjVyZW07IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjlweCksIHByaW50IHtcbiAgICAuY29sdW1ucy5pcy12YXJpYWJsZS5pcy0yLXRhYmxldCB7XG4gICAgICAtLWNvbHVtbkdhcDogMC41cmVtOyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY5cHgpIGFuZCAobWF4LXdpZHRoOiAxMDIzcHgpIHtcbiAgICAuY29sdW1ucy5pcy12YXJpYWJsZS5pcy0yLXRhYmxldC1vbmx5IHtcbiAgICAgIC0tY29sdW1uR2FwOiAwLjVyZW07IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMDIzcHgpIHtcbiAgICAuY29sdW1ucy5pcy12YXJpYWJsZS5pcy0yLXRvdWNoIHtcbiAgICAgIC0tY29sdW1uR2FwOiAwLjVyZW07IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAuY29sdW1ucy5pcy12YXJpYWJsZS5pcy0yLWRlc2t0b3Age1xuICAgICAgLS1jb2x1bW5HYXA6IDAuNXJlbTsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjRweCkgYW5kIChtYXgtd2lkdGg6IDEyMTVweCkge1xuICAgIC5jb2x1bW5zLmlzLXZhcmlhYmxlLmlzLTItZGVza3RvcC1vbmx5IHtcbiAgICAgIC0tY29sdW1uR2FwOiAwLjVyZW07IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMjE2cHgpIHtcbiAgICAuY29sdW1ucy5pcy12YXJpYWJsZS5pcy0yLXdpZGVzY3JlZW4ge1xuICAgICAgLS1jb2x1bW5HYXA6IDAuNXJlbTsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEyMTZweCkgYW5kIChtYXgtd2lkdGg6IDE0MDdweCkge1xuICAgIC5jb2x1bW5zLmlzLXZhcmlhYmxlLmlzLTItd2lkZXNjcmVlbi1vbmx5IHtcbiAgICAgIC0tY29sdW1uR2FwOiAwLjVyZW07IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxNDA4cHgpIHtcbiAgICAuY29sdW1ucy5pcy12YXJpYWJsZS5pcy0yLWZ1bGxoZCB7XG4gICAgICAtLWNvbHVtbkdhcDogMC41cmVtOyB9IH1cbiAgLmNvbHVtbnMuaXMtdmFyaWFibGUuaXMtMyB7XG4gICAgLS1jb2x1bW5HYXA6IDAuNzVyZW07IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAuY29sdW1ucy5pcy12YXJpYWJsZS5pcy0zLW1vYmlsZSB7XG4gICAgICAtLWNvbHVtbkdhcDogMC43NXJlbTsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OXB4KSwgcHJpbnQge1xuICAgIC5jb2x1bW5zLmlzLXZhcmlhYmxlLmlzLTMtdGFibGV0IHtcbiAgICAgIC0tY29sdW1uR2FwOiAwLjc1cmVtOyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY5cHgpIGFuZCAobWF4LXdpZHRoOiAxMDIzcHgpIHtcbiAgICAuY29sdW1ucy5pcy12YXJpYWJsZS5pcy0zLXRhYmxldC1vbmx5IHtcbiAgICAgIC0tY29sdW1uR2FwOiAwLjc1cmVtOyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTAyM3B4KSB7XG4gICAgLmNvbHVtbnMuaXMtdmFyaWFibGUuaXMtMy10b3VjaCB7XG4gICAgICAtLWNvbHVtbkdhcDogMC43NXJlbTsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgIC5jb2x1bW5zLmlzLXZhcmlhYmxlLmlzLTMtZGVza3RvcCB7XG4gICAgICAtLWNvbHVtbkdhcDogMC43NXJlbTsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjRweCkgYW5kIChtYXgtd2lkdGg6IDEyMTVweCkge1xuICAgIC5jb2x1bW5zLmlzLXZhcmlhYmxlLmlzLTMtZGVza3RvcC1vbmx5IHtcbiAgICAgIC0tY29sdW1uR2FwOiAwLjc1cmVtOyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTIxNnB4KSB7XG4gICAgLmNvbHVtbnMuaXMtdmFyaWFibGUuaXMtMy13aWRlc2NyZWVuIHtcbiAgICAgIC0tY29sdW1uR2FwOiAwLjc1cmVtOyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTIxNnB4KSBhbmQgKG1heC13aWR0aDogMTQwN3B4KSB7XG4gICAgLmNvbHVtbnMuaXMtdmFyaWFibGUuaXMtMy13aWRlc2NyZWVuLW9ubHkge1xuICAgICAgLS1jb2x1bW5HYXA6IDAuNzVyZW07IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxNDA4cHgpIHtcbiAgICAuY29sdW1ucy5pcy12YXJpYWJsZS5pcy0zLWZ1bGxoZCB7XG4gICAgICAtLWNvbHVtbkdhcDogMC43NXJlbTsgfSB9XG4gIC5jb2x1bW5zLmlzLXZhcmlhYmxlLmlzLTQge1xuICAgIC0tY29sdW1uR2FwOiAxcmVtOyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLmNvbHVtbnMuaXMtdmFyaWFibGUuaXMtNC1tb2JpbGUge1xuICAgICAgLS1jb2x1bW5HYXA6IDFyZW07IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjlweCksIHByaW50IHtcbiAgICAuY29sdW1ucy5pcy12YXJpYWJsZS5pcy00LXRhYmxldCB7XG4gICAgICAtLWNvbHVtbkdhcDogMXJlbTsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OXB4KSBhbmQgKG1heC13aWR0aDogMTAyM3B4KSB7XG4gICAgLmNvbHVtbnMuaXMtdmFyaWFibGUuaXMtNC10YWJsZXQtb25seSB7XG4gICAgICAtLWNvbHVtbkdhcDogMXJlbTsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEwMjNweCkge1xuICAgIC5jb2x1bW5zLmlzLXZhcmlhYmxlLmlzLTQtdG91Y2gge1xuICAgICAgLS1jb2x1bW5HYXA6IDFyZW07IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAuY29sdW1ucy5pcy12YXJpYWJsZS5pcy00LWRlc2t0b3Age1xuICAgICAgLS1jb2x1bW5HYXA6IDFyZW07IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI0cHgpIGFuZCAobWF4LXdpZHRoOiAxMjE1cHgpIHtcbiAgICAuY29sdW1ucy5pcy12YXJpYWJsZS5pcy00LWRlc2t0b3Atb25seSB7XG4gICAgICAtLWNvbHVtbkdhcDogMXJlbTsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEyMTZweCkge1xuICAgIC5jb2x1bW5zLmlzLXZhcmlhYmxlLmlzLTQtd2lkZXNjcmVlbiB7XG4gICAgICAtLWNvbHVtbkdhcDogMXJlbTsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEyMTZweCkgYW5kIChtYXgtd2lkdGg6IDE0MDdweCkge1xuICAgIC5jb2x1bW5zLmlzLXZhcmlhYmxlLmlzLTQtd2lkZXNjcmVlbi1vbmx5IHtcbiAgICAgIC0tY29sdW1uR2FwOiAxcmVtOyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTQwOHB4KSB7XG4gICAgLmNvbHVtbnMuaXMtdmFyaWFibGUuaXMtNC1mdWxsaGQge1xuICAgICAgLS1jb2x1bW5HYXA6IDFyZW07IH0gfVxuICAuY29sdW1ucy5pcy12YXJpYWJsZS5pcy01IHtcbiAgICAtLWNvbHVtbkdhcDogMS4yNXJlbTsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5jb2x1bW5zLmlzLXZhcmlhYmxlLmlzLTUtbW9iaWxlIHtcbiAgICAgIC0tY29sdW1uR2FwOiAxLjI1cmVtOyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY5cHgpLCBwcmludCB7XG4gICAgLmNvbHVtbnMuaXMtdmFyaWFibGUuaXMtNS10YWJsZXQge1xuICAgICAgLS1jb2x1bW5HYXA6IDEuMjVyZW07IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjlweCkgYW5kIChtYXgtd2lkdGg6IDEwMjNweCkge1xuICAgIC5jb2x1bW5zLmlzLXZhcmlhYmxlLmlzLTUtdGFibGV0LW9ubHkge1xuICAgICAgLS1jb2x1bW5HYXA6IDEuMjVyZW07IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMDIzcHgpIHtcbiAgICAuY29sdW1ucy5pcy12YXJpYWJsZS5pcy01LXRvdWNoIHtcbiAgICAgIC0tY29sdW1uR2FwOiAxLjI1cmVtOyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgLmNvbHVtbnMuaXMtdmFyaWFibGUuaXMtNS1kZXNrdG9wIHtcbiAgICAgIC0tY29sdW1uR2FwOiAxLjI1cmVtOyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNHB4KSBhbmQgKG1heC13aWR0aDogMTIxNXB4KSB7XG4gICAgLmNvbHVtbnMuaXMtdmFyaWFibGUuaXMtNS1kZXNrdG9wLW9ubHkge1xuICAgICAgLS1jb2x1bW5HYXA6IDEuMjVyZW07IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMjE2cHgpIHtcbiAgICAuY29sdW1ucy5pcy12YXJpYWJsZS5pcy01LXdpZGVzY3JlZW4ge1xuICAgICAgLS1jb2x1bW5HYXA6IDEuMjVyZW07IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMjE2cHgpIGFuZCAobWF4LXdpZHRoOiAxNDA3cHgpIHtcbiAgICAuY29sdW1ucy5pcy12YXJpYWJsZS5pcy01LXdpZGVzY3JlZW4tb25seSB7XG4gICAgICAtLWNvbHVtbkdhcDogMS4yNXJlbTsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDE0MDhweCkge1xuICAgIC5jb2x1bW5zLmlzLXZhcmlhYmxlLmlzLTUtZnVsbGhkIHtcbiAgICAgIC0tY29sdW1uR2FwOiAxLjI1cmVtOyB9IH1cbiAgLmNvbHVtbnMuaXMtdmFyaWFibGUuaXMtNiB7XG4gICAgLS1jb2x1bW5HYXA6IDEuNXJlbTsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5jb2x1bW5zLmlzLXZhcmlhYmxlLmlzLTYtbW9iaWxlIHtcbiAgICAgIC0tY29sdW1uR2FwOiAxLjVyZW07IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjlweCksIHByaW50IHtcbiAgICAuY29sdW1ucy5pcy12YXJpYWJsZS5pcy02LXRhYmxldCB7XG4gICAgICAtLWNvbHVtbkdhcDogMS41cmVtOyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY5cHgpIGFuZCAobWF4LXdpZHRoOiAxMDIzcHgpIHtcbiAgICAuY29sdW1ucy5pcy12YXJpYWJsZS5pcy02LXRhYmxldC1vbmx5IHtcbiAgICAgIC0tY29sdW1uR2FwOiAxLjVyZW07IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMDIzcHgpIHtcbiAgICAuY29sdW1ucy5pcy12YXJpYWJsZS5pcy02LXRvdWNoIHtcbiAgICAgIC0tY29sdW1uR2FwOiAxLjVyZW07IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAuY29sdW1ucy5pcy12YXJpYWJsZS5pcy02LWRlc2t0b3Age1xuICAgICAgLS1jb2x1bW5HYXA6IDEuNXJlbTsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjRweCkgYW5kIChtYXgtd2lkdGg6IDEyMTVweCkge1xuICAgIC5jb2x1bW5zLmlzLXZhcmlhYmxlLmlzLTYtZGVza3RvcC1vbmx5IHtcbiAgICAgIC0tY29sdW1uR2FwOiAxLjVyZW07IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMjE2cHgpIHtcbiAgICAuY29sdW1ucy5pcy12YXJpYWJsZS5pcy02LXdpZGVzY3JlZW4ge1xuICAgICAgLS1jb2x1bW5HYXA6IDEuNXJlbTsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEyMTZweCkgYW5kIChtYXgtd2lkdGg6IDE0MDdweCkge1xuICAgIC5jb2x1bW5zLmlzLXZhcmlhYmxlLmlzLTYtd2lkZXNjcmVlbi1vbmx5IHtcbiAgICAgIC0tY29sdW1uR2FwOiAxLjVyZW07IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxNDA4cHgpIHtcbiAgICAuY29sdW1ucy5pcy12YXJpYWJsZS5pcy02LWZ1bGxoZCB7XG4gICAgICAtLWNvbHVtbkdhcDogMS41cmVtOyB9IH1cbiAgLmNvbHVtbnMuaXMtdmFyaWFibGUuaXMtNyB7XG4gICAgLS1jb2x1bW5HYXA6IDEuNzVyZW07IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAuY29sdW1ucy5pcy12YXJpYWJsZS5pcy03LW1vYmlsZSB7XG4gICAgICAtLWNvbHVtbkdhcDogMS43NXJlbTsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OXB4KSwgcHJpbnQge1xuICAgIC5jb2x1bW5zLmlzLXZhcmlhYmxlLmlzLTctdGFibGV0IHtcbiAgICAgIC0tY29sdW1uR2FwOiAxLjc1cmVtOyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY5cHgpIGFuZCAobWF4LXdpZHRoOiAxMDIzcHgpIHtcbiAgICAuY29sdW1ucy5pcy12YXJpYWJsZS5pcy03LXRhYmxldC1vbmx5IHtcbiAgICAgIC0tY29sdW1uR2FwOiAxLjc1cmVtOyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTAyM3B4KSB7XG4gICAgLmNvbHVtbnMuaXMtdmFyaWFibGUuaXMtNy10b3VjaCB7XG4gICAgICAtLWNvbHVtbkdhcDogMS43NXJlbTsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgIC5jb2x1bW5zLmlzLXZhcmlhYmxlLmlzLTctZGVza3RvcCB7XG4gICAgICAtLWNvbHVtbkdhcDogMS43NXJlbTsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjRweCkgYW5kIChtYXgtd2lkdGg6IDEyMTVweCkge1xuICAgIC5jb2x1bW5zLmlzLXZhcmlhYmxlLmlzLTctZGVza3RvcC1vbmx5IHtcbiAgICAgIC0tY29sdW1uR2FwOiAxLjc1cmVtOyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTIxNnB4KSB7XG4gICAgLmNvbHVtbnMuaXMtdmFyaWFibGUuaXMtNy13aWRlc2NyZWVuIHtcbiAgICAgIC0tY29sdW1uR2FwOiAxLjc1cmVtOyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTIxNnB4KSBhbmQgKG1heC13aWR0aDogMTQwN3B4KSB7XG4gICAgLmNvbHVtbnMuaXMtdmFyaWFibGUuaXMtNy13aWRlc2NyZWVuLW9ubHkge1xuICAgICAgLS1jb2x1bW5HYXA6IDEuNzVyZW07IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxNDA4cHgpIHtcbiAgICAuY29sdW1ucy5pcy12YXJpYWJsZS5pcy03LWZ1bGxoZCB7XG4gICAgICAtLWNvbHVtbkdhcDogMS43NXJlbTsgfSB9XG4gIC5jb2x1bW5zLmlzLXZhcmlhYmxlLmlzLTgge1xuICAgIC0tY29sdW1uR2FwOiAycmVtOyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLmNvbHVtbnMuaXMtdmFyaWFibGUuaXMtOC1tb2JpbGUge1xuICAgICAgLS1jb2x1bW5HYXA6IDJyZW07IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjlweCksIHByaW50IHtcbiAgICAuY29sdW1ucy5pcy12YXJpYWJsZS5pcy04LXRhYmxldCB7XG4gICAgICAtLWNvbHVtbkdhcDogMnJlbTsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OXB4KSBhbmQgKG1heC13aWR0aDogMTAyM3B4KSB7XG4gICAgLmNvbHVtbnMuaXMtdmFyaWFibGUuaXMtOC10YWJsZXQtb25seSB7XG4gICAgICAtLWNvbHVtbkdhcDogMnJlbTsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEwMjNweCkge1xuICAgIC5jb2x1bW5zLmlzLXZhcmlhYmxlLmlzLTgtdG91Y2gge1xuICAgICAgLS1jb2x1bW5HYXA6IDJyZW07IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAuY29sdW1ucy5pcy12YXJpYWJsZS5pcy04LWRlc2t0b3Age1xuICAgICAgLS1jb2x1bW5HYXA6IDJyZW07IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI0cHgpIGFuZCAobWF4LXdpZHRoOiAxMjE1cHgpIHtcbiAgICAuY29sdW1ucy5pcy12YXJpYWJsZS5pcy04LWRlc2t0b3Atb25seSB7XG4gICAgICAtLWNvbHVtbkdhcDogMnJlbTsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEyMTZweCkge1xuICAgIC5jb2x1bW5zLmlzLXZhcmlhYmxlLmlzLTgtd2lkZXNjcmVlbiB7XG4gICAgICAtLWNvbHVtbkdhcDogMnJlbTsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEyMTZweCkgYW5kIChtYXgtd2lkdGg6IDE0MDdweCkge1xuICAgIC5jb2x1bW5zLmlzLXZhcmlhYmxlLmlzLTgtd2lkZXNjcmVlbi1vbmx5IHtcbiAgICAgIC0tY29sdW1uR2FwOiAycmVtOyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTQwOHB4KSB7XG4gICAgLmNvbHVtbnMuaXMtdmFyaWFibGUuaXMtOC1mdWxsaGQge1xuICAgICAgLS1jb2x1bW5HYXA6IDJyZW07IH0gfVxuXG4udGlsZSB7XG4gIGFsaWduLWl0ZW1zOiBzdHJldGNoO1xuICBkaXNwbGF5OiBibG9jaztcbiAgZmxleC1iYXNpczogMDtcbiAgZmxleC1ncm93OiAxO1xuICBmbGV4LXNocmluazogMTtcbiAgbWluLWhlaWdodDogbWluLWNvbnRlbnQ7IH1cbiAgLnRpbGUuaXMtYW5jZXN0b3Ige1xuICAgIG1hcmdpbi1sZWZ0OiAtMC43NXJlbTtcbiAgICBtYXJnaW4tcmlnaHQ6IC0wLjc1cmVtO1xuICAgIG1hcmdpbi10b3A6IC0wLjc1cmVtOyB9XG4gICAgLnRpbGUuaXMtYW5jZXN0b3I6bGFzdC1jaGlsZCB7XG4gICAgICBtYXJnaW4tYm90dG9tOiAtMC43NXJlbTsgfVxuICAgIC50aWxlLmlzLWFuY2VzdG9yOm5vdCg6bGFzdC1jaGlsZCkge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMC43NXJlbTsgfVxuICAudGlsZS5pcy1jaGlsZCB7XG4gICAgbWFyZ2luOiAwICFpbXBvcnRhbnQ7IH1cbiAgLnRpbGUuaXMtcGFyZW50IHtcbiAgICBwYWRkaW5nOiAwLjc1cmVtOyB9XG4gIC50aWxlLmlzLXZlcnRpY2FsIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyB9XG4gICAgLnRpbGUuaXMtdmVydGljYWwgPiAudGlsZS5pcy1jaGlsZDpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDEuNXJlbSAhaW1wb3J0YW50OyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OXB4KSwgcHJpbnQge1xuICAgIC50aWxlOm5vdCguaXMtY2hpbGQpIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7IH1cbiAgICAudGlsZS5pcy0xIHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogOC4zMzMzMyU7IH1cbiAgICAudGlsZS5pcy0yIHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogMTYuNjY2NjclOyB9XG4gICAgLnRpbGUuaXMtMyB7XG4gICAgICBmbGV4OiBub25lO1xuICAgICAgd2lkdGg6IDI1JTsgfVxuICAgIC50aWxlLmlzLTQge1xuICAgICAgZmxleDogbm9uZTtcbiAgICAgIHdpZHRoOiAzMy4zMzMzMyU7IH1cbiAgICAudGlsZS5pcy01IHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogNDEuNjY2NjclOyB9XG4gICAgLnRpbGUuaXMtNiB7XG4gICAgICBmbGV4OiBub25lO1xuICAgICAgd2lkdGg6IDUwJTsgfVxuICAgIC50aWxlLmlzLTcge1xuICAgICAgZmxleDogbm9uZTtcbiAgICAgIHdpZHRoOiA1OC4zMzMzMyU7IH1cbiAgICAudGlsZS5pcy04IHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogNjYuNjY2NjclOyB9XG4gICAgLnRpbGUuaXMtOSB7XG4gICAgICBmbGV4OiBub25lO1xuICAgICAgd2lkdGg6IDc1JTsgfVxuICAgIC50aWxlLmlzLTEwIHtcbiAgICAgIGZsZXg6IG5vbmU7XG4gICAgICB3aWR0aDogODMuMzMzMzMlOyB9XG4gICAgLnRpbGUuaXMtMTEge1xuICAgICAgZmxleDogbm9uZTtcbiAgICAgIHdpZHRoOiA5MS42NjY2NyU7IH1cbiAgICAudGlsZS5pcy0xMiB7XG4gICAgICBmbGV4OiBub25lO1xuICAgICAgd2lkdGg6IDEwMCU7IH0gfVxuXG4uaGVybyB7XG4gIGFsaWduLWl0ZW1zOiBzdHJldGNoO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47IH1cbiAgLmhlcm8gLm5hdmJhciB7XG4gICAgYmFja2dyb3VuZDogbm9uZTsgfVxuICAuaGVybyAudGFicyB1bCB7XG4gICAgYm9yZGVyLWJvdHRvbTogbm9uZTsgfVxuICAuaGVyby5pcy13aGl0ZSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgY29sb3I6ICMwYTBhMGE7IH1cbiAgICAuaGVyby5pcy13aGl0ZSBhOm5vdCguYnV0dG9uKTpub3QoLmRyb3Bkb3duLWl0ZW0pOm5vdCgudGFnKTpub3QoLnBhZ2luYXRpb24tbGluay5pcy1jdXJyZW50KSxcbiAgICAuaGVyby5pcy13aGl0ZSBzdHJvbmcge1xuICAgICAgY29sb3I6IGluaGVyaXQ7IH1cbiAgICAuaGVyby5pcy13aGl0ZSAudGl0bGUge1xuICAgICAgY29sb3I6ICMwYTBhMGE7IH1cbiAgICAuaGVyby5pcy13aGl0ZSAuc3VidGl0bGUge1xuICAgICAgY29sb3I6IHJnYmEoMTAsIDEwLCAxMCwgMC45KTsgfVxuICAgICAgLmhlcm8uaXMtd2hpdGUgLnN1YnRpdGxlIGE6bm90KC5idXR0b24pLFxuICAgICAgLmhlcm8uaXMtd2hpdGUgLnN1YnRpdGxlIHN0cm9uZyB7XG4gICAgICAgIGNvbG9yOiAjMGEwYTBhOyB9XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTAyM3B4KSB7XG4gICAgICAuaGVyby5pcy13aGl0ZSAubmF2YmFyLW1lbnUge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsgfSB9XG4gICAgLmhlcm8uaXMtd2hpdGUgLm5hdmJhci1pdGVtLFxuICAgIC5oZXJvLmlzLXdoaXRlIC5uYXZiYXItbGluayB7XG4gICAgICBjb2xvcjogcmdiYSgxMCwgMTAsIDEwLCAwLjcpOyB9XG4gICAgLmhlcm8uaXMtd2hpdGUgYS5uYXZiYXItaXRlbTpob3ZlciwgLmhlcm8uaXMtd2hpdGUgYS5uYXZiYXItaXRlbS5pcy1hY3RpdmUsXG4gICAgLmhlcm8uaXMtd2hpdGUgLm5hdmJhci1saW5rOmhvdmVyLFxuICAgIC5oZXJvLmlzLXdoaXRlIC5uYXZiYXItbGluay5pcy1hY3RpdmUge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2YyZjJmMjtcbiAgICAgIGNvbG9yOiAjMGEwYTBhOyB9XG4gICAgLmhlcm8uaXMtd2hpdGUgLnRhYnMgYSB7XG4gICAgICBjb2xvcjogIzBhMGEwYTtcbiAgICAgIG9wYWNpdHk6IDAuOTsgfVxuICAgICAgLmhlcm8uaXMtd2hpdGUgLnRhYnMgYTpob3ZlciB7XG4gICAgICAgIG9wYWNpdHk6IDE7IH1cbiAgICAuaGVyby5pcy13aGl0ZSAudGFicyBsaS5pcy1hY3RpdmUgYSB7XG4gICAgICBvcGFjaXR5OiAxOyB9XG4gICAgLmhlcm8uaXMtd2hpdGUgLnRhYnMuaXMtYm94ZWQgYSwgLmhlcm8uaXMtd2hpdGUgLnRhYnMuaXMtdG9nZ2xlIGEge1xuICAgICAgY29sb3I6ICMwYTBhMGE7IH1cbiAgICAgIC5oZXJvLmlzLXdoaXRlIC50YWJzLmlzLWJveGVkIGE6aG92ZXIsIC5oZXJvLmlzLXdoaXRlIC50YWJzLmlzLXRvZ2dsZSBhOmhvdmVyIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMCwgMTAsIDEwLCAwLjEpOyB9XG4gICAgLmhlcm8uaXMtd2hpdGUgLnRhYnMuaXMtYm94ZWQgbGkuaXMtYWN0aXZlIGEsIC5oZXJvLmlzLXdoaXRlIC50YWJzLmlzLWJveGVkIGxpLmlzLWFjdGl2ZSBhOmhvdmVyLCAuaGVyby5pcy13aGl0ZSAudGFicy5pcy10b2dnbGUgbGkuaXMtYWN0aXZlIGEsIC5oZXJvLmlzLXdoaXRlIC50YWJzLmlzLXRvZ2dsZSBsaS5pcy1hY3RpdmUgYTpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMGEwYTBhO1xuICAgICAgYm9yZGVyLWNvbG9yOiAjMGEwYTBhO1xuICAgICAgY29sb3I6IHdoaXRlOyB9XG4gICAgLmhlcm8uaXMtd2hpdGUuaXMtYm9sZCB7XG4gICAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoMTQxZGVnLCAjZTZlNmU2IDAlLCB3aGl0ZSA3MSUsIHdoaXRlIDEwMCUpOyB9XG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgICAuaGVyby5pcy13aGl0ZS5pcy1ib2xkIC5uYXZiYXItbWVudSB7XG4gICAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KDE0MWRlZywgI2U2ZTZlNiAwJSwgd2hpdGUgNzElLCB3aGl0ZSAxMDAlKTsgfSB9XG4gIC5oZXJvLmlzLWJsYWNrIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMGEwYTBhO1xuICAgIGNvbG9yOiB3aGl0ZTsgfVxuICAgIC5oZXJvLmlzLWJsYWNrIGE6bm90KC5idXR0b24pOm5vdCguZHJvcGRvd24taXRlbSk6bm90KC50YWcpOm5vdCgucGFnaW5hdGlvbi1saW5rLmlzLWN1cnJlbnQpLFxuICAgIC5oZXJvLmlzLWJsYWNrIHN0cm9uZyB7XG4gICAgICBjb2xvcjogaW5oZXJpdDsgfVxuICAgIC5oZXJvLmlzLWJsYWNrIC50aXRsZSB7XG4gICAgICBjb2xvcjogd2hpdGU7IH1cbiAgICAuaGVyby5pcy1ibGFjayAuc3VidGl0bGUge1xuICAgICAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC45KTsgfVxuICAgICAgLmhlcm8uaXMtYmxhY2sgLnN1YnRpdGxlIGE6bm90KC5idXR0b24pLFxuICAgICAgLmhlcm8uaXMtYmxhY2sgLnN1YnRpdGxlIHN0cm9uZyB7XG4gICAgICAgIGNvbG9yOiB3aGl0ZTsgfVxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEwMjNweCkge1xuICAgICAgLmhlcm8uaXMtYmxhY2sgLm5hdmJhci1tZW51IHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzBhMGEwYTsgfSB9XG4gICAgLmhlcm8uaXMtYmxhY2sgLm5hdmJhci1pdGVtLFxuICAgIC5oZXJvLmlzLWJsYWNrIC5uYXZiYXItbGluayB7XG4gICAgICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjcpOyB9XG4gICAgLmhlcm8uaXMtYmxhY2sgYS5uYXZiYXItaXRlbTpob3ZlciwgLmhlcm8uaXMtYmxhY2sgYS5uYXZiYXItaXRlbS5pcy1hY3RpdmUsXG4gICAgLmhlcm8uaXMtYmxhY2sgLm5hdmJhci1saW5rOmhvdmVyLFxuICAgIC5oZXJvLmlzLWJsYWNrIC5uYXZiYXItbGluay5pcy1hY3RpdmUge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XG4gICAgICBjb2xvcjogd2hpdGU7IH1cbiAgICAuaGVyby5pcy1ibGFjayAudGFicyBhIHtcbiAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgIG9wYWNpdHk6IDAuOTsgfVxuICAgICAgLmhlcm8uaXMtYmxhY2sgLnRhYnMgYTpob3ZlciB7XG4gICAgICAgIG9wYWNpdHk6IDE7IH1cbiAgICAuaGVyby5pcy1ibGFjayAudGFicyBsaS5pcy1hY3RpdmUgYSB7XG4gICAgICBvcGFjaXR5OiAxOyB9XG4gICAgLmhlcm8uaXMtYmxhY2sgLnRhYnMuaXMtYm94ZWQgYSwgLmhlcm8uaXMtYmxhY2sgLnRhYnMuaXMtdG9nZ2xlIGEge1xuICAgICAgY29sb3I6IHdoaXRlOyB9XG4gICAgICAuaGVyby5pcy1ibGFjayAudGFicy5pcy1ib3hlZCBhOmhvdmVyLCAuaGVyby5pcy1ibGFjayAudGFicy5pcy10b2dnbGUgYTpob3ZlciB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTAsIDEwLCAxMCwgMC4xKTsgfVxuICAgIC5oZXJvLmlzLWJsYWNrIC50YWJzLmlzLWJveGVkIGxpLmlzLWFjdGl2ZSBhLCAuaGVyby5pcy1ibGFjayAudGFicy5pcy1ib3hlZCBsaS5pcy1hY3RpdmUgYTpob3ZlciwgLmhlcm8uaXMtYmxhY2sgLnRhYnMuaXMtdG9nZ2xlIGxpLmlzLWFjdGl2ZSBhLCAuaGVyby5pcy1ibGFjayAudGFicy5pcy10b2dnbGUgbGkuaXMtYWN0aXZlIGE6aG92ZXIge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgICBib3JkZXItY29sb3I6IHdoaXRlO1xuICAgICAgY29sb3I6ICMwYTBhMGE7IH1cbiAgICAuaGVyby5pcy1ibGFjay5pcy1ib2xkIHtcbiAgICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCgxNDFkZWcsIGJsYWNrIDAlLCAjMGEwYTBhIDcxJSwgIzE4MTYxNiAxMDAlKTsgfVxuICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgICAgLmhlcm8uaXMtYmxhY2suaXMtYm9sZCAubmF2YmFyLW1lbnUge1xuICAgICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCgxNDFkZWcsIGJsYWNrIDAlLCAjMGEwYTBhIDcxJSwgIzE4MTYxNiAxMDAlKTsgfSB9XG4gIC5oZXJvLmlzLWxpZ2h0IHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZXNtb2tlO1xuICAgIGNvbG9yOiAjMzYzNjM2OyB9XG4gICAgLmhlcm8uaXMtbGlnaHQgYTpub3QoLmJ1dHRvbik6bm90KC5kcm9wZG93bi1pdGVtKTpub3QoLnRhZyk6bm90KC5wYWdpbmF0aW9uLWxpbmsuaXMtY3VycmVudCksXG4gICAgLmhlcm8uaXMtbGlnaHQgc3Ryb25nIHtcbiAgICAgIGNvbG9yOiBpbmhlcml0OyB9XG4gICAgLmhlcm8uaXMtbGlnaHQgLnRpdGxlIHtcbiAgICAgIGNvbG9yOiAjMzYzNjM2OyB9XG4gICAgLmhlcm8uaXMtbGlnaHQgLnN1YnRpdGxlIHtcbiAgICAgIGNvbG9yOiByZ2JhKDU0LCA1NCwgNTQsIDAuOSk7IH1cbiAgICAgIC5oZXJvLmlzLWxpZ2h0IC5zdWJ0aXRsZSBhOm5vdCguYnV0dG9uKSxcbiAgICAgIC5oZXJvLmlzLWxpZ2h0IC5zdWJ0aXRsZSBzdHJvbmcge1xuICAgICAgICBjb2xvcjogIzM2MzYzNjsgfVxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEwMjNweCkge1xuICAgICAgLmhlcm8uaXMtbGlnaHQgLm5hdmJhci1tZW51IHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGVzbW9rZTsgfSB9XG4gICAgLmhlcm8uaXMtbGlnaHQgLm5hdmJhci1pdGVtLFxuICAgIC5oZXJvLmlzLWxpZ2h0IC5uYXZiYXItbGluayB7XG4gICAgICBjb2xvcjogcmdiYSg1NCwgNTQsIDU0LCAwLjcpOyB9XG4gICAgLmhlcm8uaXMtbGlnaHQgYS5uYXZiYXItaXRlbTpob3ZlciwgLmhlcm8uaXMtbGlnaHQgYS5uYXZiYXItaXRlbS5pcy1hY3RpdmUsXG4gICAgLmhlcm8uaXMtbGlnaHQgLm5hdmJhci1saW5rOmhvdmVyLFxuICAgIC5oZXJvLmlzLWxpZ2h0IC5uYXZiYXItbGluay5pcy1hY3RpdmUge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2U4ZThlODtcbiAgICAgIGNvbG9yOiAjMzYzNjM2OyB9XG4gICAgLmhlcm8uaXMtbGlnaHQgLnRhYnMgYSB7XG4gICAgICBjb2xvcjogIzM2MzYzNjtcbiAgICAgIG9wYWNpdHk6IDAuOTsgfVxuICAgICAgLmhlcm8uaXMtbGlnaHQgLnRhYnMgYTpob3ZlciB7XG4gICAgICAgIG9wYWNpdHk6IDE7IH1cbiAgICAuaGVyby5pcy1saWdodCAudGFicyBsaS5pcy1hY3RpdmUgYSB7XG4gICAgICBvcGFjaXR5OiAxOyB9XG4gICAgLmhlcm8uaXMtbGlnaHQgLnRhYnMuaXMtYm94ZWQgYSwgLmhlcm8uaXMtbGlnaHQgLnRhYnMuaXMtdG9nZ2xlIGEge1xuICAgICAgY29sb3I6ICMzNjM2MzY7IH1cbiAgICAgIC5oZXJvLmlzLWxpZ2h0IC50YWJzLmlzLWJveGVkIGE6aG92ZXIsIC5oZXJvLmlzLWxpZ2h0IC50YWJzLmlzLXRvZ2dsZSBhOmhvdmVyIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMCwgMTAsIDEwLCAwLjEpOyB9XG4gICAgLmhlcm8uaXMtbGlnaHQgLnRhYnMuaXMtYm94ZWQgbGkuaXMtYWN0aXZlIGEsIC5oZXJvLmlzLWxpZ2h0IC50YWJzLmlzLWJveGVkIGxpLmlzLWFjdGl2ZSBhOmhvdmVyLCAuaGVyby5pcy1saWdodCAudGFicy5pcy10b2dnbGUgbGkuaXMtYWN0aXZlIGEsIC5oZXJvLmlzLWxpZ2h0IC50YWJzLmlzLXRvZ2dsZSBsaS5pcy1hY3RpdmUgYTpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzYzNjM2O1xuICAgICAgYm9yZGVyLWNvbG9yOiAjMzYzNjM2O1xuICAgICAgY29sb3I6IHdoaXRlc21va2U7IH1cbiAgICAuaGVyby5pcy1saWdodC5pcy1ib2xkIHtcbiAgICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCgxNDFkZWcsICNkZmQ4ZDkgMCUsIHdoaXRlc21va2UgNzElLCB3aGl0ZSAxMDAlKTsgfVxuICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgICAgLmhlcm8uaXMtbGlnaHQuaXMtYm9sZCAubmF2YmFyLW1lbnUge1xuICAgICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCgxNDFkZWcsICNkZmQ4ZDkgMCUsIHdoaXRlc21va2UgNzElLCB3aGl0ZSAxMDAlKTsgfSB9XG4gIC5oZXJvLmlzLWRhcmsge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMzNjM2MzY7XG4gICAgY29sb3I6IHdoaXRlc21va2U7IH1cbiAgICAuaGVyby5pcy1kYXJrIGE6bm90KC5idXR0b24pOm5vdCguZHJvcGRvd24taXRlbSk6bm90KC50YWcpOm5vdCgucGFnaW5hdGlvbi1saW5rLmlzLWN1cnJlbnQpLFxuICAgIC5oZXJvLmlzLWRhcmsgc3Ryb25nIHtcbiAgICAgIGNvbG9yOiBpbmhlcml0OyB9XG4gICAgLmhlcm8uaXMtZGFyayAudGl0bGUge1xuICAgICAgY29sb3I6IHdoaXRlc21va2U7IH1cbiAgICAuaGVyby5pcy1kYXJrIC5zdWJ0aXRsZSB7XG4gICAgICBjb2xvcjogcmdiYSgyNDUsIDI0NSwgMjQ1LCAwLjkpOyB9XG4gICAgICAuaGVyby5pcy1kYXJrIC5zdWJ0aXRsZSBhOm5vdCguYnV0dG9uKSxcbiAgICAgIC5oZXJvLmlzLWRhcmsgLnN1YnRpdGxlIHN0cm9uZyB7XG4gICAgICAgIGNvbG9yOiB3aGl0ZXNtb2tlOyB9XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTAyM3B4KSB7XG4gICAgICAuaGVyby5pcy1kYXJrIC5uYXZiYXItbWVudSB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMzNjM2MzY7IH0gfVxuICAgIC5oZXJvLmlzLWRhcmsgLm5hdmJhci1pdGVtLFxuICAgIC5oZXJvLmlzLWRhcmsgLm5hdmJhci1saW5rIHtcbiAgICAgIGNvbG9yOiByZ2JhKDI0NSwgMjQ1LCAyNDUsIDAuNyk7IH1cbiAgICAuaGVyby5pcy1kYXJrIGEubmF2YmFyLWl0ZW06aG92ZXIsIC5oZXJvLmlzLWRhcmsgYS5uYXZiYXItaXRlbS5pcy1hY3RpdmUsXG4gICAgLmhlcm8uaXMtZGFyayAubmF2YmFyLWxpbms6aG92ZXIsXG4gICAgLmhlcm8uaXMtZGFyayAubmF2YmFyLWxpbmsuaXMtYWN0aXZlIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICMyOTI5Mjk7XG4gICAgICBjb2xvcjogd2hpdGVzbW9rZTsgfVxuICAgIC5oZXJvLmlzLWRhcmsgLnRhYnMgYSB7XG4gICAgICBjb2xvcjogd2hpdGVzbW9rZTtcbiAgICAgIG9wYWNpdHk6IDAuOTsgfVxuICAgICAgLmhlcm8uaXMtZGFyayAudGFicyBhOmhvdmVyIHtcbiAgICAgICAgb3BhY2l0eTogMTsgfVxuICAgIC5oZXJvLmlzLWRhcmsgLnRhYnMgbGkuaXMtYWN0aXZlIGEge1xuICAgICAgb3BhY2l0eTogMTsgfVxuICAgIC5oZXJvLmlzLWRhcmsgLnRhYnMuaXMtYm94ZWQgYSwgLmhlcm8uaXMtZGFyayAudGFicy5pcy10b2dnbGUgYSB7XG4gICAgICBjb2xvcjogd2hpdGVzbW9rZTsgfVxuICAgICAgLmhlcm8uaXMtZGFyayAudGFicy5pcy1ib3hlZCBhOmhvdmVyLCAuaGVyby5pcy1kYXJrIC50YWJzLmlzLXRvZ2dsZSBhOmhvdmVyIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMCwgMTAsIDEwLCAwLjEpOyB9XG4gICAgLmhlcm8uaXMtZGFyayAudGFicy5pcy1ib3hlZCBsaS5pcy1hY3RpdmUgYSwgLmhlcm8uaXMtZGFyayAudGFicy5pcy1ib3hlZCBsaS5pcy1hY3RpdmUgYTpob3ZlciwgLmhlcm8uaXMtZGFyayAudGFicy5pcy10b2dnbGUgbGkuaXMtYWN0aXZlIGEsIC5oZXJvLmlzLWRhcmsgLnRhYnMuaXMtdG9nZ2xlIGxpLmlzLWFjdGl2ZSBhOmhvdmVyIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlc21va2U7XG4gICAgICBib3JkZXItY29sb3I6IHdoaXRlc21va2U7XG4gICAgICBjb2xvcjogIzM2MzYzNjsgfVxuICAgIC5oZXJvLmlzLWRhcmsuaXMtYm9sZCB7XG4gICAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoMTQxZGVnLCAjMWYxOTFhIDAlLCAjMzYzNjM2IDcxJSwgIzQ2NDAzZiAxMDAlKTsgfVxuICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgICAgLmhlcm8uaXMtZGFyay5pcy1ib2xkIC5uYXZiYXItbWVudSB7XG4gICAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KDE0MWRlZywgIzFmMTkxYSAwJSwgIzM2MzYzNiA3MSUsICM0NjQwM2YgMTAwJSk7IH0gfVxuICAuaGVyby5pcy1wcmltYXJ5IHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDBkMWIyO1xuICAgIGNvbG9yOiAjZmZmOyB9XG4gICAgLmhlcm8uaXMtcHJpbWFyeSBhOm5vdCguYnV0dG9uKTpub3QoLmRyb3Bkb3duLWl0ZW0pOm5vdCgudGFnKTpub3QoLnBhZ2luYXRpb24tbGluay5pcy1jdXJyZW50KSxcbiAgICAuaGVyby5pcy1wcmltYXJ5IHN0cm9uZyB7XG4gICAgICBjb2xvcjogaW5oZXJpdDsgfVxuICAgIC5oZXJvLmlzLXByaW1hcnkgLnRpdGxlIHtcbiAgICAgIGNvbG9yOiAjZmZmOyB9XG4gICAgLmhlcm8uaXMtcHJpbWFyeSAuc3VidGl0bGUge1xuICAgICAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC45KTsgfVxuICAgICAgLmhlcm8uaXMtcHJpbWFyeSAuc3VidGl0bGUgYTpub3QoLmJ1dHRvbiksXG4gICAgICAuaGVyby5pcy1wcmltYXJ5IC5zdWJ0aXRsZSBzdHJvbmcge1xuICAgICAgICBjb2xvcjogI2ZmZjsgfVxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEwMjNweCkge1xuICAgICAgLmhlcm8uaXMtcHJpbWFyeSAubmF2YmFyLW1lbnUge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDBkMWIyOyB9IH1cbiAgICAuaGVyby5pcy1wcmltYXJ5IC5uYXZiYXItaXRlbSxcbiAgICAuaGVyby5pcy1wcmltYXJ5IC5uYXZiYXItbGluayB7XG4gICAgICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjcpOyB9XG4gICAgLmhlcm8uaXMtcHJpbWFyeSBhLm5hdmJhci1pdGVtOmhvdmVyLCAuaGVyby5pcy1wcmltYXJ5IGEubmF2YmFyLWl0ZW0uaXMtYWN0aXZlLFxuICAgIC5oZXJvLmlzLXByaW1hcnkgLm5hdmJhci1saW5rOmhvdmVyLFxuICAgIC5oZXJvLmlzLXByaW1hcnkgLm5hdmJhci1saW5rLmlzLWFjdGl2ZSB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDBiODljO1xuICAgICAgY29sb3I6ICNmZmY7IH1cbiAgICAuaGVyby5pcy1wcmltYXJ5IC50YWJzIGEge1xuICAgICAgY29sb3I6ICNmZmY7XG4gICAgICBvcGFjaXR5OiAwLjk7IH1cbiAgICAgIC5oZXJvLmlzLXByaW1hcnkgLnRhYnMgYTpob3ZlciB7XG4gICAgICAgIG9wYWNpdHk6IDE7IH1cbiAgICAuaGVyby5pcy1wcmltYXJ5IC50YWJzIGxpLmlzLWFjdGl2ZSBhIHtcbiAgICAgIG9wYWNpdHk6IDE7IH1cbiAgICAuaGVyby5pcy1wcmltYXJ5IC50YWJzLmlzLWJveGVkIGEsIC5oZXJvLmlzLXByaW1hcnkgLnRhYnMuaXMtdG9nZ2xlIGEge1xuICAgICAgY29sb3I6ICNmZmY7IH1cbiAgICAgIC5oZXJvLmlzLXByaW1hcnkgLnRhYnMuaXMtYm94ZWQgYTpob3ZlciwgLmhlcm8uaXMtcHJpbWFyeSAudGFicy5pcy10b2dnbGUgYTpob3ZlciB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTAsIDEwLCAxMCwgMC4xKTsgfVxuICAgIC5oZXJvLmlzLXByaW1hcnkgLnRhYnMuaXMtYm94ZWQgbGkuaXMtYWN0aXZlIGEsIC5oZXJvLmlzLXByaW1hcnkgLnRhYnMuaXMtYm94ZWQgbGkuaXMtYWN0aXZlIGE6aG92ZXIsIC5oZXJvLmlzLXByaW1hcnkgLnRhYnMuaXMtdG9nZ2xlIGxpLmlzLWFjdGl2ZSBhLCAuaGVyby5pcy1wcmltYXJ5IC50YWJzLmlzLXRvZ2dsZSBsaS5pcy1hY3RpdmUgYTpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgICAgYm9yZGVyLWNvbG9yOiAjZmZmO1xuICAgICAgY29sb3I6ICMwMGQxYjI7IH1cbiAgICAuaGVyby5pcy1wcmltYXJ5LmlzLWJvbGQge1xuICAgICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KDE0MWRlZywgIzAwOWU2YyAwJSwgIzAwZDFiMiA3MSUsICMwMGU3ZWIgMTAwJSk7IH1cbiAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICAgIC5oZXJvLmlzLXByaW1hcnkuaXMtYm9sZCAubmF2YmFyLW1lbnUge1xuICAgICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCgxNDFkZWcsICMwMDllNmMgMCUsICMwMGQxYjIgNzElLCAjMDBlN2ViIDEwMCUpOyB9IH1cbiAgLmhlcm8uaXMtbGluayB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzMyNzNkYztcbiAgICBjb2xvcjogI2ZmZjsgfVxuICAgIC5oZXJvLmlzLWxpbmsgYTpub3QoLmJ1dHRvbik6bm90KC5kcm9wZG93bi1pdGVtKTpub3QoLnRhZyk6bm90KC5wYWdpbmF0aW9uLWxpbmsuaXMtY3VycmVudCksXG4gICAgLmhlcm8uaXMtbGluayBzdHJvbmcge1xuICAgICAgY29sb3I6IGluaGVyaXQ7IH1cbiAgICAuaGVyby5pcy1saW5rIC50aXRsZSB7XG4gICAgICBjb2xvcjogI2ZmZjsgfVxuICAgIC5oZXJvLmlzLWxpbmsgLnN1YnRpdGxlIHtcbiAgICAgIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOSk7IH1cbiAgICAgIC5oZXJvLmlzLWxpbmsgLnN1YnRpdGxlIGE6bm90KC5idXR0b24pLFxuICAgICAgLmhlcm8uaXMtbGluayAuc3VidGl0bGUgc3Ryb25nIHtcbiAgICAgICAgY29sb3I6ICNmZmY7IH1cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMDIzcHgpIHtcbiAgICAgIC5oZXJvLmlzLWxpbmsgLm5hdmJhci1tZW51IHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzMyNzNkYzsgfSB9XG4gICAgLmhlcm8uaXMtbGluayAubmF2YmFyLWl0ZW0sXG4gICAgLmhlcm8uaXMtbGluayAubmF2YmFyLWxpbmsge1xuICAgICAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC43KTsgfVxuICAgIC5oZXJvLmlzLWxpbmsgYS5uYXZiYXItaXRlbTpob3ZlciwgLmhlcm8uaXMtbGluayBhLm5hdmJhci1pdGVtLmlzLWFjdGl2ZSxcbiAgICAuaGVyby5pcy1saW5rIC5uYXZiYXItbGluazpob3ZlcixcbiAgICAuaGVyby5pcy1saW5rIC5uYXZiYXItbGluay5pcy1hY3RpdmUge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzIzNjZkMTtcbiAgICAgIGNvbG9yOiAjZmZmOyB9XG4gICAgLmhlcm8uaXMtbGluayAudGFicyBhIHtcbiAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgb3BhY2l0eTogMC45OyB9XG4gICAgICAuaGVyby5pcy1saW5rIC50YWJzIGE6aG92ZXIge1xuICAgICAgICBvcGFjaXR5OiAxOyB9XG4gICAgLmhlcm8uaXMtbGluayAudGFicyBsaS5pcy1hY3RpdmUgYSB7XG4gICAgICBvcGFjaXR5OiAxOyB9XG4gICAgLmhlcm8uaXMtbGluayAudGFicy5pcy1ib3hlZCBhLCAuaGVyby5pcy1saW5rIC50YWJzLmlzLXRvZ2dsZSBhIHtcbiAgICAgIGNvbG9yOiAjZmZmOyB9XG4gICAgICAuaGVyby5pcy1saW5rIC50YWJzLmlzLWJveGVkIGE6aG92ZXIsIC5oZXJvLmlzLWxpbmsgLnRhYnMuaXMtdG9nZ2xlIGE6aG92ZXIge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDEwLCAxMCwgMTAsIDAuMSk7IH1cbiAgICAuaGVyby5pcy1saW5rIC50YWJzLmlzLWJveGVkIGxpLmlzLWFjdGl2ZSBhLCAuaGVyby5pcy1saW5rIC50YWJzLmlzLWJveGVkIGxpLmlzLWFjdGl2ZSBhOmhvdmVyLCAuaGVyby5pcy1saW5rIC50YWJzLmlzLXRvZ2dsZSBsaS5pcy1hY3RpdmUgYSwgLmhlcm8uaXMtbGluayAudGFicy5pcy10b2dnbGUgbGkuaXMtYWN0aXZlIGE6aG92ZXIge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICAgIGJvcmRlci1jb2xvcjogI2ZmZjtcbiAgICAgIGNvbG9yOiAjMzI3M2RjOyB9XG4gICAgLmhlcm8uaXMtbGluay5pcy1ib2xkIHtcbiAgICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCgxNDFkZWcsICMxNTc3YzYgMCUsICMzMjczZGMgNzElLCAjNDM2NmU1IDEwMCUpOyB9XG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgICAuaGVyby5pcy1saW5rLmlzLWJvbGQgLm5hdmJhci1tZW51IHtcbiAgICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoMTQxZGVnLCAjMTU3N2M2IDAlLCAjMzI3M2RjIDcxJSwgIzQzNjZlNSAxMDAlKTsgfSB9XG4gIC5oZXJvLmlzLWluZm8ge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMyMDljZWU7XG4gICAgY29sb3I6ICNmZmY7IH1cbiAgICAuaGVyby5pcy1pbmZvIGE6bm90KC5idXR0b24pOm5vdCguZHJvcGRvd24taXRlbSk6bm90KC50YWcpOm5vdCgucGFnaW5hdGlvbi1saW5rLmlzLWN1cnJlbnQpLFxuICAgIC5oZXJvLmlzLWluZm8gc3Ryb25nIHtcbiAgICAgIGNvbG9yOiBpbmhlcml0OyB9XG4gICAgLmhlcm8uaXMtaW5mbyAudGl0bGUge1xuICAgICAgY29sb3I6ICNmZmY7IH1cbiAgICAuaGVyby5pcy1pbmZvIC5zdWJ0aXRsZSB7XG4gICAgICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjkpOyB9XG4gICAgICAuaGVyby5pcy1pbmZvIC5zdWJ0aXRsZSBhOm5vdCguYnV0dG9uKSxcbiAgICAgIC5oZXJvLmlzLWluZm8gLnN1YnRpdGxlIHN0cm9uZyB7XG4gICAgICAgIGNvbG9yOiAjZmZmOyB9XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTAyM3B4KSB7XG4gICAgICAuaGVyby5pcy1pbmZvIC5uYXZiYXItbWVudSB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMyMDljZWU7IH0gfVxuICAgIC5oZXJvLmlzLWluZm8gLm5hdmJhci1pdGVtLFxuICAgIC5oZXJvLmlzLWluZm8gLm5hdmJhci1saW5rIHtcbiAgICAgIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNyk7IH1cbiAgICAuaGVyby5pcy1pbmZvIGEubmF2YmFyLWl0ZW06aG92ZXIsIC5oZXJvLmlzLWluZm8gYS5uYXZiYXItaXRlbS5pcy1hY3RpdmUsXG4gICAgLmhlcm8uaXMtaW5mbyAubmF2YmFyLWxpbms6aG92ZXIsXG4gICAgLmhlcm8uaXMtaW5mbyAubmF2YmFyLWxpbmsuaXMtYWN0aXZlIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICMxMThmZTQ7XG4gICAgICBjb2xvcjogI2ZmZjsgfVxuICAgIC5oZXJvLmlzLWluZm8gLnRhYnMgYSB7XG4gICAgICBjb2xvcjogI2ZmZjtcbiAgICAgIG9wYWNpdHk6IDAuOTsgfVxuICAgICAgLmhlcm8uaXMtaW5mbyAudGFicyBhOmhvdmVyIHtcbiAgICAgICAgb3BhY2l0eTogMTsgfVxuICAgIC5oZXJvLmlzLWluZm8gLnRhYnMgbGkuaXMtYWN0aXZlIGEge1xuICAgICAgb3BhY2l0eTogMTsgfVxuICAgIC5oZXJvLmlzLWluZm8gLnRhYnMuaXMtYm94ZWQgYSwgLmhlcm8uaXMtaW5mbyAudGFicy5pcy10b2dnbGUgYSB7XG4gICAgICBjb2xvcjogI2ZmZjsgfVxuICAgICAgLmhlcm8uaXMtaW5mbyAudGFicy5pcy1ib3hlZCBhOmhvdmVyLCAuaGVyby5pcy1pbmZvIC50YWJzLmlzLXRvZ2dsZSBhOmhvdmVyIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMCwgMTAsIDEwLCAwLjEpOyB9XG4gICAgLmhlcm8uaXMtaW5mbyAudGFicy5pcy1ib3hlZCBsaS5pcy1hY3RpdmUgYSwgLmhlcm8uaXMtaW5mbyAudGFicy5pcy1ib3hlZCBsaS5pcy1hY3RpdmUgYTpob3ZlciwgLmhlcm8uaXMtaW5mbyAudGFicy5pcy10b2dnbGUgbGkuaXMtYWN0aXZlIGEsIC5oZXJvLmlzLWluZm8gLnRhYnMuaXMtdG9nZ2xlIGxpLmlzLWFjdGl2ZSBhOmhvdmVyIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgICBib3JkZXItY29sb3I6ICNmZmY7XG4gICAgICBjb2xvcjogIzIwOWNlZTsgfVxuICAgIC5oZXJvLmlzLWluZm8uaXMtYm9sZCB7XG4gICAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoMTQxZGVnLCAjMDRhNmQ3IDAlLCAjMjA5Y2VlIDcxJSwgIzMyODdmNSAxMDAlKTsgfVxuICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgICAgLmhlcm8uaXMtaW5mby5pcy1ib2xkIC5uYXZiYXItbWVudSB7XG4gICAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KDE0MWRlZywgIzA0YTZkNyAwJSwgIzIwOWNlZSA3MSUsICMzMjg3ZjUgMTAwJSk7IH0gfVxuICAuaGVyby5pcy1zdWNjZXNzIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjNkMTYwO1xuICAgIGNvbG9yOiAjZmZmOyB9XG4gICAgLmhlcm8uaXMtc3VjY2VzcyBhOm5vdCguYnV0dG9uKTpub3QoLmRyb3Bkb3duLWl0ZW0pOm5vdCgudGFnKTpub3QoLnBhZ2luYXRpb24tbGluay5pcy1jdXJyZW50KSxcbiAgICAuaGVyby5pcy1zdWNjZXNzIHN0cm9uZyB7XG4gICAgICBjb2xvcjogaW5oZXJpdDsgfVxuICAgIC5oZXJvLmlzLXN1Y2Nlc3MgLnRpdGxlIHtcbiAgICAgIGNvbG9yOiAjZmZmOyB9XG4gICAgLmhlcm8uaXMtc3VjY2VzcyAuc3VidGl0bGUge1xuICAgICAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC45KTsgfVxuICAgICAgLmhlcm8uaXMtc3VjY2VzcyAuc3VidGl0bGUgYTpub3QoLmJ1dHRvbiksXG4gICAgICAuaGVyby5pcy1zdWNjZXNzIC5zdWJ0aXRsZSBzdHJvbmcge1xuICAgICAgICBjb2xvcjogI2ZmZjsgfVxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEwMjNweCkge1xuICAgICAgLmhlcm8uaXMtc3VjY2VzcyAubmF2YmFyLW1lbnUge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjNkMTYwOyB9IH1cbiAgICAuaGVyby5pcy1zdWNjZXNzIC5uYXZiYXItaXRlbSxcbiAgICAuaGVyby5pcy1zdWNjZXNzIC5uYXZiYXItbGluayB7XG4gICAgICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjcpOyB9XG4gICAgLmhlcm8uaXMtc3VjY2VzcyBhLm5hdmJhci1pdGVtOmhvdmVyLCAuaGVyby5pcy1zdWNjZXNzIGEubmF2YmFyLWl0ZW0uaXMtYWN0aXZlLFxuICAgIC5oZXJvLmlzLXN1Y2Nlc3MgLm5hdmJhci1saW5rOmhvdmVyLFxuICAgIC5oZXJvLmlzLXN1Y2Nlc3MgLm5hdmJhci1saW5rLmlzLWFjdGl2ZSB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjBiYzU2O1xuICAgICAgY29sb3I6ICNmZmY7IH1cbiAgICAuaGVyby5pcy1zdWNjZXNzIC50YWJzIGEge1xuICAgICAgY29sb3I6ICNmZmY7XG4gICAgICBvcGFjaXR5OiAwLjk7IH1cbiAgICAgIC5oZXJvLmlzLXN1Y2Nlc3MgLnRhYnMgYTpob3ZlciB7XG4gICAgICAgIG9wYWNpdHk6IDE7IH1cbiAgICAuaGVyby5pcy1zdWNjZXNzIC50YWJzIGxpLmlzLWFjdGl2ZSBhIHtcbiAgICAgIG9wYWNpdHk6IDE7IH1cbiAgICAuaGVyby5pcy1zdWNjZXNzIC50YWJzLmlzLWJveGVkIGEsIC5oZXJvLmlzLXN1Y2Nlc3MgLnRhYnMuaXMtdG9nZ2xlIGEge1xuICAgICAgY29sb3I6ICNmZmY7IH1cbiAgICAgIC5oZXJvLmlzLXN1Y2Nlc3MgLnRhYnMuaXMtYm94ZWQgYTpob3ZlciwgLmhlcm8uaXMtc3VjY2VzcyAudGFicy5pcy10b2dnbGUgYTpob3ZlciB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTAsIDEwLCAxMCwgMC4xKTsgfVxuICAgIC5oZXJvLmlzLXN1Y2Nlc3MgLnRhYnMuaXMtYm94ZWQgbGkuaXMtYWN0aXZlIGEsIC5oZXJvLmlzLXN1Y2Nlc3MgLnRhYnMuaXMtYm94ZWQgbGkuaXMtYWN0aXZlIGE6aG92ZXIsIC5oZXJvLmlzLXN1Y2Nlc3MgLnRhYnMuaXMtdG9nZ2xlIGxpLmlzLWFjdGl2ZSBhLCAuaGVyby5pcy1zdWNjZXNzIC50YWJzLmlzLXRvZ2dsZSBsaS5pcy1hY3RpdmUgYTpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgICAgYm9yZGVyLWNvbG9yOiAjZmZmO1xuICAgICAgY29sb3I6ICMyM2QxNjA7IH1cbiAgICAuaGVyby5pcy1zdWNjZXNzLmlzLWJvbGQge1xuICAgICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KDE0MWRlZywgIzEyYWYyZiAwJSwgIzIzZDE2MCA3MSUsICMyY2UyOGEgMTAwJSk7IH1cbiAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICAgIC5oZXJvLmlzLXN1Y2Nlc3MuaXMtYm9sZCAubmF2YmFyLW1lbnUge1xuICAgICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCgxNDFkZWcsICMxMmFmMmYgMCUsICMyM2QxNjAgNzElLCAjMmNlMjhhIDEwMCUpOyB9IH1cbiAgLmhlcm8uaXMtd2FybmluZyB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZGQ1NztcbiAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjcpOyB9XG4gICAgLmhlcm8uaXMtd2FybmluZyBhOm5vdCguYnV0dG9uKTpub3QoLmRyb3Bkb3duLWl0ZW0pOm5vdCgudGFnKTpub3QoLnBhZ2luYXRpb24tbGluay5pcy1jdXJyZW50KSxcbiAgICAuaGVyby5pcy13YXJuaW5nIHN0cm9uZyB7XG4gICAgICBjb2xvcjogaW5oZXJpdDsgfVxuICAgIC5oZXJvLmlzLXdhcm5pbmcgLnRpdGxlIHtcbiAgICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNyk7IH1cbiAgICAuaGVyby5pcy13YXJuaW5nIC5zdWJ0aXRsZSB7XG4gICAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjkpOyB9XG4gICAgICAuaGVyby5pcy13YXJuaW5nIC5zdWJ0aXRsZSBhOm5vdCguYnV0dG9uKSxcbiAgICAgIC5oZXJvLmlzLXdhcm5pbmcgLnN1YnRpdGxlIHN0cm9uZyB7XG4gICAgICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNyk7IH1cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMDIzcHgpIHtcbiAgICAgIC5oZXJvLmlzLXdhcm5pbmcgLm5hdmJhci1tZW51IHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZGQ1NzsgfSB9XG4gICAgLmhlcm8uaXMtd2FybmluZyAubmF2YmFyLWl0ZW0sXG4gICAgLmhlcm8uaXMtd2FybmluZyAubmF2YmFyLWxpbmsge1xuICAgICAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC43KTsgfVxuICAgIC5oZXJvLmlzLXdhcm5pbmcgYS5uYXZiYXItaXRlbTpob3ZlciwgLmhlcm8uaXMtd2FybmluZyBhLm5hdmJhci1pdGVtLmlzLWFjdGl2ZSxcbiAgICAuaGVyby5pcy13YXJuaW5nIC5uYXZiYXItbGluazpob3ZlcixcbiAgICAuaGVyby5pcy13YXJuaW5nIC5uYXZiYXItbGluay5pcy1hY3RpdmUge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZDgzZDtcbiAgICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNyk7IH1cbiAgICAuaGVyby5pcy13YXJuaW5nIC50YWJzIGEge1xuICAgICAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC43KTtcbiAgICAgIG9wYWNpdHk6IDAuOTsgfVxuICAgICAgLmhlcm8uaXMtd2FybmluZyAudGFicyBhOmhvdmVyIHtcbiAgICAgICAgb3BhY2l0eTogMTsgfVxuICAgIC5oZXJvLmlzLXdhcm5pbmcgLnRhYnMgbGkuaXMtYWN0aXZlIGEge1xuICAgICAgb3BhY2l0eTogMTsgfVxuICAgIC5oZXJvLmlzLXdhcm5pbmcgLnRhYnMuaXMtYm94ZWQgYSwgLmhlcm8uaXMtd2FybmluZyAudGFicy5pcy10b2dnbGUgYSB7XG4gICAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjcpOyB9XG4gICAgICAuaGVyby5pcy13YXJuaW5nIC50YWJzLmlzLWJveGVkIGE6aG92ZXIsIC5oZXJvLmlzLXdhcm5pbmcgLnRhYnMuaXMtdG9nZ2xlIGE6aG92ZXIge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDEwLCAxMCwgMTAsIDAuMSk7IH1cbiAgICAuaGVyby5pcy13YXJuaW5nIC50YWJzLmlzLWJveGVkIGxpLmlzLWFjdGl2ZSBhLCAuaGVyby5pcy13YXJuaW5nIC50YWJzLmlzLWJveGVkIGxpLmlzLWFjdGl2ZSBhOmhvdmVyLCAuaGVyby5pcy13YXJuaW5nIC50YWJzLmlzLXRvZ2dsZSBsaS5pcy1hY3RpdmUgYSwgLmhlcm8uaXMtd2FybmluZyAudGFicy5pcy10b2dnbGUgbGkuaXMtYWN0aXZlIGE6aG92ZXIge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjcpO1xuICAgICAgYm9yZGVyLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNyk7XG4gICAgICBjb2xvcjogI2ZmZGQ1NzsgfVxuICAgIC5oZXJvLmlzLXdhcm5pbmcuaXMtYm9sZCB7XG4gICAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoMTQxZGVnLCAjZmZhZjI0IDAlLCAjZmZkZDU3IDcxJSwgI2ZmZmE3MCAxMDAlKTsgfVxuICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgICAgLmhlcm8uaXMtd2FybmluZy5pcy1ib2xkIC5uYXZiYXItbWVudSB7XG4gICAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KDE0MWRlZywgI2ZmYWYyNCAwJSwgI2ZmZGQ1NyA3MSUsICNmZmZhNzAgMTAwJSk7IH0gfVxuICAuaGVyby5pcy1kYW5nZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZjM4NjA7XG4gICAgY29sb3I6ICNmZmY7IH1cbiAgICAuaGVyby5pcy1kYW5nZXIgYTpub3QoLmJ1dHRvbik6bm90KC5kcm9wZG93bi1pdGVtKTpub3QoLnRhZyk6bm90KC5wYWdpbmF0aW9uLWxpbmsuaXMtY3VycmVudCksXG4gICAgLmhlcm8uaXMtZGFuZ2VyIHN0cm9uZyB7XG4gICAgICBjb2xvcjogaW5oZXJpdDsgfVxuICAgIC5oZXJvLmlzLWRhbmdlciAudGl0bGUge1xuICAgICAgY29sb3I6ICNmZmY7IH1cbiAgICAuaGVyby5pcy1kYW5nZXIgLnN1YnRpdGxlIHtcbiAgICAgIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOSk7IH1cbiAgICAgIC5oZXJvLmlzLWRhbmdlciAuc3VidGl0bGUgYTpub3QoLmJ1dHRvbiksXG4gICAgICAuaGVyby5pcy1kYW5nZXIgLnN1YnRpdGxlIHN0cm9uZyB7XG4gICAgICAgIGNvbG9yOiAjZmZmOyB9XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTAyM3B4KSB7XG4gICAgICAuaGVyby5pcy1kYW5nZXIgLm5hdmJhci1tZW51IHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmMzg2MDsgfSB9XG4gICAgLmhlcm8uaXMtZGFuZ2VyIC5uYXZiYXItaXRlbSxcbiAgICAuaGVyby5pcy1kYW5nZXIgLm5hdmJhci1saW5rIHtcbiAgICAgIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNyk7IH1cbiAgICAuaGVyby5pcy1kYW5nZXIgYS5uYXZiYXItaXRlbTpob3ZlciwgLmhlcm8uaXMtZGFuZ2VyIGEubmF2YmFyLWl0ZW0uaXMtYWN0aXZlLFxuICAgIC5oZXJvLmlzLWRhbmdlciAubmF2YmFyLWxpbms6aG92ZXIsXG4gICAgLmhlcm8uaXMtZGFuZ2VyIC5uYXZiYXItbGluay5pcy1hY3RpdmUge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmMWY0YjtcbiAgICAgIGNvbG9yOiAjZmZmOyB9XG4gICAgLmhlcm8uaXMtZGFuZ2VyIC50YWJzIGEge1xuICAgICAgY29sb3I6ICNmZmY7XG4gICAgICBvcGFjaXR5OiAwLjk7IH1cbiAgICAgIC5oZXJvLmlzLWRhbmdlciAudGFicyBhOmhvdmVyIHtcbiAgICAgICAgb3BhY2l0eTogMTsgfVxuICAgIC5oZXJvLmlzLWRhbmdlciAudGFicyBsaS5pcy1hY3RpdmUgYSB7XG4gICAgICBvcGFjaXR5OiAxOyB9XG4gICAgLmhlcm8uaXMtZGFuZ2VyIC50YWJzLmlzLWJveGVkIGEsIC5oZXJvLmlzLWRhbmdlciAudGFicy5pcy10b2dnbGUgYSB7XG4gICAgICBjb2xvcjogI2ZmZjsgfVxuICAgICAgLmhlcm8uaXMtZGFuZ2VyIC50YWJzLmlzLWJveGVkIGE6aG92ZXIsIC5oZXJvLmlzLWRhbmdlciAudGFicy5pcy10b2dnbGUgYTpob3ZlciB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTAsIDEwLCAxMCwgMC4xKTsgfVxuICAgIC5oZXJvLmlzLWRhbmdlciAudGFicy5pcy1ib3hlZCBsaS5pcy1hY3RpdmUgYSwgLmhlcm8uaXMtZGFuZ2VyIC50YWJzLmlzLWJveGVkIGxpLmlzLWFjdGl2ZSBhOmhvdmVyLCAuaGVyby5pcy1kYW5nZXIgLnRhYnMuaXMtdG9nZ2xlIGxpLmlzLWFjdGl2ZSBhLCAuaGVyby5pcy1kYW5nZXIgLnRhYnMuaXMtdG9nZ2xlIGxpLmlzLWFjdGl2ZSBhOmhvdmVyIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgICBib3JkZXItY29sb3I6ICNmZmY7XG4gICAgICBjb2xvcjogI2ZmMzg2MDsgfVxuICAgIC5oZXJvLmlzLWRhbmdlci5pcy1ib2xkIHtcbiAgICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCgxNDFkZWcsICNmZjA1NjEgMCUsICNmZjM4NjAgNzElLCAjZmY1MjU3IDEwMCUpOyB9XG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgICAuaGVyby5pcy1kYW5nZXIuaXMtYm9sZCAubmF2YmFyLW1lbnUge1xuICAgICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCgxNDFkZWcsICNmZjA1NjEgMCUsICNmZjM4NjAgNzElLCAjZmY1MjU3IDEwMCUpOyB9IH1cbiAgLmhlcm8uaXMtc21hbGwgLmhlcm8tYm9keSB7XG4gICAgcGFkZGluZy1ib3R0b206IDEuNXJlbTtcbiAgICBwYWRkaW5nLXRvcDogMS41cmVtOyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OXB4KSwgcHJpbnQge1xuICAgIC5oZXJvLmlzLW1lZGl1bSAuaGVyby1ib2R5IHtcbiAgICAgIHBhZGRpbmctYm90dG9tOiA5cmVtO1xuICAgICAgcGFkZGluZy10b3A6IDlyZW07IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjlweCksIHByaW50IHtcbiAgICAuaGVyby5pcy1sYXJnZSAuaGVyby1ib2R5IHtcbiAgICAgIHBhZGRpbmctYm90dG9tOiAxOHJlbTtcbiAgICAgIHBhZGRpbmctdG9wOiAxOHJlbTsgfSB9XG4gIC5oZXJvLmlzLWhhbGZoZWlnaHQgLmhlcm8tYm9keSwgLmhlcm8uaXMtZnVsbGhlaWdodCAuaGVyby1ib2R5LCAuaGVyby5pcy1mdWxsaGVpZ2h0LXdpdGgtbmF2YmFyIC5oZXJvLWJvZHkge1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgZGlzcGxheTogZmxleDsgfVxuICAgIC5oZXJvLmlzLWhhbGZoZWlnaHQgLmhlcm8tYm9keSA+IC5jb250YWluZXIsIC5oZXJvLmlzLWZ1bGxoZWlnaHQgLmhlcm8tYm9keSA+IC5jb250YWluZXIsIC5oZXJvLmlzLWZ1bGxoZWlnaHQtd2l0aC1uYXZiYXIgLmhlcm8tYm9keSA+IC5jb250YWluZXIge1xuICAgICAgZmxleC1ncm93OiAxO1xuICAgICAgZmxleC1zaHJpbms6IDE7IH1cbiAgLmhlcm8uaXMtaGFsZmhlaWdodCB7XG4gICAgbWluLWhlaWdodDogNTB2aDsgfVxuICAuaGVyby5pcy1mdWxsaGVpZ2h0IHtcbiAgICBtaW4taGVpZ2h0OiAxMDB2aDsgfVxuXG4uaGVyby12aWRlbyB7XG4gIG92ZXJmbG93OiBoaWRkZW47IH1cbiAgLmhlcm8tdmlkZW8gdmlkZW8ge1xuICAgIGxlZnQ6IDUwJTtcbiAgICBtaW4taGVpZ2h0OiAxMDAlO1xuICAgIG1pbi13aWR0aDogMTAwJTtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA1MCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgtNTAlLCAtNTAlLCAwKTsgfVxuICAuaGVyby12aWRlby5pcy10cmFuc3BhcmVudCB7XG4gICAgb3BhY2l0eTogMC4zOyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLmhlcm8tdmlkZW8ge1xuICAgICAgZGlzcGxheTogbm9uZTsgfSB9XG5cbi5oZXJvLWJ1dHRvbnMge1xuICBtYXJnaW4tdG9wOiAxLjVyZW07IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAuaGVyby1idXR0b25zIC5idXR0b24ge1xuICAgICAgZGlzcGxheTogZmxleDsgfVxuICAgICAgLmhlcm8tYnV0dG9ucyAuYnV0dG9uOm5vdCg6bGFzdC1jaGlsZCkge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAwLjc1cmVtOyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY5cHgpLCBwcmludCB7XG4gICAgLmhlcm8tYnV0dG9ucyB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH1cbiAgICAgIC5oZXJvLWJ1dHRvbnMgLmJ1dHRvbjpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAxLjVyZW07IH0gfVxuXG4uaGVyby1oZWFkLFxuLmhlcm8tZm9vdCB7XG4gIGZsZXgtZ3JvdzogMDtcbiAgZmxleC1zaHJpbms6IDA7IH1cblxuLmhlcm8tYm9keSB7XG4gIGZsZXgtZ3JvdzogMTtcbiAgZmxleC1zaHJpbms6IDA7XG4gIHBhZGRpbmc6IDNyZW0gMS41cmVtOyB9XG5cbi5zZWN0aW9uIHtcbiAgcGFkZGluZzogM3JlbSAxLjVyZW07IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgLnNlY3Rpb24uaXMtbWVkaXVtIHtcbiAgICAgIHBhZGRpbmc6IDlyZW0gMS41cmVtOyB9XG4gICAgLnNlY3Rpb24uaXMtbGFyZ2Uge1xuICAgICAgcGFkZGluZzogMThyZW0gMS41cmVtOyB9IH1cblxuLmZvb3RlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmYWZhZmE7XG4gIHBhZGRpbmc6IDNyZW0gMS41cmVtIDZyZW07IH1cbjwvc3R5bGU+XG5cbjxzdmVsdGU6b3B0aW9ucyB0YWc9XCJqaXJhLWF1dGgtZm9ybVwiIC8+XG5cbjxBdXRoXG4gIGJpbmQ6dGhpcz17YXV0aENvbXBvbmVudH1cbiAgb246amlyYS1hdXRoLXVzZXItY2hhbmdlZD17b25Vc2VyQ2hhbmdlZH1cbiAgb246amlyYS1hdXRoLXVzZXItZmV0Y2hpbmctY2hhbmdlZD17b25Jc0ZlY2hpbmdDaGFuZ2VkfVxuICBvbjpqaXJhLWF1dGgtc3RhdHVzLWNoYW5nZWQ9e29uQXV0aFN0YXR1c0NoYW5nZWR9XG4gIG9uOmppcmEtYXV0aC1lbWFpbC1jaGFuZ2VkPXtvbkVtYWlsQ2hhbmdlZH1cbiAgb246amlyYS1hdXRoLWFwaS1rZXktY2hhbmdlZD17b25BcGlLZXlDaGFuZ2VkfVxuICBvbjpqaXJhLWF1dGgtdXJsLWNoYW5nZWQ9e29uVXJsQ2hhbmdlZH0gLz5cblxuPGRpdiBjbGFzcz1cImJveCBjYXJkIGNvbnRhaW5lciBpcy1mbHVpZCBpcy1wYWRkaW5nbGVzc1wiPlxuICA8aGVhZGVyIGNsYXNzPVwiY2FyZC1oZWFkZXJcIj5cbiAgICA8cCBjbGFzcz1cImNhcmQtaGVhZGVyLXRpdGxlXCI+XG4gICAgICBKaVJhIGF1dGhlbnRpY2F0aW9uXG4gICAgPC9wPlxuICA8L2hlYWRlcj5cbiAgPGRpdiBjbGFzcz1cImNhcmQtY29udGVudFwiPlxuICAgIDxkaXYgY2xhc3M9XCJjb250ZW50XCI+XG4gICAgICB7I2lmICFhdXRoZW50aWNhdGVkfVxuICAgICAgPGRpdiBjbGFzcz1cIm5vdGlmaWNhdGlvbiBpcy13YXJuaW5nXCI+XG4gICAgICAgIEF1dGhlbnRpY2F0aW9uIGVycm9yLCBwbGVhc2UgZW50ZXIgdmFsaWQgZGF0YS5cbiAgICAgIDwvZGl2PlxuICAgICAgezplbHNlfVxuICAgICAgPGRpdiBjbGFzcz1cIm5vdGlmaWNhdGlvbiBpcy1zdWNjZXNzXCI+XG4gICAgICAgIFlvdSBhcmUgYXV0aGVudGljYXRlZCBhcyBAe3VzZXIubmFtZX0uXG4gICAgICA8L2Rpdj5cbiAgICAgIHsvaWZ9XG4gICAgICA8ZGl2IGNsYXNzPVwiZm9ybS1ob3Jpem9udGFsXCIgPlxuICAgICAgICA8ZmllbGRzZXQ+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cImZpZWxkXCI+XG4gICAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJsYWJlbFwiIGZvcj1cImppcmEtZW1haWxcIj5FLW1haWw8L2xhYmVsPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbnRyb2xcIj5cbiAgICAgICAgICAgICAgPGlucHV0IGJpbmQ6dmFsdWU9e2VtYWlsfSBpZD1cImppcmEtZW1haWxcIiBuYW1lPVwiamlyYS1lbWFpbFwiIHR5cGU9XCJ0ZXh0XCIgcGxhY2Vob2xkZXI9XCJFLW1haWxcIiBjbGFzcz1cImlucHV0IGlzLW1lZGl1bVwiIHJlcXVpcmVkPVwiXCI+XG4gICAgICAgICAgICAgIDxwIGNsYXNzPVwiaGVscFwiPllvdXIgSmlSYSBsb2dpbiBFLW1haWwuPC9wPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiZmllbGRcIj5cbiAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cImxhYmVsXCIgZm9yPVwiamlyYS1hcGkta2V5XCI+QXBpIGtleTwvbGFiZWw+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29udHJvbFwiPlxuICAgICAgICAgICAgICA8aW5wdXQgYmluZDp2YWx1ZT17YXBpS2V5fSBpZD1cImppcmEtYXBpLWtleVwiIG5hbWU9XCJqaXJhLWFwaS1rZXlcIiB0eXBlPVwicGFzc3dvcmRcIiBwbGFjZWhvbGRlcj1cIkFwaSBrZXlcIiBjbGFzcz1cImlucHV0IGlzLW1lZGl1bVwiIHJlcXVpcmVkPVwiXCI+XG4gICAgICAgICAgICAgIDxwIGNsYXNzPVwiaGVscFwiPkNyZWF0ZSBhbiBBUEkgdG9rZW4gPGEgdGFyZ2V0PVwiX2JsYW5rXCIgaHJlZj1cImh0dHBzOi8vaWQuYXRsYXNzaWFuLmNvbS9tYW5hZ2UvYXBpLXRva2Vuc1wiPmhlcmU8L2E+LjwvcD5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgPGRpdiBjbGFzcz1cImZpZWxkXCI+XG4gICAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJsYWJlbFwiIGZvcj1cImppcmEtdXJsXCI+VVJMIHRvIEppUmE8L2xhYmVsPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbnRyb2xcIj5cbiAgICAgICAgICAgICAgPGlucHV0IGJpbmQ6dmFsdWU9e3VybH0gaWQ9XCJqaXJhLXVybFwiIG5hbWU9XCJqaXJhLXVybFwiIHR5cGU9XCJ0ZXh0XCIgcGxhY2Vob2xkZXI9XCJVUkwgdG8gSmlSYVwiIGNsYXNzPVwiaW5wdXQgaXMtbWVkaXVtXCIgcmVxdWlyZWQ9XCJcIj5cbiAgICAgICAgICAgICAgPHAgY2xhc3M9XCJoZWxwXCI+VXNlIHRoZSBVUkwgdG8geW91ciBjb21wYW55IEppUmEgYWNjb3VudCAoRS5nOiBodHRwczovL3lvdXItY29tcGFueS5qaXJhLm5ldCkuPC9wPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZmllbGRzZXQ+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG4gIDxmb290ZXIgY2xhc3M9XCJjYXJkLWZvb3RlclwiPlxuICAgIDxzcGFuIGNsYXNzPVwiY2FyZC1mb290ZXItaXRlbVwiPlxuICAgICAgPGJ1dHRvbiBvbjpjbGljaz17c2F2ZX0gY2xhc3M9XCJidXR0b24gaXMtcHJpbWFyeVwiIGNsYXNzOmlzLWxvYWRpbmc9e2ZldGNoaW5nfSBkaXNhYmxlZD17ZmV0Y2hpbmcgfHwgIWVtYWlsIHx8ICFhcGlLZXkgfHwgIXVybH0+e2ZldGNoaW5nID8gJ0ZldGNoaW5nIHVzZXIuLi4nIDogJ0F1dGhlbnRpY2F0ZSd9PC9idXR0b24+XG4gICAgPC9zcGFuPlxuICAgIDxzcGFuIGNsYXNzPVwiY2FyZC1mb290ZXItaXRlbVwiPlxuICAgICAgPGJ1dHRvbiBvbjpjbGljaz17cmVzZXR9IGNsYXNzPVwiYnV0dG9uIGlzLXdoaXRlXCI+Y2xlYXI8L2J1dHRvbj5cbiAgICA8L3NwYW4+XG4gIDwvZm9vdGVyPlxuPC9kaXY+Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTREQSxXQUFXLFVBQVUsQUFBQyxDQUFDLEFBQ3JCLElBQUksQUFBQyxDQUFDLEFBQ0osU0FBUyxDQUFFLE9BQU8sSUFBSSxDQUFDLEFBQUUsQ0FBQyxBQUM1QixFQUFFLEFBQUMsQ0FBQyxBQUNGLFNBQVMsQ0FBRSxPQUFPLE1BQU0sQ0FBQyxBQUFFLENBQUMsQUFBQyxDQUFDLEFBRU8sT0FBTyxBQUdwQixDQUFDLEFBQzNCLHFCQUFxQixDQUFFLElBQUksQ0FDM0IsbUJBQW1CLENBQUUsSUFBSSxDQUN6QixnQkFBZ0IsQ0FBRSxJQUFJ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QUMsQUFBQyxDQUFDLEFBRUYsQ0FBQyxBQUV0QyxPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBWSxNQUFNLENBQUMsQUFBQyxDQUFDLEFBRUYsQ0FBQyxBQUV0QyxPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBWSxNQUFNLENBQUMsQ0FBQyxHQUFHLENBQUMsWUFBWSxNQUFNLENBQUMsQUFBQyxDQUFDLEFBRTFCLENBQUMsQUFFdEMsT0FBTyxNQUFNLENBQUMsR0FBRyxDQUFDLFlBQVksTUFBTSxDQUFDLEFBQUMsQ0FBQyxBQUVGLENBQUMsQUFFdEMsT0FBTyxNQUFNLENBQUMsR0FBRyxDQUFDLFlBQVksTUFBTSxDQUFDLENBQUMsR0FBRyxDQUFDLFlBQVksTUFBTSxDQUFDLEFBQUMsQ0FBQyxBQUUxQixDQUFDLEFBRXRDLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLE1BQU0sQ0FBQyxBQUFDLENBQUMsQUFFRixDQUFDLEFBRXRDLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLEtBQUssQ0FBQyxBQUFDLENBQUMsQUFFQSxDQUFDLEFBRXZDLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLEtBQUssQ0FBQyxFQUFFLEtBQUssQUFBQyxDQUFDLEFBRVAsQ0FBQyxBQUV2QyxPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBWSxLQUFLLENBQUMsQ0FBQyxHQUFHLENBQUMsWUFBWSxNQUFNLENBQUMsQUFBQyxDQUFDLEFBRXhCLENBQUMsQUFFdkMsT0FBTyxNQUFNLENBQUMsR0FBRyxDQUFDLFlBQVksTUFBTSxDQUFDLEFBQUMsQ0FBQyxBQUVELENBQUMsQUFFdkMsT0FBTyxNQUFNLENBQUMsR0FBRyxDQUFDLFlBQVksTUFBTSxDQUFDLEFBQUMsQ0FBQyxBQUVELENBQUMsQUFFdkMsT0FBTyxNQUFNLENBQUMsR0FBRyxDQUFDLFlBQVksTUFBTSxDQUFDLENBQUMsR0FBRyxDQUFDLFlBQVksTUFBTSxDQUFDLEFBQUMsQ0FBQyxBQUV6QixDQUFDLEFBRXZDLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLE1BQU0sQ0FBQyxBQUFDLENBQUMsQUFFRCxDQUFDLEFBRXZDLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLE1BQU0sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxZQUFZLE1BQU0sQ0FBQyxBQUFDLENBQUMsQUFFekIsQ0FBQyxBQUV2QyxPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBWSxNQUFNLENBQUMsQUFBQyxDQUFDLEFBRUQsQ0FBQyxBQUV2QyxPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBWSxLQUFLLENBQUMsQUFBQyxDQUFDLEFBRUgsQ0FBQyxBQUVwQyxPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBWSxLQUFLLENBQUMsRUFBRSxLQUFLLEFBQUMsQ0FBQyxBQUVWLENBQUMsQUFFcEMsT0FBTyxNQUFNLENBQUMsR0FBRyxDQUFDLFlBQVksS0FBSyxDQUFDLENBQUMsR0FBRyxDQUFDLFlBQVksTUFBTSxDQUFDLEFBQUMsQ0FBQyxBQUUzQixDQUFDLEFBRXBDLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLE1BQU0sQ0FBQyxBQUFDLENBQUMsQUFFSixDQUFDLEFBRXBDLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLE1BQU0sQ0FBQyxBQUFDLENBQUMsQUFFSixDQUFDLEFBRXBDLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLE1BQU0sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxZQUFZLE1BQU0sQ0FBQyxBQUFDLENBQUMsQUFFNUIsQ0FBQyxBQUVwQyxPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBWSxNQUFNLENBQUMsQUFBQyxDQUFDLEFBRUosQ0FBQyxBQUVwQyxPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBWSxNQUFNLENBQUMsQ0FBQyxHQUFHLENBQUMsWUFBWSxNQUFNLENBQUMsQUFBQyxDQUFDLEFBRTVCLENBQUMsQUFFcEMsT0FBTyxNQUFNLENBQUMsR0FBRyxDQUFDLFlBQVksTUFBTSxDQUFDLEFBQUMsQ0FBQyxB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LE1BQU0sQ0FBQyxBQUFDLENBQUMsQUFFN0IsQ0FBQyxBQUVuQyxPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBWSxNQUFNLENBQUMsQUFBQyxDQUFDLEFBRUwsQ0FBQyxBQUtuQyxPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBWSxLQUFLLENBQUMsQUFBQyxDQUFDLEFBRUUsQ0FBQyxBQUV6QyxPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBWSxLQUFLLENBQUMsRUFBRSxLQUFLLEFBQUMsQ0FBQyxBQUVMLENBQUMsQUFFekMsT0FBTyxNQUFNLENBQUMsR0FBRyxDQUFDLFlBQVksS0FBSyxDQUFDLENBQUMsR0FBRyxDQUFDLFlBQVksTUFBTSxDQUFDLEFBQUMsQ0FBQyxBQUV0QixDQUFDLEFBRXpDLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLE1BQU0sQ0FBQyxBQUFDLENBQUMsQUFFQyxDQUFDLEFBRXpDLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLE1BQU0sQ0FBQyxBQUFDLENBQUMsQUFFQyxDQUFDLEFBRXpDLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLE1BQU0sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxZQUFZLE1BQU0sQ0FBQyxBQUFDLENBQUMsQUFFdkIsQ0FBQyxBQUV6QyxPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBWSxNQUFNLENBQUMsQUFBQyxDQUFDLEFBRUMsQ0FBQyxBQUV6QyxPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBWSxNQUFNLENBQUMsQ0FBQyxHQUFHLENBQUMsWUFBWSxNQUFNLENBQUMsQUFBQyxDQUFDLEFBRXZCLENBQUMsQUFFekMsT0FBTyxNQUFNLENBQUMsR0FBRyxDQUFDLFlBQVksTUFBTSxDQUFDLEFBQUMsQ0FBQyxBQUVDLENBQUMsQUFLekMsT0FBTyxNQUFNLENBQUMsR0FBRyxDQUFDLFlBQVksS0FBSyxDQUFDLEFBQUMsQ0FBQyxBQUVDLENBQUMsQUFFeEMsT0FBTyxNQUFNLENBQUMsR0FBRyxDQUFDLFlBQVksS0FBSyxDQUFDLEVBQUUsS0FBSyxBQUFDLENBQUMsQUFFTixDQUFDLEFBRXhDLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLEtBQUssQ0FBQyxDQUFDLEdBQUcsQ0FBQyxZQUFZLE1BQU0sQ0FBQyxBQUFDLENBQUMsQUFFdkIsQ0FBQyxBQUV4QyxPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBWSxNQUFNLENBQUMsQUFBQyxDQUFDLEFBRUEsQ0FBQyxBQUV4QyxPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBWSxNQUFNLENBQUMsQUFBQyxDQUFDLEFBRUEsQ0FBQyxBQUV4QyxPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBWSxNQUFNLENBQUMsQ0FBQyxHQUFHLENBQUMsWUFBWSxNQUFNLENBQUMsQUFBQyxDQUFDLEFBRXhCLENBQUMsQUFFeEMsT0FBTyxNQUFNLENBQUMsR0FBRyxDQUFDLFlBQVksTUFBTSxDQUFDLEFBQUMsQ0FBQyxBQUVBLENBQUMsQUFFeEMsT0FBTyxNQUFNLENBQUMsR0FBRyxDQUFDLFlBQVksTUFBTSxDQUFDLENBQUMsR0FBRyxDQUFDLFlBQVksTUFBTSxDQUFDLEFBQUMsQ0FBQyxBQUV4QixDQUFDLEFBRXhDLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLE1BQU0sQ0FBQyxBQUFDLENBQUMsQUFFQSxDQUFDLEFBZXhDLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLEtBQUssQ0FBQyxBQUFDLENBQUMsQUFFTixDQUFDLEFBRWpDLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLEtBQUssQ0FBQyxFQUFFLEtBQUssQUFBQyxDQUFDLEFBRWIsQ0FBQyxBQUVqQyxPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBWSxLQUFLLENBQUMsQ0FBQyxHQUFHLENBQUMsWUFBWSxNQUFNLENBQUMsQUFBQyxDQUFDLEFBRTlCLENBQUMsQUFFakMsT0FBTyxNQUFNLENBQUMsR0FBRyxDQUFDLFlBQVksTUFBTSxDQUFDLEFBQUMsQ0FBQyxBQUVQLENBQUMsQUFFakMsT0FBTyxNQUFNLENBQUMsR0FBRyxDQUFDLFlBQVksTUFBTSxDQUFDLEFBQUMsQ0FBQyxBQUVQLENBQUMsQUFFakMsT0FBTyxNQUFNLENBQUMsR0FBRyxDQUFDLFlBQVksTUFBTSxDQUFDLENBQUMsR0FBRyxDQUFDLFlBQVksTUFBTSxDQUFDLEFBQUMsQ0FBQyxBQUUvQixDQUFDLEFBRWpDLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLE1BQU0sQ0FBQyxBQUFDLENBQUMsQUFFUCxDQUFDLEFBRWpDLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLE1BQU0sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxZQUFZLE1BQU0sQ0FBQyxBQUFDLENBQUMsQUFFL0IsQ0FBQyxBQUVqQyxPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBWSxNQUFNLENBQUMsQUFBQyxDQUFDLEFBRVAsQ0FBQyxBQUtqQyxPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBWSxLQUFLLENBQUMsQUFBQyxDQUFDLEFBRUQsQ0FBQyxBQUV0QyxPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBWSxLQUFLLENBQUMsRUFBRSxLQUFLLEFBQUMsQ0FBQyxBQUVSLENBQUMsQUFFdEMsT0FBTyxNQUFNLENBQUMsR0FBRyxDQUFDLFlBQVksS0FBSyxDQUFDLENBQUMsR0FBRyxDQUFDLFlBQVksTUFBTSxDQUFDLEFBQUMsQ0FBQyxBQUV6QixDQUFDLEFBRXRDLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLE1BQU0sQ0FBQyxBQUFDLENBQUMsQUFFRixDQUFDLEFBRXRDLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLE1BQU0sQ0FBQyxBQUFDLENBQUMsQUFFRixDQUFDLEFBRXRDLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLE1BQU0sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxZQUFZLE1BQU0sQ0FBQyxBQUFDLENBQUMsQUFFMUIsQ0FBQyxBQUV0QyxPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBWSxNQUFNLENB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LEFBNkIxQixPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBWSxLQUFLLENBQUMsRUFBRSxLQUFLLEFBQUMsQ0FBQyxBQUV4QixDQUFDLEFBQ3RCLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLE1BQU0sQ0FBQyxBQUFDLENBQUMsQUFFbEIsQ0FBQyxBQVd0QixPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBWSxLQUFLLENBQUMsQUFBQyxDQUFDLEFBRWIsQ0FBQyxBQUMxQixPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBWSxLQUFLLENBQUMsRUFBRSxLQUFLLEFBQUMsQ0FBQyxBQUVwQixDQUFDLEFBQzFCLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLEtBQUssQ0FBQyxDQUFDLEdBQUcsQ0FBQyxZQUFZLE1BQU0sQ0FBQyxBQUFDLENBQUMsQUFFckMsQ0FBQyxBQUMxQixPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBWSxNQUFNLENBQUMsQUFBQyxDQUFDLEFBRWQsQ0FBQyxBQUMxQixPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBWSxNQUFNLENBQUMsQUFBQyxDQUFDLEFBRWQsQ0FBQyxBQUMxQixPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBWSxNQUFNLENBQUMsQ0FBQyxHQUFHLENBQUMsWUFBWSxNQUFNLENBQUMsQUFBQyxDQUFDLEFBRXRDLENBQUMsQUFDMUIsT0FBTyxNQUFNLENBQUMsR0FBRyxDQUFDLFlBQVksTUFBTSxDQUFDLEFBQUMsQ0FBQyxBQUVkLENBQUMsQUFDMUIsT0FBTyxNQUFNLENBQUMsR0FBRyxDQUFDLFlBQVksTUFBTSxDQUFDLENBQUMsR0FBRyxDQUFDLFlBQVksTUFBTSxDQUFDLEFBQUMsQ0FBQyxBQUV0QyxDQUFDLEFBQzFCLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLE1BQU0sQ0FBQyxBQUFDLENBQUMsQUFFZCxDQUFDLEFBRzFCLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLEtBQUssQ0FBQyxBQUFDLENBQUMsQUFFVixDQUFDLEFBQzdCLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLEtBQUssQ0FBQyxFQUFFLEtBQUssQUFBQyxDQUFDLEFBRWpCLENBQUMsQUFDN0IsT0FBTyxNQUFNLENBQUMsR0FBRyxDQUFDLFlBQVksS0FBSyxDQUFDLENBQUMsR0FBRyxDQUFDLFlBQVksTUFBTSxDQUFDLEFBQUMsQ0FBQyxBQUVsQyxDQUFDLEFBQzdCLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLE1BQU0sQ0FBQyxBQUFDLENBQUMsQUFFWCxDQUFDLEFBQzdCLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLE1BQU0sQ0FBQyxBQUFDLENBQUMsQUFFWCxDQUFDLEFBQzdCLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLE1BQU0sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxZQUFZLE1BQU0sQ0FBQyxBQUFDLENBQUMsQUFFbkMsQ0FBQyxBQUM3QixPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBWSxNQUFNLENBQUMsQUFBQyxDQUFDLEFBRVgsQ0FBQyxBQUM3QixPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBWSxNQUFNLENBQUMsQ0FBQyxHQUFHLENBQUMsWUFBWSxNQUFNLENBQUMsQUFBQyxDQUFDLEFBRW5DLENBQUMsQUFDN0IsT0FBTyxNQUFNLENBQUMsR0FBRyxDQUFDLFlBQVksTUFBTSxDQUFDLEFBQUMsQ0FBQyxBQUVYLENBQUMsQUFHN0IsT0FBTyxNQUFNLENBQUMsR0FBRyxDQUFDLFlBQVksS0FBSyxDQUFDLEFBQUMsQ0FBQyxBQUVYLENBQUMsQUFDNUIsT0FBTyxNQUFNLENBQUMsR0FBRyxDQUFDLFlBQVksS0FBSyxDQUFDLEVBQUUsS0FBSyxBQUFDLENBQUMsQUFFbEIsQ0FBQyxBQUM1QixPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBWSxLQUFLLENBQUMsQ0FBQyxHQUFHLENBQUMsWUFBWSxNQUFNLENBQUMsQUFBQyxDQUFDLEFBRW5DLENBQUMsQUFDNUIsT0FBTyxNQUFNLENBQUMsR0FBRyxDQUFDLFlBQVksTUFBTSxDQUFDLEFBQUMsQ0FBQyxBQUVaLENBQUMsQUFDNUIsT0FBTyxNQUFNLENBQUMsR0FBRyxDQUFDLFlBQVksTUFBTSxDQUFDLEFBQUMsQ0FBQyxBQUVaLENBQUMsQUFDNUIsT0FBTyxNQUFNLENBQUMsR0FBRyxDQUFDLFlBQVksTUFBTSxDQUFDLENBQUMsR0FBRyxDQUFDLFlBQVksTUFBTSxDQUFDLEFBQUMsQ0FBQyxBQUVwQyxDQUFDLEFBQzVCLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLE1BQU0sQ0FBQyxBQUFDLENBQUMsQUFFWixDQUFDLEFBQzVCLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLE1BQU0sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxZQUFZLE1BQU0sQ0FBQyxBQUFDLENBQUMsQUFFcEMsQ0FBQyxBQUM1QixPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBWSxNQUFNLENBQUMsQUFBQyxDQUFDLEFBRVosQ0FBQyxBQUc1QixPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBWSxLQUFLLENBQUMsQUFBQyxDQUFDLEFBRVYsQ0FBQyxBQUM3QixPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBWSxLQUFLLENBQUMsRUFBRSxLQUFLLEFBQUMsQ0FBQyxBQUVqQixDQUFDLEFBQzdCLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLEtBQUssQ0FBQyxDQUFDLEdBQUcsQ0FBQyxZQUFZLE1BQU0sQ0FBQyxBQUFDLENBQUMsQUFFbEMsQ0FBQyxBQUM3QixPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBWSxNQUFNLENBQUMsQUFBQyxDQUFDLEFBRVgsQ0FBQyxBQUM3QixPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBWSxNQUFNLENBQUMsQUFBQyxDQUFDLEFBRVgsQ0FBQyxBQUM3QixPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBWSxNQUFNLENBQUMsQ0FBQyxHQUFHLENBQUMsWUFBWSxNQUFNLENBQUMsQUFBQyxDQUFDLEFBRW5DLENBQUMsQUFDN0IsT0FBTyxNQUFNLENBQUMsR0FBRyxDQUFDLFlBQVksTUFBTSxDQUFDLEFBQUMsQ0FBQyxBQUVYLENBQUMsQUFDN0IsT0FBTyxNQUFNLENBQUMsR0FBRyxDQUFDLFlBQVksTUFBTSxDQUFDLENBQUMsR0FBRyxDQUFDLFlBQVksTUFBTSxDQUFDLEFBQUMsQ0FBQyxBQUVuQyxDQUFDLEFBQzdCLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLE1BQU0sQ0FBQyxBQUFDLENBQUMsQUFFWCxDQUFDLEFBRzdCLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLEtBQUssQ0FBQyxBQUFDLENBQUMsQUFFYixDQUFDLEFBQzFCLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLEtBQUssQ0FBQyxFQUFFLEtBQUssQUFBQyxDQUFDLEFBRXBCLENBQUMsQUFDMUIsT0FBTyxNQUFNLENBQUMsR0FBRyxDQUFDLFlBQVksS0FBSyxDQUFDLENBQUMsR0FBRyxDQUFDLFlBQVksTUFBTSxDQUFDLEFBQUMsQ0FBQyxBQUVyQyxDQUFDLEFBQzFCLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLE1BQU0sQ0FBQyxBQUFDLENBQUMsQUFFZCxDQUFDLEFBQzFCLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLE1BQU0sQ0FBQyxBQUFDLENBQUMsQUFFZCxDQUFDLEFBQzFCLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLE1BQU0sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxZQUFZLE1BQU0sQ0FBQyxBQUFDLENBQUMsQUFFdEMsQ0FBQyxBQUMxQixPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBWSxNQUFNLENBQUMsQUFBQyxDQUFDLEFBRWQsQ0FBQyxBQUMxQixPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBWSxNQUFNLENBQUMsQ0FBQyxHQUFHLENBQUMsWUFBWSxNQUFNLENBQUMsQUFBQyxDQUFDLEFBRXRDLENBQUMsQUFDMUIsT0FBTyxNQUFNLENBQUMsR0FBRyxDQUFDLFlBQVksTUFBTSxDQUFDLEFBQUMsQ0FBQyxBQUVkLENBQUMsQUFHMUIsT0FBTyxNQUFNLENBQUMsR0FBRyxDQUFDLFlBQVksS0FBSyxDQUFDLEFBQUMsQ0FBQyxBQUVWLENBQUMsQUFDN0IsT0FBTyxNQUFNLENBQUMsR0FBRyxDQUFDLFlBQVksS0FBSyxDQUFDLEVBQUUsS0FBSyxBQUFDLENBQUMsQUFFakIsQ0FBQyxBQUM3QixPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBWSxLQUFLLENBQUMsQ0FBQyxHQUFHLENBQUMsWUFBWSxNQUFNLENBQUMsQUFBQyxDQUFDLEFBRWxDLENBQUMsQUFDN0IsT0FBTyxNQUFNLENBQUMsR0FBRyxDQUFDLFlBQVksTUFBTSxDQUFDLEFBQUMsQ0FBQyxBQUVYLENBQUMsQUFDN0IsT0FBTyxNQUFNLENBQUMsR0FBRyxDQUFDLFlBQVksTUFBTSxDQUFDLEFBQUMsQ0FBQyxBQUVYLENBQUMsQUFDN0IsT0FBTyxNQUFNLENBQUMsR0FBRyxDQUFDLFlBQVksTUFBTSxDQUFDLENBQUMsR0FBRyxDQUFDLFlBQVksTUFBTSxDQUFDLEFBQUMsQ0FBQyxBQUVuQyxDQUFDLEFBQzdCLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLE1BQU0sQ0FBQyxBQUFDLENBQUMsQUFFWCxDQUFDLEFBQzdCLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLE1BQU0sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxZQUFZLE1BQU0sQ0FBQyxBQUFDLENBQUMsQUFFbkMsQ0FBQyxBQUM3QixPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBWSxNQUFNLENBQUMsQUFBQyxDQUFDLEFBRVgsQ0FBQyxBQUc3QixPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBWSxLQUFLLENBQUMsQUFBQyxDQUFDLEFBRVgsQ0FBQyxBQUM1QixPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBWSxLQUFLLENBQUMsRUFBRSxLQUFLLEFBQUMsQ0FBQyxBQUVsQixDQUFDLEFBQzVCLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLEtBQUssQ0FBQyxDQUFDLEdBQUcsQ0FBQyxZQUFZLE1BQU0sQ0FBQyxBQUFDLENBQUMsQUFFbkMsQ0FBQyxBQUM1QixPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBWSxNQUFNLENBQUMsQUFBQyxDQUFDLEFBRVosQ0FBQyxBQUM1QixPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBWSxNQUFNLENBQUMsQUFBQyxDQUFDLEFBRVosQ0FBQyxBQUM1QixPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBWSxNQUFNLENBQUMsQ0FBQyxHQUFHLENBQUMsWUFBWSxNQUFNLENBQUMsQUFBQyxDQUFDLEFBRXBDLENBQUMsQUFDNUIsT0FBTyxNQUFNLENBQUMsR0FBRyxDQUFDLFlBQVksTUFBTSxDQUFDLEFBQUMsQ0FBQyxBQUVaLENBQUMsQUFDNUIsT0FBTyxNQUFNLENBQUMsR0FBRyxDQUFDLFlBQVksTUFBTSxDQUFDLENBQUMsR0FBRyxDQUFDLFlBQVksTUFBTSxDQUFDLEFBQUMsQ0FBQyxBQUVwQyxDQUFDLEFBQzVCLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLE1BQU0sQ0FBQyxBQUFDLENBQUMsQUFFWixDQUFDLEFBRzVCLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLEtBQUssQ0FBQyxBQUFDLENBQUMsQUFFVixDQUFDLEFBQzdCLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLEtBQUssQ0FBQyxFQUFFLEtBQUssQUFBQyxDQUFDLEFBRWpCLENBQUMsQUFDN0IsT0FBTyxNQUFNLENBQUMsR0FBRyxDQUFDLFlBQVksS0FBSyxDQUFDLENBQUMsR0FBRyxDQUFDLFlBQVksTUFBTSxDQUFDLEFBQUMsQ0FBQyxBQUVsQyxDQUFDLEFBQzdCLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLE1BQU0sQ0FBQyxBQUFDLENBQUMsQUFFWCxDQUFDLEFBQzdCLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLE1BQU0sQ0FBQyxBQUFDLENBQUMsQUFFWCxDQUFDLEFBQzdCLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLE1BQU0sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxZQUFZLE1BQU0sQ0FBQyxBQUFDLENBQUMsQUFFbkMsQ0FBQyxBQUM3QixPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBWSxNQUFNLENBQUMsQUFBQyxDQUFDLEFBRVgsQ0FBQyxBQUM3QixPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBWSxNQUFNLENBQUMsQ0FBQyxHQUFHLENBQUMsWUFBWSxNQUFNLENBQUMsQUFBQyxDQUFDLEFBRW5DLENBQUMsQUFDN0IsT0FBTyxNQUFNLENBQUMsR0FBRyxDQUFDLFlBQVksTUFBTSxDQUFDLEFBQUMsQ0FBQyxBQUVYLENBQUMsQUFHN0IsT0FBTyxNQUFNLENBQUMsR0FBRyxDQUFDLFlBQVksS0FBSyxDQUFDLEFBQUMsQ0FBQyxBQUViLENBQUMsQUFDMUIsT0FBTyxNQUFNLENBQUMsR0FBRyxDQUFDLFlBQVksS0FBSyxDQUFDLEVBQUUsS0FBSyxBQUFDLENBQUMsQUFFcEIsQ0FBQyxBQUMxQixPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBWSxLQUFLLENBQUMsQ0FBQyxHQUFHLENBQUMsWUFBWSxNQUFNLENBQUMsQUFBQyxDQUFDLEFBRXJDLENBQUMsQUFDMUIsT0FBTyxNQUFNLENBQUMsR0FBRyxDQUFDLFlBQVksTUFBTSxDQUFDLEFBQUMsQ0FBQyxBQUVkLENBQUMsQUFDMUIsT0FBTyxNQUFNLENBQUMsR0FBRyxDQUFDLFlBQVksTUFBTSxDQUFDLEFBQUMsQ0FBQyxBQUVkLENBQUMsQUFDMUIsT0FBTyxNQUFNLENBQUMsR0FBRyxDQUFDLFlBQVksTUFBTSxDQUFDLENBQUMsR0FBRyxDQUFDLFlBQVksTUFBTSxDQUFDLEFBQUMsQ0FBQyxBQUV0QyxDQUFDLEFBQzFCLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLE1BQU0sQ0FBQyxBQUFDLENBQUMsQUFFZCxDQUFDLEFBQzFCLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZ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 */</style>`;

    		init(this, { target: this.shadowRoot }, instance$2, create_fragment$2, safe_not_equal, []);

    		if (options) {
    			if (options.target) {
    				insert(options.target, this, options.anchor);
    			}
    		}
    	}
    }

    customElements.define("jira-auth-form", AuthForm);

    /* src/auth/AuthUserCard.svelte generated by Svelte v3.4.4 */

    const file$1 = "src/auth/AuthUserCard.svelte";

    // (7007:0) {:else}
    function create_else_block$1(ctx) {
    	var div;

    	return {
    		c: function create() {
    			div = element("div");
    			div.textContent = "You are not logged in!";
    			div.className = "notification is-warning";
    			add_location(div, file$1, 7007, 2, 236414);
    		},

    		m: function mount(target, anchor) {
    			insert(target, div, anchor);
    		},

    		p: noop,

    		d: function destroy(detaching) {
    			if (detaching) {
    				detach(div);
    			}
    		}
    	};
    }

    // (6988:26) 
    function create_if_block_1(ctx) {
    	var div3, article, div0, figure, img, img_src_value, t0, div2, div1, p, strong, t1_value = ctx.user.displayName, t1, t2, small0, t3, t4_value = ctx.user.name, t4, t5, br, t6, small1, t7_value = ctx.user.emailAddress, t7;

    	return {
    		c: function create() {
    			div3 = element("div");
    			article = element("article");
    			div0 = element("div");
    			figure = element("figure");
    			img = element("img");
    			t0 = space();
    			div2 = element("div");
    			div1 = element("div");
    			p = element("p");
    			strong = element("strong");
    			t1 = text(t1_value);
    			t2 = space();
    			small0 = element("small");
    			t3 = text("@");
    			t4 = text(t4_value);
    			t5 = space();
    			br = element("br");
    			t6 = space();
    			small1 = element("small");
    			t7 = text(t7_value);
    			img.src = img_src_value = ctx.user.avatar;
    			img.alt = "Image";
    			add_location(img, file$1, 6992, 10, 236052);
    			figure.className = "image is-48x48";
    			add_location(figure, file$1, 6991, 8, 236010);
    			div0.className = "media-left";
    			add_location(div0, file$1, 6990, 6, 235977);
    			add_location(strong, file$1, 6998, 12, 236209);
    			add_location(small0, file$1, 6998, 48, 236245);
    			add_location(br, file$1, 6999, 12, 236285);
    			add_location(small1, file$1, 7000, 12, 236302);
    			add_location(p, file$1, 6997, 10, 236193);
    			div1.className = "content";
    			add_location(div1, file$1, 6996, 8, 236161);
    			div2.className = "media-content";
    			add_location(div2, file$1, 6995, 6, 236125);
    			article.className = "media";
    			add_location(article, file$1, 6989, 4, 235947);
    			div3.className = "box container is-fluid";
    			add_location(div3, file$1, 6988, 2, 235906);
    		},

    		m: function mount(target, anchor) {
    			insert(target, div3, anchor);
    			append(div3, article);
    			append(article, div0);
    			append(div0, figure);
    			append(figure, img);
    			append(article, t0);
    			append(article, div2);
    			append(div2, div1);
    			append(div1, p);
    			append(p, strong);
    			append(strong, t1);
    			append(p, t2);
    			append(p, small0);
    			append(small0, t3);
    			append(small0, t4);
    			append(p, t5);
    			append(p, br);
    			append(p, t6);
    			append(p, small1);
    			append(small1, t7);
    		},

    		p: function update(changed, ctx) {
    			if ((changed.user) && img_src_value !== (img_src_value = ctx.user.avatar)) {
    				img.src = img_src_value;
    			}

    			if ((changed.user) && t1_value !== (t1_value = ctx.user.displayName)) {
    				set_data(t1, t1_value);
    			}

    			if ((changed.user) && t4_value !== (t4_value = ctx.user.name)) {
    				set_data(t4, t4_value);
    			}

    			if ((changed.user) && t7_value !== (t7_value = ctx.user.emailAddress)) {
    				set_data(t7, t7_value);
    			}
    		},

    		d: function destroy(detaching) {
    			if (detaching) {
    				detach(div3);
    			}
    		}
    	};
    }

    // (6984:0) {#if fetching }
    function create_if_block$1(ctx) {
    	var p, button;

    	return {
    		c: function create() {
    			p = element("p");
    			button = element("button");
    			button.className = "button is-warning is-loading is-small";
    			add_location(button, file$1, 6985, 4, 235806);
    			p.className = "box container is-fluid notification is-warning";
    			add_location(p, file$1, 6984, 2, 235743);
    		},

    		m: function mount(target, anchor) {
    			insert(target, p, anchor);
    			append(p, button);
    		},

    		p: noop,

    		d: function destroy(detaching) {
    			if (detaching) {
    				detach(p);
    			}
    		}
    	};
    }

    function create_fragment$3(ctx) {
    	var t, if_block_anchor, current;

    	let auth_props = {};
    	var auth = new Auth({ props: auth_props, $$inline: true });

    	add_binding_callback(() => ctx.auth_binding(auth));
    	auth.$on("jira-auth-user-changed", ctx.onUserChanged);
    	auth.$on("jira-auth-user-fetching-changed", ctx.onIsFechingChanged);

    	function select_block_type(ctx) {
    		if (ctx.fetching) return create_if_block$1;
    		if (ctx.user.accountId) return create_if_block_1;
    		return create_else_block$1;
    	}

    	var current_block_type = select_block_type(ctx);
    	var if_block = current_block_type(ctx);

    	return {
    		c: function create() {
    			auth.$$.fragment.c();
    			t = space();
    			if_block.c();
    			if_block_anchor = empty();
    			this.c = noop;
    		},

    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},

    		m: function mount(target, anchor) {
    			mount_component(auth, target, anchor);
    			insert(target, t, anchor);
    			if_block.m(target, anchor);
    			insert(target, if_block_anchor, anchor);
    			current = true;
    		},

    		p: function update(changed, ctx) {
    			var auth_changes = {};
    			auth.$set(auth_changes);

    			if (current_block_type === (current_block_type = select_block_type(ctx)) && if_block) {
    				if_block.p(changed, ctx);
    			} else {
    				if_block.d(1);
    				if_block = current_block_type(ctx);
    				if (if_block) {
    					if_block.c();
    					if_block.m(if_block_anchor.parentNode, if_block_anchor);
    				}
    			}
    		},

    		i: function intro(local) {
    			if (current) return;
    			auth.$$.fragment.i(local);

    			current = true;
    		},

    		o: function outro(local) {
    			auth.$$.fragment.o(local);
    			current = false;
    		},

    		d: function destroy(detaching) {
    			ctx.auth_binding(null);

    			auth.$destroy(detaching);

    			if (detaching) {
    				detach(t);
    			}

    			if_block.d(detaching);

    			if (detaching) {
    				detach(if_block_anchor);
    			}
    		}
    	};
    }

    function instance$3($$self, $$props, $$invalidate) {
    	

      let authComponent;
      let fetching = false;
      let user = emptyUser;

      function onIsFechingChanged(e) {
        $$invalidate('fetching', fetching = e.detail);
      }

      function onUserChanged(e) {
        $$invalidate('user', user = e.detail);
      }

    	function auth_binding($$component) {
    		authComponent = $$component;
    		$$invalidate('authComponent', authComponent);
    	}

    	return {
    		authComponent,
    		fetching,
    		user,
    		onIsFechingChanged,
    		onUserChanged,
    		auth_binding
    	};
    }

    class AuthUserCard extends SvelteElement {
    	constructor(options) {
    		super();

    		this.shadowRoot.innerHTML = `<style>@keyframes spinAround{from{transform:rotate(0deg)}to{transform:rotate(359deg)}}.button{-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.box:not(:last-child),.content:not(:last-child),.notification:not(:last-child){margin-bottom:1.5rem}.button.is-loading::after{animation:spinAround 500ms infinite linear;border:2px solid #dbdbdb;border-radius:290486px;border-right-color:transparent;border-top-color:transparent;content:"";display:block;height:1em;position:relative;width:1em}.button{-moz-appearance:none;-webkit-appearance:none;align-items:center;border:1px solid transparent;border-radius:4px;box-shadow:none;display:inline-flex;font-size:1rem;height:2.25em;justify-content:flex-start;line-height:1.5;padding-bottom:calc(0.375em - 1px);padding-left:calc(0.625em - 1px);padding-right:calc(0.625em - 1px);padding-top:calc(0.375em - 1px);position:relative;vertical-align:top}.button:focus,.button:active{outline:none}p,figure{margin:0;padding:0}button{margin:0}*,*::before,*::after{box-sizing:inherit}img{height:auto;max-width:100%}article,figure{display:block}button{font-family:BlinkMacSystemFont, -apple-system, "Segoe UI", "Roboto", "Oxygen", "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", "Helvetica Neue", "Helvetica", "Arial", sans-serif}img{height:auto;max-width:100%}small{font-size:0.875em}strong{color:#363636;font-weight:700}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}.box{background-color:white;border-radius:6px;box-shadow:0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);color:#4a4a4a;display:block;padding:1.25rem}.button{background-color:white;border-color:#dbdbdb;border-width:1px;color:#363636;cursor:pointer;justify-content:center;padding-bottom:calc(0.375em - 1px);padding-left:0.75em;padding-right:0.75em;padding-top:calc(0.375em - 1px);text-align:center;white-space:nowrap}.button:hover{border-color:#b5b5b5;color:#363636}.button:focus{border-color:#3273dc;color:#363636}.button:focus:not(:active){box-shadow:0 0 0 0.125em rgba(50, 115, 220, 0.25)}.button:active{border-color:#4a4a4a;color:#363636}.button.is-warning{background-color:#ffdd57;border-color:transparent;color:rgba(0, 0, 0, 0.7)}.button.is-warning:hover{background-color:#ffdb4a;border-color:transparent;color:rgba(0, 0, 0, 0.7)}.button.is-warning:focus{border-color:transparent;color:rgba(0, 0, 0, 0.7)}.button.is-warning:focus:not(:active){box-shadow:0 0 0 0.125em rgba(255, 221, 87, 0.25)}.button.is-warning:active{background-color:#ffd83d;border-color:transparent;color:rgba(0, 0, 0, 0.7)}.button.is-warning.is-loading::after{border-color:transparent transparent rgba(0, 0, 0, 0.7) rgba(0, 0, 0, 0.7) !important}.button.is-small{border-radius:2px;font-size:0.75rem}.button.is-loading{color:transparent !important;pointer-events:none}.button.is-loading::after{position:absolute;left:calc(50% - (1em / 2));top:calc(50% - (1em / 2));position:absolute !important}.container{flex-grow:1;margin:0 auto;position:relative;width:auto}@media screen and (min-width: 1024px){.container{max-width:960px}.container.is-fluid{margin-left:32px;margin-right:32px;max-width:none}}@media screen and (max-width: 1215px){}@media screen and (max-width: 1407px){}@media screen and (min-width: 1216px){.container{max-width:1152px}}@media screen and (min-width: 1408px){.container{max-width:1344px}}.content p:not(:last-child){margin-bottom:1em}.image{display:block;position:relative}.image img{display:block;height:auto;width:100%}.image.is-48x48{height:48px;width:48px}.notification{background-color:whitesmoke;border-radius:4px;padding:1.25rem 2.5rem 1.25rem 1.5rem;position:relative}.notification.is-warning{background-color:#ffdd57;color:rgba(0, 0, 0, 0.7)}@keyframes moveIndeterminate{from{background-position:200% 0}to{background-position:-200% 0}}@media screen and (min-width: 769px), print{}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px), print{}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px), print{}.media{align-items:flex-start;display:flex;text-align:left}.media .content:not(:last-child){margin-bottom:0.75rem}.media .media{border-top:1px solid rgba(219, 219, 219, 0.5);display:flex;padding-top:0.75rem}.media .media .content:not(:last-child){margin-bottom:0.5rem}.media .media .media+.media{margin-top:0.5rem}.media+.media{border-top:1px solid rgba(219, 219, 219, 0.5);margin-top:1rem;padding-top:1rem}.media.is-large+.media{margin-top:1.5rem;padding-top:1.5rem}.media-left{flex-basis:auto;flex-grow:0;flex-shrink:0}.media-left{margin-right:1rem}.media-content{flex-basis:auto;flex-grow:1;flex-shrink:1;text-align:left}@media screen and (max-width: 768px){.media-content{overflow-x:auto}}@media screen and (min-width: 769px), print{}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px){}.navbar>.container{align-items:stretch;display:flex;min-height:3.25rem;width:100%}@media screen and (max-width: 1023px){.navbar>.container{display:block}}@media screen and (min-width: 1024px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1408px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 1024px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (min-width: 769px), print{}@media screen and (max-width: 1023px){}@media screen and (max-width: 768px){}@media screen and (max-width: 1023px){}@media screen and (max-width: 768px){}@media screen and (max-width: 1023px){}@media screen and (max-width: 768px){}@media screen and (max-width: 1023px){}@media screen and (max-width: 768px){}@media screen and (max-width: 1023px){}@media screen and (max-width: 768px){}@media screen and (max-width: 1023px){}@media screen and (max-width: 768px){}@media screen and (max-width: 1023px){}@media screen and (max-width: 768px){}@media screen and (max-width: 1023px){}@media screen and (max-width: 768px){}@media screen and (max-width: 1023px){}@media screen and (max-width: 768px){}@media screen and (max-width: 1023px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px), print{}@media screen and (max-width: 768px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 1024px){}
		/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */</style>`;

    		init(this, { target: this.shadowRoot }, instance$3, create_fragment$3, safe_not_equal, []);

    		if (options) {
    			if (options.target) {
    				insert(options.target, this, options.anchor);
    			}
    		}
    	}
    }

    customElements.define("jira-auth-user-card", AuthUserCard);

    const fetchIssue = async (key) => {
      await tick$1(100);
      try {
        const data = await fetchApi(`/rest/api/3/issue/${key}`);
        if (data.id) {
          const issue = {
            id: data.id,
            key: data.key,
            summary: data.fields.summary,
            status: data.fields.status.name,
            fetching: false,
            url: data.self.replace(/\/rest\/(.*)/,'') + `/browse/${data.key}`,
            data,
          };
          issuePool.add(issue);
          return Promise.resolve(issue);
        }
        return Promise.reject(`Error while fetching ticket: ${JSON.stringify(data)}`);
      } catch(error) {
        return Promise.reject(`Error while fetching ticket: ${error}`);
      }
    };

    const emptyIssue = {
      id: '',
      key: '',
      summary: '',
      status: '',
      fetching: false,
      url: '#',
      data: null,
    };

    const addToPool = (pool, issue) => {
      const ret = [...pool];
      const foundIndex = ret.findIndex((_issue) => _issue.key === issue.key);
      if (foundIndex > -1) {
        ret[foundIndex] = issue;
      } else {
        ret.push(issue);
      }
      return ret;
    };

    const issuePool = (() => {
      const { subscribe, set, update } = writable([]);

      return {
        subscribe,
        addByKey: (key) => update(pool => {
          fetchIssue(key)
            .then(issue => issuePool.add(issue))
            .catch(error => console.log(error));
          return addToPool(pool, {...emptyIssue, key });
        }),
        add: (issue) => update(pool => {
          return addToPool(pool, issue);
        }),
        getByKey: (key) => get(issuePool).find(_issue => _issue.key === key),
      };
    })();

    /* src/issue/Issue.svelte generated by Svelte v3.4.4 */

    function create_fragment$4(ctx) {
    	return {
    		c: function create() {
    			this.c = noop;
    		},

    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},

    		m: noop,
    		p: noop,
    		i: noop,
    		o: noop,
    		d: noop
    	};
    }

    function instance$4($$self, $$props, $$invalidate) {
    	

      const dispatch = createEventDispatcher();

      let { key = '' } = $$props;

      let issue = emptyIssue;

      const load = () => {
        issue = issuePool.getByKey(key);
        dispatch('jira-issue-loaded', issue);
      };

      issuePool.subscribe(pool => {
        load();
      });

      isAuthenticated.subscribe(v => {
        if (v) {
          load();
        } else {
          issue = emptyIssue;
          dispatch('jira-issue-loaded', issue);
        }
      });

      onMount(async () => {
        await tick();
        issuePool.addByKey(key);
      });

    	const writable_props = ['key'];
    	Object.keys($$props).forEach(key => {
    		if (!writable_props.includes(key) && !key.startsWith('$$')) console.warn(`<jira-issue> was created with unknown prop '${key}'`);
    	});

    	$$self.$set = $$props => {
    		if ('key' in $$props) $$invalidate('key', key = $$props.key);
    	};

    	return { key };
    }

    class Issue extends SvelteElement {
    	constructor(options) {
    		super();

    		init(this, { target: this.shadowRoot }, instance$4, create_fragment$4, safe_not_equal, ["key"]);

    		if (options) {
    			if (options.target) {
    				insert(options.target, this, options.anchor);
    			}

    			if (options.props) {
    				this.$set(options.props);
    				flush();
    			}
    		}
    	}

    	static get observedAttributes() {
    		return ["key"];
    	}

    	get key() {
    		return this.$$.ctx.key;
    	}

    	set key(key) {
    		this.$set({ key });
    		flush();
    	}
    }

    customElements.define("jira-issue", Issue);

    /* src/issue/IssueTag.svelte generated by Svelte v3.4.4 */

    const file$2 = "src/issue/IssueTag.svelte";

    // (6981:2) {#if issue && issue.summary }
    function create_if_block_1$1(ctx) {
    	var span, t0, t1_value = ctx.issue.summary, t1;

    	return {
    		c: function create() {
    			span = element("span");
    			t0 = text(": ");
    			t1 = text(t1_value);
    			add_location(span, file$2, 6981, 4, 235678);
    		},

    		m: function mount(target, anchor) {
    			insert(target, span, anchor);
    			append(span, t0);
    			append(span, t1);
    		},

    		p: function update(changed, ctx) {
    			if ((changed.issue) && t1_value !== (t1_value = ctx.issue.summary)) {
    				set_data(t1, t1_value);
    			}
    		},

    		d: function destroy(detaching) {
    			if (detaching) {
    				detach(span);
    			}
    		}
    	};
    }

    // (6984:2) {#if issue && issue.status }
    function create_if_block$2(ctx) {
    	var em, t0, t1_value = ctx.issue.status, t1, t2;

    	return {
    		c: function create() {
    			em = element("em");
    			t0 = text("(");
    			t1 = text(t1_value);
    			t2 = text(")");
    			add_location(em, file$2, 6984, 4, 235752);
    		},

    		m: function mount(target, anchor) {
    			insert(target, em, anchor);
    			append(em, t0);
    			append(em, t1);
    			append(em, t2);
    		},

    		p: function update(changed, ctx) {
    			if ((changed.issue) && t1_value !== (t1_value = ctx.issue.status)) {
    				set_data(t1, t1_value);
    			}
    		},

    		d: function destroy(detaching) {
    			if (detaching) {
    				detach(em);
    			}
    		}
    	};
    }

    function create_fragment$5(ctx) {
    	var t0, a, strong, t1, t2, t3, a_href_value, current;

    	var issue_1 = new Issue({
    		props: { key: ctx.key },
    		$$inline: true
    	});
    	issue_1.$on("jira-issue-loaded", ctx.onIssueLoaded);

    	var if_block0 = (ctx.issue && ctx.issue.summary) && create_if_block_1$1(ctx);

    	var if_block1 = (ctx.issue && ctx.issue.status) && create_if_block$2(ctx);

    	return {
    		c: function create() {
    			issue_1.$$.fragment.c();
    			t0 = space();
    			a = element("a");
    			strong = element("strong");
    			t1 = text(ctx.key);
    			t2 = space();
    			if (if_block0) if_block0.c();
    			t3 = space();
    			if (if_block1) if_block1.c();
    			this.c = noop;
    			add_location(strong, file$2, 6979, 2, 235619);
    			a.href = a_href_value = ctx.issue ? ctx.issue.url : '#';
    			a.target = "_blank";
    			a.className = "tag is-rounded";
    			toggle_class(a, "is-warning", ctx.issue && ctx.issue.id);
    			add_location(a, file$2, 6974, 0, 235498);
    		},

    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},

    		m: function mount(target, anchor) {
    			mount_component(issue_1, target, anchor);
    			insert(target, t0, anchor);
    			insert(target, a, anchor);
    			append(a, strong);
    			append(strong, t1);
    			append(a, t2);
    			if (if_block0) if_block0.m(a, null);
    			append(a, t3);
    			if (if_block1) if_block1.m(a, null);
    			current = true;
    		},

    		p: function update(changed, ctx) {
    			var issue_1_changes = {};
    			if (changed.key) issue_1_changes.key = ctx.key;
    			issue_1.$set(issue_1_changes);

    			if (!current || changed.key) {
    				set_data(t1, ctx.key);
    			}

    			if (ctx.issue && ctx.issue.summary) {
    				if (if_block0) {
    					if_block0.p(changed, ctx);
    				} else {
    					if_block0 = create_if_block_1$1(ctx);
    					if_block0.c();
    					if_block0.m(a, t3);
    				}
    			} else if (if_block0) {
    				if_block0.d(1);
    				if_block0 = null;
    			}

    			if (ctx.issue && ctx.issue.status) {
    				if (if_block1) {
    					if_block1.p(changed, ctx);
    				} else {
    					if_block1 = create_if_block$2(ctx);
    					if_block1.c();
    					if_block1.m(a, null);
    				}
    			} else if (if_block1) {
    				if_block1.d(1);
    				if_block1 = null;
    			}

    			if ((!current || changed.issue) && a_href_value !== (a_href_value = ctx.issue ? ctx.issue.url : '#')) {
    				a.href = a_href_value;
    			}

    			if (changed.issue) {
    				toggle_class(a, "is-warning", ctx.issue && ctx.issue.id);
    			}
    		},

    		i: function intro(local) {
    			if (current) return;
    			issue_1.$$.fragment.i(local);

    			current = true;
    		},

    		o: function outro(local) {
    			issue_1.$$.fragment.o(local);
    			current = false;
    		},

    		d: function destroy(detaching) {
    			issue_1.$destroy(detaching);

    			if (detaching) {
    				detach(t0);
    				detach(a);
    			}

    			if (if_block0) if_block0.d();
    			if (if_block1) if_block1.d();
    		}
    	};
    }

    function instance$5($$self, $$props, $$invalidate) {
    	let { key = '' } = $$props;

      let issue;

      function onIssueLoaded(e) {
        $$invalidate('issue', issue = e.detail);
      }
    	const writable_props = ['key'];
    	Object.keys($$props).forEach(key => {
    		if (!writable_props.includes(key) && !key.startsWith('$$')) console.warn(`<jira-issue-tag> was created with unknown prop '${key}'`);
    	});

    	$$self.$set = $$props => {
    		if ('key' in $$props) $$invalidate('key', key = $$props.key);
    	};

    	return { key, issue, onIssueLoaded };
    }

    class IssueTag extends SvelteElement {
    	constructor(options) {
    		super();

    		this.shadowRoot.innerHTML = `<style>@keyframes spinAround{from{transform:rotate(0deg)}to{transform:rotate(359deg)}}*,*::before,*::after{box-sizing:inherit}a{color:#3273dc;cursor:pointer;text-decoration:none}a strong{color:currentColor}a:hover{color:#363636}span{font-style:inherit;font-weight:inherit}strong{color:#363636;font-weight:700}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (min-width: 1024px){}@media screen and (max-width: 1215px){}@media screen and (max-width: 1407px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1408px){}@keyframes moveIndeterminate{from{background-position:200% 0}to{background-position:-200% 0}}.tag:not(body){align-items:center;background-color:whitesmoke;border-radius:4px;color:#4a4a4a;display:inline-flex;font-size:0.75rem;height:2em;justify-content:center;line-height:1.5;padding-left:0.75em;padding-right:0.75em;white-space:nowrap}.tag:not(body).is-warning{background-color:#ffdd57;color:rgba(0, 0, 0, 0.7)}.tag:not(body).is-rounded{border-radius:290486px}a.tag:hover{text-decoration:underline}@media screen and (min-width: 769px), print{}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px), print{}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px), print{}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1408px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 1024px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px) and (max-width: 1023px){}@media screen and (max-width: 1023px){}@media screen and (min-width: 1024px){}@media screen and (min-width: 1024px) and (max-width: 1215px){}@media screen and (min-width: 1216px){}@media screen and (min-width: 1216px) and (max-width: 1407px){}@media screen and (min-width: 1408px){}@media screen and (min-width: 769px), print{}@media screen and (max-width: 1023px){}@media screen and (max-width: 768px){}@media screen and (max-width: 1023px){}@media screen and (max-width: 768px){}@media screen and (max-width: 1023px){}@media screen and (max-width: 768px){}@media screen and (max-width: 1023px){}@media screen and (max-width: 768px){}@media screen and (max-width: 1023px){}@media screen and (max-width: 768px){}@media screen and (max-width: 1023px){}@media screen and (max-width: 768px){}@media screen and (max-width: 1023px){}@media screen and (max-width: 768px){}@media screen and (max-width: 1023px){}@media screen and (max-width: 768px){}@media screen and (max-width: 1023px){}@media screen and (max-width: 768px){}@media screen and (max-width: 1023px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 769px), print{}@media screen and (max-width: 768px){}@media screen and (max-width: 768px){}@media screen and (min-width: 769px), print{}@media screen and (min-width: 1024px){}
		/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */</style>`;

    		init(this, { target: this.shadowRoot }, instance$5, create_fragment$5, safe_not_equal, ["key"]);

    		if (options) {
    			if (options.target) {
    				insert(options.target, this, options.anchor);
    			}

    			if (options.props) {
    				this.$set(options.props);
    				flush();
    			}
    		}
    	}

    	static get observedAttributes() {
    		return ["key"];
    	}

    	get key() {
    		return this.$$.ctx.key;
    	}

    	set key(key) {
    		this.$set({ key });
    		flush();
    	}
    }

    customElements.define("jira-issue-tag", IssueTag);

    const processText = (text) => {
      const matches = /\[JIRA\:([A-Z]+\-[0-9]+)\]/gi.exec(text);
      if (!matches) {
        return text;
      } else {
        text = text.replace(matches[0], `<jira-issue-tag key="${matches[1]}"></jira-issue-tag>`);
      }
      return processText(text);
    };

    /* src/text/TextWrapper.svelte generated by Svelte v3.4.4 */

    const file$3 = "src/text/TextWrapper.svelte";

    function create_fragment$6(ctx) {
    	var div0, slot, t, div1, dispose;

    	return {
    		c: function create() {
    			div0 = element("div");
    			slot = element("slot");
    			t = space();
    			div1 = element("div");
    			this.c = noop;
    			add_location(slot, file$3, 26, 2, 629);
    			div0.className = "jira-text--original";
    			add_location(div0, file$3, 25, 0, 593);
    			div1.className = "jira--text";
    			add_location(div1, file$3, 28, 0, 678);
    			dispose = listen(slot, "slotchange", ctx.processSlot);
    		},

    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},

    		m: function mount(target, anchor) {
    			insert(target, div0, anchor);
    			append(div0, slot);
    			insert(target, t, anchor);
    			insert(target, div1, anchor);
    			div1.innerHTML = ctx.processedText;
    		},

    		p: function update(changed, ctx) {
    			if (changed.processedText) {
    				div1.innerHTML = ctx.processedText;
    			}
    		},

    		i: noop,
    		o: noop,

    		d: function destroy(detaching) {
    			if (detaching) {
    				detach(div0);
    				detach(t);
    				detach(div1);
    			}

    			dispose();
    		}
    	};
    }

    function instance$6($$self, $$props, $$invalidate) {
    	

      let processedText = '';

      function processSlot(e) {
        e.target.assignedNodes().map(el => {
          if (el.nodeType === Node.TEXT_NODE) {
            $$invalidate('processedText', processedText += processText(el.textContent));
          } else if (el.nodeType === Node.ELEMENT_NODE) {
            $$invalidate('processedText', processedText += processText(el.outerHTML));
          } else {
            $$invalidate('processedText', processedText += el.outerHTML);
          }
        });
      }

    	return { processedText, processSlot };
    }

    class TextWrapper extends SvelteElement {
    	constructor(options) {
    		super();

    		this.shadowRoot.innerHTML = `<style>.jira-text--original{display:none}
		/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGV4dFdyYXBwZXIuc3ZlbHRlIiwic291cmNlcyI6WyJUZXh0V3JhcHBlci5zdmVsdGUiXSwic291cmNlc0NvbnRlbnQiOlsiPHNjcmlwdD5cbiAgaW1wb3J0IHsgb25Nb3VudCwgdGljayB9IGZyb20gJ3N2ZWx0ZSc7XG4gIGltcG9ydCB7IHByb2Nlc3NUZXh0IH0gZnJvbSAnLi4vdXRpbHMvaGVscGVycy5qcyc7XG5cbiAgbGV0IHByb2Nlc3NlZFRleHQgPSAnJztcblxuICBmdW5jdGlvbiBwcm9jZXNzU2xvdChlKSB7XG4gICAgZS50YXJnZXQuYXNzaWduZWROb2RlcygpLm1hcChlbCA9PiB7XG4gICAgICBpZiAoZWwubm9kZVR5cGUgPT09IE5vZGUuVEVYVF9OT0RFKSB7XG4gICAgICAgIHByb2Nlc3NlZFRleHQgKz0gcHJvY2Vzc1RleHQoZWwudGV4dENvbnRlbnQpO1xuICAgICAgfSBlbHNlIGlmIChlbC5ub2RlVHlwZSA9PT0gTm9kZS5FTEVNRU5UX05PREUpIHtcbiAgICAgICAgcHJvY2Vzc2VkVGV4dCArPSBwcm9jZXNzVGV4dChlbC5vdXRlckhUTUwpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcHJvY2Vzc2VkVGV4dCArPSBlbC5vdXRlckhUTUw7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbjwvc2NyaXB0PlxuXG48c3R5bGU+LmppcmEtdGV4dC0tb3JpZ2luYWwge1xuICBkaXNwbGF5OiBub25lOyB9XG48L3N0eWxlPlxuXG48c3ZlbHRlOm9wdGlvbnMgdGFnPVwiamlyYS10ZXh0LXdyYXBwZXJcIiAvPlxuXG48ZGl2IGNsYXNzPVwiamlyYS10ZXh0LS1vcmlnaW5hbFwiPlxuICA8c2xvdCBvbjpzbG90Y2hhbmdlPXtwcm9jZXNzU2xvdH0+PC9zbG90PlxuPC9kaXY+XG48ZGl2IGNsYXNzPVwiamlyYS0tdGV4dFwiPlxuICB7QGh0bWwgcHJvY2Vzc2VkVGV4dH1cbjwvZGl2PiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFtQk8sb0JBQW9CLEFBQUMsQ0FBQyxBQUMzQixPQUFPLENBQUUsSUFBSSxBQUFFLENBQUMifQ== */</style>`;

    		init(this, { target: this.shadowRoot }, instance$6, create_fragment$6, safe_not_equal, []);

    		if (options) {
    			if (options.target) {
    				insert(options.target, this, options.anchor);
    			}
    		}
    	}
    }

    customElements.define("jira-text-wrapper", TextWrapper);

    var main = {
      Auth,
      AuthForm,
      AuthUserCard,
      Issue,
      IssueTag,
      TextWrapper,
      Config,
    };

    return main;

}());
//# sourceMappingURL=bundle.js.map
